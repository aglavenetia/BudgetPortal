
@model BudgetPortal.ViewModel.InterimRevision
@using System.Web;

@using BudgetPortal.Entities;
@using Microsoft.AspNetCore.Mvc;

@using Microsoft.AspNetCore.Identity;
@using BudgetPortal.Data;

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "View";
    int OuterHeaderCount = 0;
    int OuterBodyCount = 0;
    int CountHeader = 0;
    int CounterBody = 0;


    Model.SubGroupNameOrLedgerName = new List<String>();
    Model.BudEstCurrFin = new List<Decimal>();
    Model.InterimRev = new List<Decimal>();
    Model.ProvisionalRE = new List<Decimal>();
    
    //Model.File = new List<IFormFile>();

    //Boolean EditStatus = false ;
    
}
<br />

 <div id="outerdiv" style="font-family:Cambria">
    @* <div style="justify-content:center;font-style:oblique;" class="text-success">@Model.ApprovedMessage</div>
    <div style="justify-content:center;font-style:oblique;" class="text-danger">@Model.WaitingForApprovalMessage</div>
    Html.ValidationMessage("BudgetStatus",null,new {@class = "text-success", @style="font-size: 1.5em;font-style: bold;"})*@

    @using (Html.BeginForm(null, null, FormMethod.Post, new { @action = "", enctype = "multipart/form-data", id = "AppForm"}))
    {
        @Html.AntiForgeryToken()
      <div style = "float:right">
           
        <table border="0" cellpadding="5" cellspacing="0" >
          <tr>
                  @if (User.IsInRole("Admin"))
                 {
                    <td>
                        @Html.LabelFor(Model => Model.SelectedDivisionID)                       
                    </td> 
                 }     
                    <td>
                        @Html.LabelFor(Model => Model.SelectedAcademicYearID)
                    </td>
          </tr>
          <tr>
           @if (User.IsInRole("Admin"))
           {
             <td>
                   @Html.DropDownListFor(Model => Model.SelectedDivisionID, Model.DivisionNames,"--Please select any Division--", new { @class = "form-control", @id="Division" })
                   @Html.ValidationMessageFor(Model => Model.SelectedDivisionID,null, new { @class = "text-danger" })
                        
             </td> 
           }       
             <td>
                 @Html.DropDownListFor(Model => Model.SelectedAcademicYearID, Model.AcademicYears,"--Please select any Academic Year--",new { @class = "form-control", @id="AcademicYear" })
                 @Html.ValidationMessageFor(Model => Model.SelectedAcademicYearID,null, new { @class = "text-danger" }) 
              
             </td>
                
          </tr>
        </table>
        
      </div>

      <br />
      <br />
      <br />
      <br />
          
    <ul id="outerTab" class="nav nav-pills" role="tablist" >    
      @foreach (var item in Model.Sectionss)
      {
            var inneridenti = String.Concat("Budget", @item.SectionNo.ToString());

        @if (OuterHeaderCount == 0)
        {
                <li class="nav-item" role="presentation">
                <button class="nav-link active" id="@inneridenti-nav" data-bs-toggle="tab" data-bs-target="#@inneridenti" type="button" role="tab" aria-controls="@inneridenti" aria-selected="true">@item.SectionName</button>
                </li>
        }
        else
        {
            
            <li class="nav-item" role="presentation">
                    <button class="nav-link" id="@inneridenti-nav"  data-bs-toggle="tab" data-bs-target="#@inneridenti" type="button" role="tab" aria-controls="@inneridenti" aria-selected="false">@item.SectionName</button>
            </li>
        }

        OuterHeaderCount++;
      }
    </ul>

    <div id="outerTabContent" class="tab-content">
       <br />  
       @Html.Hidden("SectionName",Model.SectionName, new{@id = "SectionName" })
       @Html.Hidden("GroupName",Model.GroupName,  new{@id = "GroupName" })
       @Html.Hidden("SubGroupLedgerName",Model.SubGroupLedgerName,  new{@id = "SubGroupLedgerName" })
       @Html.Hidden("EditEnabled",Model.EditEnabled,  new{@id = "EditEnabled" })

       @Html.Hidden("SelectedAcademicYear", Model.SelectedAcademicYear,  new{@id = "SelectedAcademicYear" })
       @Html.Hidden("SelectedDivisionName",Model.SelectedDivisionName,  new{@id = "SelectedDivisionName" })

       @foreach (var inner in Model.Sectionss)
       {
           var inneridenti = String.Concat("Budget", @inner.SectionNo.ToString());
           CountHeader = 0;
           CounterBody = 0;
           int Count = 0;
           int LedgerNo = 0;

           @if (OuterBodyCount == 0)
           {
            <div id="@inneridenti" class="tab-pane fade show active" role="tabpanel" aria-labelledby="@inneridenti-tab" aria-selected="true" style="width: 1750px;">
                
                <ul id="innertab1" class="nav nav-pills nav-justified" role="tablist">
                    @foreach (var item in Model.Groupss.Where(d => d.SectionNo == @inner.SectionNo))
                    {                           
                        var identi = String.Concat("Budget", Convert.ToInt32((Convert.ToDecimal(@item.GroupNo) * 10)).ToString());
                        
                        @if (CountHeader == 0)
                        {
                            <li class="nav-item" role="presentation">
                                        <button class="nav-link active" id="@identi-nav" data-bs-toggle="tab" data-bs-target="#@identi" type="button" role="tab" aria-controls="@identi" aria-selected="true">@item.GroupName</button>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item" role="presentation">
                                        <button class="nav-link" id="@identi-nav" data-bs-toggle="tab" data-bs-target="#@identi" type="button" role="tab" aria-controls="@identi" aria-selected="false">@item.GroupName</button>
                            </li>
                        }

                        CountHeader++;
                    }
                </ul>

                <div id="innertabcontent1" class="tab-content">
                    <br />

                    @foreach (var item in Model.Groupss.Where(d => d.SectionNo == @inner.SectionNo))
                    {
                        int TableCount = 0;
                        
                        var identi = String.Concat("Budget", Convert.ToInt32((Convert.ToDecimal(@item.GroupNo) * 10)).ToString());
                        
                         var SumBudEstCurrFin = (from a in Model.Approved where a.GroupNumber.Equals(@item.GroupNo) select a.BudEstNextFin).Sum();
                         var SumInterimRev = (from a in Model.Detailss where a.GroupNumber.Equals(@item.GroupNo) select a.InterimRevEst).Sum();
                         var SumProvisionalRE = (from a in Model.Detailss where a.GroupNumber.Equals(@item.GroupNo) select a.ProvisionalRevEst).Sum();

                         var Sumname1 = String.Concat("SumBudEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                         var Sumname2 = String.Concat("SumInterimRev", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                         var Sumname3 = String.Concat("SumProvisionalRE", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);

                        @if (CounterBody == 0)
                        {
                                                   
                            <div id="@identi" class="tab-pane fade show active" role="tabpanel" aria-labelledby="@identi-tab" style="width: 1750px;">
                               
                                <table id="@identi-outertable" class="table table-responsive table-hover">
                                    <thead>
                                        <tr class="text-center">
                                           <th colspan="100" style="color:red;border-bottom:hidden;">(*FIGURES IN CRORES)</th>
                                        </tr>
                                        <tr>
                                            <th></th>
                                            <th class="w-5">
                                                HEAD NO.
                                            </th>
                                            <th class="w-5">
                                                SUBHEAD NO.
                                            </th>
                                            <th class="w-5">
                                                HEAD NAME
                                            </th>
                                            <th class="CurrentBudgetEstimates w-10" >
                                            </th>
                                            <th class="InterimRevision w-10" >
                                            </th>
                                            <th class="ProvisionalRevisedEstimates w-10" >
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody> 
                                        
                                        @foreach (var Subs in Model.SubGroupss.Where(d => d.GroupNo.Equals(@item.GroupNo)))
                                        {
                                                    var details = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a).FirstOrDefault();
                                                    var PrevYearApp =  (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a).FirstOrDefault();
                                                    

                                                    var name1 = String.Concat("BudEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name2 = String.Concat("InterimRev", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name3 = String.Concat("ProvisionalRE", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);

                                                    var save = String.Concat("Save", @inner.SectionNo.ToString(),"_",@Subs.SubGroupNo, @TableCount);
                                                    var edit = String.Concat("Edit", @inner.SectionNo.ToString(), "_",@Subs.SubGroupNo, @TableCount);
                                                    var delete = String.Concat("Delete", @inner.SectionNo.ToString(), "_",@Subs.SubGroupNo, @TableCount);

                                                    var LedgerCount = (from a in Model.Ledgerss where a.SubGroupNo.Equals(@Subs.SubGroupNo) select a.LedgerNo).Count();
                                                    
                                                     
                                                    <tr>
                                                        
                                                        <td class="w-5">
                                                            @if(LedgerCount > 0)
                                                            {
                                                                <img src="~/Images/plus.png" />
                                                               <div id="NestedTable" style="display:none"> 
                                                               @if(@Subs.RequireInput)
                                                               {
                                                                 LedgerNo = Count;

                                                                <table class="table ChildGrid">                                                 
                                                                       @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                                                                       {

                                                                         var Ledgerdetails = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a).FirstOrDefault();
                                                                         var LedPrevYearApp = (from a in Model.Approved where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a).FirstOrDefault(); 
                                                                          
                                                                          save = String.Concat("Save", @inner.SectionNo.ToString(),"_",@Ledgers.LedgerNo, @TableCount);
                                                                          edit = String.Concat("Edit", @inner.SectionNo.ToString(),"_",@Ledgers.LedgerNo, @TableCount);
                                                                          delete = String.Concat("Delete", @inner.SectionNo.ToString(),"_",@Ledgers.LedgerNo, @TableCount);
                                                                            <tr>
                                                                                <td></td>
                                                                                <td>
                                                                                    @{
                                                                                        Model.SubGroupNameOrLedgerName.Insert(LedgerNo, Ledgers.LedgerNo);
                                                                                     }

                                                                                     @Html.DisplayFor(model => model.SubGroupNameOrLedgerName[LedgerNo])


                                                                                    @Html.HiddenFor(model => model.SubGroupNameOrLedgerName[LedgerNo])
                                                                                 </td>
                                                                                <td>@Ledgers.LedgerName</td>
                                                                                <td>
                                                                                            <div class="form-group">
                                                                                                @{
                                                                                                  Model.BudEstCurrFin.Insert(LedgerNo, LedPrevYearApp != null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F")) : Convert.ToDecimal(0.0000));
                                                                                                }
                                                                                                @Html.TextBoxFor(model => model.BudEstCurrFin[LedgerNo], new { @class = "form-control", @id = @name1 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                                                @Html.ValidationMessageFor(model => model.BudEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                </td>
                                                                                <td>
                                                                                    @if (!Model.IsEnabled || (Model.IsEnabled && Ledgerdetails!=null && Model.EditEnabled!=Ledgers.LedgerNo))
                                                                                    {
                                                                                        <div class="form-group"> 
                                                                                          @{
                                                                                            Model.InterimRev.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.InterimRevEst.ToString("F")) : Convert.ToDecimal(0.0000));
                                                                                           } 
                                                                                            @Html.TextBoxFor(model => model.InterimRev[LedgerNo], new { @class = "form-control", @id = @name2 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                                            @Html.ValidationMessageFor(model => model.InterimRev[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>  
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                       <div class="form-group">
                                                                                           @{
                                                                                              Model.InterimRev.Insert(LedgerNo,Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.InterimRevEst.ToString("F")) : Convert.ToDecimal(0.0000));
                                                                                            }
                                                                                                @Html.TextBoxFor(model => model.InterimRev[LedgerNo], new { @class = "form-control", @id = @name2 + @Ledgers.LedgerNo })
                                                                                                @Html.ValidationMessageFor(model => model.InterimRev[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                      </div>  
                                                                                       
                                                                                    }
                                                                                </td>
                                                                                <td>
                                                                                       <div class="form-group">
                                                                                           @{
                                                                                               Model.ProvisionalRE.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ProvisionalRevEst.ToString("F")) : Convert.ToDecimal(0.0000));
                                                                                            }
                                                                                               @Html.TextBoxFor(model => model.ProvisionalRE[LedgerNo], new { @class = "form-control", @id = @name3 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                                               @Html.ValidationMessageFor(model => model.ProvisionalRE[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                      </div>  
                                                                                </td>
                                                                                @if(Model.IsEnabled && Ledgerdetails == null || (Model.IsEnabled && Model.EditEnabled==Ledgers.LedgerNo))
                                                                                {
                                                                                <td>
                                                                                   <button style="border:none;background-color:white" id="@save" class="Submit" formaction="InterimRev" type="submit" value="Save Budget" style="align-self:center">
                                                                                   <i class='bx bx-check' style="color:limegreen"></i></button>
                                                                                </td>
                                                                                }
                                                                                @if(Model.IsEnabled && Ledgerdetails != null && Model.EditEnabled!=Ledgers.LedgerNo)
                                                                                {
                                                                                <td>
                                                                                   <button style="border:none;background-color:white" id="@edit" class="Submit" formaction="Edit" type="submit" value="Edit Budget" style="align-self:center">
                                                                                   <i class='bx bxs-pencil' style="color:blue"></i></button>
                                                                               </td>
                                                                                }
                                                                                @if(Model.IsEnabled && Ledgerdetails != null)
                                                                                {
                                                                                <td>
                                                                                    <button style="border:none;background-color:white" id="@delete" class="Submit" formaction="Delete" type="submit" value="Delete Budget" style="align-self:center">
                                                                                    <i class='bx bx-x' style="color:red"></i>     
                                                                                    </button>
                                                                               </td>
                                                                                }
                                                                             </tr>
                                                                            
                                                                        LedgerNo++;
                                                                       }
                                                                        </table>
                                                                        Count = LedgerNo;
                                                               }
                                                               else
                                                               {
                                                                <table class="table ChildGrid">                                                                     
                                                                      @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                                                                      {
                                                                        <tr>
                                                                            <td></td>
                                                                            <td>
                                                                                @Ledgers.LedgerNo
                                                                            </td>
                                                                            <td>@Ledgers.LedgerName</td>
                                                                        </tr>
                                                                      }
                                                                </table>
                                                               }
                                                               </div>
                                                               
                                                            }
                                                        </td>
                                                        <td class="w-5">
                                                            @{
                                                              Model.SubGroupNameOrLedgerName.Insert(Count, Subs.SubGroupNo);
                                                             }

                                                            @Html.DisplayFor(model => model.SubGroupNameOrLedgerName[Count])
                                                            @Html.HiddenFor(model => model.SubGroupNameOrLedgerName[Count])
                                                        </td>
                                                        <td class="w-5"></td>
                                                        <td class="w-5">
                                                            @Subs.subGroupName
                                                        </td>
                                                        <td class="w-5">
                                                        
                                                        @if (@Subs.RequireInput)
                                                        {
                                                            var LedgerPastYearAppBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();

                                                                <div class="form-group"> 
                                                                 @{
                                                                        Model.BudEstCurrFin.Insert(Count, LedgerPastYearAppBudEstCurrFin != null ? Convert.ToDecimal(LedgerPastYearAppBudEstCurrFin) : Convert.ToDecimal(0.0000));
                                                                   }
                                                                 @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @class = "form-control", @id = @name1, @readonly = "readonly"} )
                                                                 @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})

                                                                </div>
                                                        }
                                                        else
                                                        {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.BudEstCurrFin.Insert(Count,(PrevYearApp != null) ? Convert.ToDecimal(PrevYearApp.BudEstNextFin) : Convert.ToDecimal(0.0000));
                                                                     }
                                                                    @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @class = "form-control", @id = @name1, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})

                                                                </div>
                                                        }
                                                        </td>
                                                        <td class="w-5">
                                                        @if (@Subs.RequireInput)
                                                        {
                                                            var LedgerSumInterimRev = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.InterimRevEst).Sum();
                                                            <div class="form-group">  
                                                               @{
                                                                  Model.InterimRev.Insert(Count, LedgerSumInterimRev != null ? Convert.ToDecimal(LedgerSumInterimRev) : Convert.ToDecimal(0.0000));
                                                                }   
                                                                @Html.TextBoxFor(model => model.InterimRev[Count], new { @class = "form-control", @id = @name2, @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.InterimRev[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                            
                                                        }
                                                        else if (!Model.IsEnabled || (Model.IsEnabled && details!=null && Model.EditEnabled!=Subs.SubGroupNo))
                                                        {
                                                               <div class="form-group">
                                                               @{
                                                                  Model.InterimRev.Insert(Count, details != null ? Convert.ToDecimal(details.InterimRevEst) : Convert.ToDecimal(0.0000));
                                                                }
                                                                @Html.TextBoxFor(model => model.InterimRev[Count], new { @class = "form-control", @id = @name2, @readonly = "readonly" })
                                                                @Html.ValidationMessageFor(model => model.InterimRev[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                                
                                                        }
                                                        else
                                                        {
                                                            <div class="form-group">
                                                               @{
                                                                  Model.InterimRev.Insert(Count, details != null ? Convert.ToDecimal(details.InterimRevEst) : Convert.ToDecimal(0.0000));
                                                                }
                                                                @Html.TextBoxFor(model => model.InterimRev[Count], new { @class = "form-control", @id = @name2 })
                                                                @Html.ValidationMessageFor(model => model.InterimRev[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                            
                                                        }
                                                        </td>
                                                        <td class="w-5">
                                                        @if (@Subs.RequireInput)
                                                        {
                                                                var LedgerSumProvisionalRE = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ProvisionalRevEst).Sum();
                                                             <div class="form-group">
                                                               @{
                                                                  Model.ProvisionalRE.Insert(Count, LedgerSumProvisionalRE != null ? Convert.ToDecimal(LedgerSumProvisionalRE) : Convert.ToDecimal(0.0000));
                                                                 }
                                                                 @Html.TextBoxFor(model => model.ProvisionalRE[Count], new { @class = "form-control", @id = @name3, @readonly = "readonly"})
                                                                 @Html.ValidationMessageFor(model => model.ProvisionalRE[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                
                                                            }
                                                        else 
                                                        {                                       
                                                              <div class="form-group">
                                                                @{
                                                                   Model.ProvisionalRE.Insert(Count, details != null ? Convert.ToDecimal(details.ProvisionalRevEst) : Convert.ToDecimal(0.0000));
                                                                 }
                                                                  @Html.TextBoxFor(model => model.ProvisionalRE[Count], new { @class = "form-control", @id = @name3, @readonly = "readonly"})
                                                                 @Html.ValidationMessageFor(model => model.ProvisionalRE[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                
                                                            }
                                                       
                                                        </td>
                                                        @if ((!@Subs.RequireInput && Model.IsEnabled && details == null) || (Model.IsEnabled && Model.EditEnabled==Subs.SubGroupNo))
                                                        {
                                                            <td>
                                                                <button style="border:none;background-color:white" id="@save" class="Submit" formaction="InterimRev" type="submit" value="Save Budget" style="align-self:center">
                                                                <i class='bx bx-check' style="color:limegreen"></i></button>
                                                            </td>
                                                        }
                                                        @if ((!@Subs.RequireInput && Model.IsEnabled && details!=null && Model.EditEnabled!=Subs.SubGroupNo)) 
                                                        {
                                                             <td>
                                                                 <button style="border:none;background-color:white" id="@edit" class="Submit" formaction="Edit" type="submit" value="Edit Budget" style="align-self:center">
                                                                  <i class='bx bxs-pencil' style="color:blue"></i></button>
                                                             </td>
                                                        }
                                                        @if (!@Subs.RequireInput && Model.IsEnabled && details!=null)
                                                        {
                                                             <td>
                                                                  <button style="border:none;background-color:white" id="@delete" class="Submit" formaction="Delete" type="submit" value="Delete Budget" style="align-self:center">
                                                                  <i class='bx bx-x' style="color:red"></i></button>     
                                                             </td>
                                                        }
                                                     }
                                                    </tr>

                                                    Count++;
                                                    TableCount++;
                                        }
                                                <tr>
                                                    <td>
                                                    </td>
                                                    <td class="w-5">
                                                    </td>
                                                    <td class="w-5">
                                                        Sub-Total
                                                    </td>
                                                    <td class="w-5">
                                                        Sub-Total
                                                    </td>

                                                    <td class="w-5" id="@Sumname1-Total">
                                                        @SumBudEstCurrFin.ToString("F4")
                                                    </td>
                                                    <td class="w-5" id="@Sumname2-Total">
                                                       @SumInterimRev.ToString("F4")
                                                    </td>
                                                    <td class="w-5" id="@Sumname3-Total">
                                                       @SumProvisionalRE.ToString("F4")
                                                    </td>
                                                </tr>
                                    </tbody>
                                </table>
                            </div>
                          
                        }
                        else
                        {
                                                    
                            <div id="@identi" class="tab-pane fade" role="tabpanel" aria-labelledby="@identi-tab" style="width: 1750px;">
                                
                                
                                       <table id="@identi-outertable" class="table table-responsive table-hover">
                                    <thead>
                                        <tr class="text-center">
                                           <th colspan="100" style="color:red;border-bottom:hidden;">(*FIGURES IN CRORES)</th>
                                        </tr>
                                        <tr>
                                            <th></th>
                                            <th class="w-5">
                                                HEAD NO.
                                            </th>
                                            <th class="w-5">
                                                SUBHEAD NO.
                                            </th>
                                            <th class="w-5">
                                                HEAD NAME
                                            </th>
                                            <th class="CurrentBudgetEstimates w-10" >
                                            </th>
                                            <th class="InterimRevision w-10" >
                                            </th>
                                            <th class="ProvisionalRevisedEstimates w-10" >
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody> 
                                        
                                        @foreach (var Subs in Model.SubGroupss.Where(d => d.GroupNo.Equals(@item.GroupNo)))
                                        {
                                                    var details = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a).FirstOrDefault();
                                                    var PrevYearApp =  (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a).FirstOrDefault();
                                                    

                                                    var name1 = String.Concat("BudEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name2 = String.Concat("InterimRev", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name3 = String.Concat("ProvisionalRE", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);

                                                    var save = String.Concat("Save", @inner.SectionNo.ToString(), "_",@Subs.SubGroupNo, @TableCount);
                                                    var edit = String.Concat("Edit", @inner.SectionNo.ToString(), "_",@Subs.SubGroupNo, @TableCount);
                                                    var delete = String.Concat("Delete", @inner.SectionNo.ToString(), "_",@Subs.SubGroupNo, @TableCount);

                                                    var LedgerCount = (from a in Model.Ledgerss where a.SubGroupNo.Equals(@Subs.SubGroupNo) select a.LedgerNo).Count();
                                                    
                                                     
                                                    <tr>
                                                        
                                                        <td class="w-5">
                                                            @if(LedgerCount > 0)
                                                            {
                                                                <img src="~/Images/plus.png" />
                                                               <div id="NestedTable" style="display:none"> 
                                                               @if(@Subs.RequireInput)
                                                               {
                                                                 LedgerNo = Count;

                                                                <table class="table ChildGrid">                                                 
                                                                       @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                                                                       {

                                                                         var Ledgerdetails = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a).FirstOrDefault();
                                                                         var LedPrevYearApp = (from a in Model.Approved where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a).FirstOrDefault(); 
                                                                          
                                                                           save = String.Concat("Save", @inner.SectionNo.ToString(),"_",@Ledgers.LedgerNo, @TableCount);
                                                                           edit = String.Concat("Edit", @inner.SectionNo.ToString(),"_",@Ledgers.LedgerNo, @TableCount);
                                                                           delete = String.Concat("Delete", @inner.SectionNo.ToString(),"_",@Ledgers.LedgerNo, @TableCount);
                                                                            <tr>
                                                                                <td></td>
                                                                                <td>
                                                                                    @{
                                                                                        Model.SubGroupNameOrLedgerName.Insert(LedgerNo, Ledgers.LedgerNo);
                                                                                     }

                                                                                     @Html.DisplayFor(model => model.SubGroupNameOrLedgerName[LedgerNo])


                                                                                    @Html.HiddenFor(model => model.SubGroupNameOrLedgerName[LedgerNo])
                                                                                 </td>
                                                                                <td>@Ledgers.LedgerName</td>
                                                                                <td>
                                                                                            <div class="form-group">
                                                                                                @{
                                                                                                  Model.BudEstCurrFin.Insert(LedgerNo, LedPrevYearApp != null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F")) : Convert.ToDecimal(0.0000));
                                                                                                }
                                                                                                @Html.TextBoxFor(model => model.BudEstCurrFin[LedgerNo], new { @class = "form-control", @id = @name1 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                                                @Html.ValidationMessageFor(model => model.BudEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                <td>
                                                                                    @if (!Model.IsEnabled || (Model.IsEnabled && Ledgerdetails!=null))
                                                                                    {
                                                                                        <div class="form-group"> 
                                                                                          @{
                                                                                            Model.InterimRev.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.InterimRevEst.ToString("F")) : Convert.ToDecimal(0.0000));
                                                                                           } 
                                                                                            @Html.TextBoxFor(model => model.InterimRev[LedgerNo], new { @class = "form-control", @id = @name2 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                                            @Html.ValidationMessageFor(model => model.InterimRev[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>  
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                       <div class="form-group">
                                                                                           @{
                                                                                              Model.InterimRev.Insert(LedgerNo,Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.InterimRevEst.ToString("F")) : Convert.ToDecimal(0.0000));
                                                                                            }
                                                                                                @Html.TextBoxFor(model => model.InterimRev[LedgerNo], new { @class = "form-control", @id = @name2 + @Ledgers.LedgerNo })
                                                                                                @Html.ValidationMessageFor(model => model.InterimRev[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                      </div>  
                                                                                       
                                                                                    }
                                                                                </td>
                                                                                <td>
                                                                                       <div class="form-group">
                                                                                           @{
                                                                                               Model.ProvisionalRE.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ProvisionalRevEst.ToString("F")) : Convert.ToDecimal(0.0000));
                                                                                            }
                                                                                               @Html.TextBoxFor(model => model.ProvisionalRE[LedgerNo], new { @class = "form-control", @id = @name3 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                                               @Html.ValidationMessageFor(model => model.ProvisionalRE[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                      </div>  
                                                                                </td>
                                                                                @if(Model.IsEnabled && Ledgerdetails == null || (Model.IsEnabled && Model.EditEnabled==Ledgers.LedgerNo))
                                                                                {
                                                                                <td>
                                                                                   <button style="border:none;background-color:white" id="@save" class="Submit" formaction="InterimRev" type="submit" value="Save Budget" style="align-self:center">
                                                                                   <i class='bx bx-check' style="color:limegreen"></i></button>
                                                                                </td>
                                                                                }
                                                                                @if(Model.IsEnabled && Ledgerdetails != null && Model.EditEnabled!=Ledgers.LedgerNo)
                                                                                {
                                                                                <td>
                                                                                   <button style="border:none;background-color:white" id="@edit" class="Submit" formaction="Edit" type="submit" value="Edit Budget" style="align-self:center">
                                                                                   <i class='bx bxs-pencil' style="color:blue"></i></button>
                                                                               </td>
                                                                                }
                                                                                @if(Model.IsEnabled && Ledgerdetails != null)
                                                                                {
                                                                                <td>
                                                                                    <button style="border:none;background-color:white" id="@delete" class="Submit" formaction="Delete" type="submit" value="Delete Budget" style="align-self:center">
                                                                                    <i class='bx bx-x' style="color:red"></i>     
                                                                                    </button>
                                                                               </td>
                                                                                }
                                                                             </tr>
                                                                            
                                                                        LedgerNo++;
                                                                       }
                                                                        </table>
                                                                        Count = LedgerNo;
                                                               }
                                                               else
                                                               {
                                                                <table class="table ChildGrid">                                                                     
                                                                      @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                                                                      {
                                                                        <tr>
                                                                            <td></td>
                                                                            <td>
                                                                                @Ledgers.LedgerNo
                                                                            </td>
                                                                            <td>@Ledgers.LedgerName</td>
                                                                        </tr>
                                                                      }
                                                                </table>
                                                               }
                                                               </div>
                                                               
                                                            }
                                                        </td>
                                                        <td class="w-5">
                                                            @{
                                                              Model.SubGroupNameOrLedgerName.Insert(Count, Subs.SubGroupNo);
                                                             }

                                                            @Html.DisplayFor(model => model.SubGroupNameOrLedgerName[Count])
                                                            @Html.HiddenFor(model => model.SubGroupNameOrLedgerName[Count])
                                                        </td>
                                                        <td class="w-5"></td>
                                                        <td class="w-5">
                                                            @Subs.subGroupName
                                                        </td class="w-5">
                                                        <td class="w-5">
                                                        
                                                        @if (@Subs.RequireInput)
                                                        {
                                                            var LedgerPastYearAppBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();

                                                                <div class="form-group"> 
                                                                 @{
                                                                        Model.BudEstCurrFin.Insert(Count, LedgerPastYearAppBudEstCurrFin != null ? Convert.ToDecimal(LedgerPastYearAppBudEstCurrFin) : Convert.ToDecimal(0.0000));
                                                                   }
                                                                 @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @class = "form-control", @id = @name1, @readonly = "readonly"} )
                                                                 @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})

                                                                </div>
                                                        }
                                                        else
                                                        {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.BudEstCurrFin.Insert(Count,(PrevYearApp != null) ? Convert.ToDecimal(PrevYearApp.BudEstNextFin) : Convert.ToDecimal(0.0000));
                                                                     }
                                                                    @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @class = "form-control", @id = @name1, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})

                                                                </div>
                                                        }
                                                        </td>
                                                        <td class="w-5">
                                                        @if (@Subs.RequireInput)
                                                        {
                                                            var LedgerSumInterimRev = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.InterimRevEst).Sum();
                                                            <div class="form-group">  
                                                               @{
                                                                  Model.InterimRev.Insert(Count, LedgerSumInterimRev != null ? Convert.ToDecimal(LedgerSumInterimRev) : Convert.ToDecimal(0.0000));
                                                                }   
                                                                @Html.TextBoxFor(model => model.InterimRev[Count], new { @class = "form-control", @id = @name2, @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.InterimRev[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                            
                                                        }
                                                        else if (!Model.IsEnabled || (Model.IsEnabled && details!=null))
                                                        {
                                                               <div class="form-group">
                                                               @{
                                                                  Model.InterimRev.Insert(Count, details != null ? Convert.ToDecimal(details.InterimRevEst) : Convert.ToDecimal(0.0000));
                                                                }
                                                                @Html.TextBoxFor(model => model.InterimRev[Count], new { @class = "form-control", @id = @name2, @readonly = "readonly"} )
                                                                @Html.ValidationMessageFor(model => model.InterimRev[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                                
                                                        }
                                                        else
                                                        {
                                                            <div class="form-group">
                                                               @{
                                                                  Model.InterimRev.Insert(Count, details != null ? Convert.ToDecimal(details.InterimRevEst) : Convert.ToDecimal(0.0000));
                                                                }
                                                                @Html.TextBoxFor(model => model.InterimRev[Count], new { @class = "form-control", @id = @name2 })
                                                                @Html.ValidationMessageFor(model => model.InterimRev[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                            
                                                        }
                                                        </td>
                                                        <td class="w-5">
                                                        @if (@Subs.RequireInput)
                                                        {
                                                                var LedgerSumProvisionalRE = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ProvisionalRevEst).Sum();
                                                             <div class="form-group">
                                                               @{
                                                                  Model.ProvisionalRE.Insert(Count, LedgerSumProvisionalRE != null ? Convert.ToDecimal(LedgerSumProvisionalRE) : Convert.ToDecimal(0.0000));
                                                                 }
                                                                 @Html.TextBoxFor(model => model.ProvisionalRE[Count], new { @class = "form-control", @id = @name3, @readonly = "readonly"})
                                                                 @Html.ValidationMessageFor(model => model.ProvisionalRE[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                
                                                            }
                                                        else 
                                                        {                                       
                                                              <div class="form-group">
                                                                @{
                                                                   Model.ProvisionalRE.Insert(Count, details != null ? Convert.ToDecimal(details.ProvisionalRevEst) : Convert.ToDecimal(0.0000));
                                                                 }
                                                                  @Html.TextBoxFor(model => model.ProvisionalRE[Count], new { @class = "form-control", @id = @name3, @readonly = "readonly"})
                                                                 @Html.ValidationMessageFor(model => model.ProvisionalRE[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                
                                                            }
                                                       
                                                        </td>
                                                        @if ((!@Subs.RequireInput && Model.IsEnabled && details == null) || (Model.IsEnabled && Model.EditEnabled==Subs.SubGroupNo))
                                                        {
                                                            <td>
                                                                <button style="border:none;background-color:white" id="@save" class="Submit" formaction="InterimRev" type="submit" value="Save Budget" style="align-self:center">
                                                                <i class='bx bx-check' style="color:limegreen"></i></button>
                                                            </td>
                                                        }
                                                        @if ((!@Subs.RequireInput && Model.IsEnabled && details!=null && Model.EditEnabled!=Subs.SubGroupNo)) 
                                                        {
                                                             <td>
                                                                 <button style="border:none;background-color:white" id="@edit" class="Submit" formaction="Edit" type="submit" value="Edit Budget" style="align-self:center">
                                                                  <i class='bx bxs-pencil' style="color:blue"></i></button>
                                                             </td>
                                                        }
                                                        @if (!@Subs.RequireInput && Model.IsEnabled && details!=null)
                                                        {
                                                             <td>
                                                                  <button style="border:none;background-color:white" id="@delete" class="Submit" formaction="Delete" type="submit" value="Delete Budget" style="align-self:center">
                                                                  <i class='bx bx-x' style="color:red"></i></button>     
                                                             </td>
                                                        }
                                                     }
                                                    </tr>

                                                    Count++;
                                                    TableCount++;
                                        }
                                                <tr>
                                                    <td>
                                                    </td>
                                                    <td class="w-5">
                                                    </td>
                                                    <td class="w-5">
                                                        Sub-Total
                                                    </td>
                                                    <td class="w-5">
                                                        Sub-Total
                                                    </td>

                                                    <td class="w-5" id="@Sumname1-Total">
                                                        @SumBudEstCurrFin.ToString("F4")
                                                    </td>
                                                    <td class="w-5" id="@Sumname2-Total">
                                                       @SumInterimRev.ToString("F4")
                                                    </td>
                                                    <td class="w-5" id="@Sumname3-Total">
                                                       @SumProvisionalRE.ToString("F4")
                                                    </td>
                                                </tr>
                                    </tbody>
                                </table>
                                        
                            </div>
                          
                        }
                       CounterBody++;
                    }
                  
                </div>
            </div>
          }

           else
           {
                <div id="@inneridenti" class="tab-pane fade" role="tabpanel" aria-labelledby="@inneridenti-tab" aria-selected="false" style="width: 1750px;">
               
                <ul id="innertab2" class="nav nav-pills" role="tablist">

                    @foreach (var item in Model.Groupss.Where(d => d.SectionNo == @inner.SectionNo))
                    {
                        var identi = String.Concat("Budget", Convert.ToInt32((Convert.ToDecimal(@item.GroupNo) * 10)).ToString());
                        @if (CountHeader == 0)
                        {
                            <li class="nav-item" role="presentation">
                                <button class="nav-link active" id="@identi-nav" data-bs-toggle="tab" data-bs-target="#@identi" type="button" role="tab" aria-controls="@identi" aria-selected="true">@item.GroupName</button>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item" role="presentation">
                                        <button class="nav-link" id="@identi-nav" data-bs-toggle="tab" data-bs-target="#@identi" type="button" role="tab" aria-controls="@identi" aria-selected="false">@item.GroupName</button>
                            </li>
                        }

                        CountHeader++;
                    }
                </ul>

                <div id="innertabcontent2" class="tab-content">
                    <br />
                    @foreach (var item in Model.Groupss.Where(d => d.SectionNo == @inner.SectionNo))
                    {
                          int TableCount = 0;
                        
                        var identi = String.Concat("Budget", Convert.ToInt32((Convert.ToDecimal(@item.GroupNo) * 10)).ToString());
                        
                         var SumBudEstCurrFin = (from a in Model.Approved where a.GroupNumber.Equals(@item.GroupNo) select a.BudEstNextFin).Sum();
                         var SumInterimRev = (from a in Model.Detailss where a.GroupNumber.Equals(@item.GroupNo) select a.InterimRevEst).Sum();
                         var SumProvisionalRE = (from a in Model.Detailss where a.GroupNumber.Equals(@item.GroupNo) select a.ProvisionalRevEst).Sum();

                         var Sumname1 = String.Concat("SumBudEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                         var Sumname2 = String.Concat("SumInterimRev", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                         var Sumname3 = String.Concat("SumProvisionalRE", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);

                          @if (CounterBody == 0)
                          {
                              <div id="@identi" class="tab-pane fade show active" role="tabpanel" aria-labelledby="@identi-tab" style="width: 1750px;">
                               
                                       <table id="@identi-outertable" class="table table-responsive table-hover">
                                    <thead>
                                        <tr class="text-center">
                                           <th colspan="100" style="color:red;border-bottom:hidden;">(*FIGURES IN CRORES)</th>
                                        </tr>
                                        <tr>
                                            <th></th>
                                            <th class="w-5">
                                                HEAD NO.
                                            </th>
                                            <th class="w-5">
                                                SUBHEAD NO.
                                            </th>
                                            <th class="w-5">
                                                HEAD NAME
                                            </th>
                                            <th class="CurrentBudgetEstimates w-10" >
                                            </th>
                                            <th class="InterimRevision w-10" >
                                            </th>
                                            <th class="ProvisionalRevisedEstimates w-10" >
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody> 
                                        
                                        @foreach (var Subs in Model.SubGroupss.Where(d => d.GroupNo.Equals(@item.GroupNo)))
                                        {
                                                    
                                                    var details = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a).FirstOrDefault();
                                                    var PrevYearApp =  (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a).FirstOrDefault();
                                                    

                                                    var name1 = String.Concat("BudEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name2 = String.Concat("InterimRev", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name3 = String.Concat("ProvisionalRE", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);

                                                   
                                                    var save = String.Concat("Save", @inner.SectionNo.ToString(), "_",@Subs.SubGroupNo, @TableCount);
                                                    var edit = String.Concat("Edit", @inner.SectionNo.ToString(), "_",@Subs.SubGroupNo, @TableCount);
                                                    var delete = String.Concat("Delete", @inner.SectionNo.ToString(), "_",@Subs.SubGroupNo, @TableCount);

                                                    var LedgerCount = (from a in Model.Ledgerss where a.SubGroupNo.Equals(@Subs.SubGroupNo) select a.LedgerNo).Count();
                                                    
                                                     
                                                    <tr>
                                                        
                                                        <td class="w-5">
                                                            @if(LedgerCount > 0)
                                                            {
                                                                <img src="~/Images/plus.png" />
                                                               <div id="NestedTable" style="display:none"> 
                                                               @if(@Subs.RequireInput)
                                                               {
                                                                 LedgerNo = Count;

                                                                <table class="table ChildGrid">                                                 
                                                                       @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                                                                       {

                                                                         var Ledgerdetails = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a).FirstOrDefault();
                                                                         var LedPrevYearApp = (from a in Model.Approved where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a).FirstOrDefault(); 
                                                                          
                                                                          save = String.Concat("Save", @inner.SectionNo.ToString(),"_",@Ledgers.LedgerNo, @TableCount);
                                                                          edit = String.Concat("Edit", @inner.SectionNo.ToString(),"_",@Ledgers.LedgerNo, @TableCount);
                                                                          delete = String.Concat("Delete", @inner.SectionNo.ToString(),"_",@Ledgers.LedgerNo, @TableCount);
                                                                            <tr>
                                                                                <td></td>
                                                                                <td>
                                                                                    @{
                                                                                        Model.SubGroupNameOrLedgerName.Insert(LedgerNo, Ledgers.LedgerNo);
                                                                                     }

                                                                                     @Html.DisplayFor(model => model.SubGroupNameOrLedgerName[LedgerNo])


                                                                                    @Html.HiddenFor(model => model.SubGroupNameOrLedgerName[LedgerNo])
                                                                                 </td>
                                                                                <td>@Ledgers.LedgerName</td>
                                                                                <td>
                                                                                            <div class="form-group">
                                                                                                @{
                                                                                                  Model.BudEstCurrFin.Insert(LedgerNo, LedPrevYearApp != null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F")) : Convert.ToDecimal(0.0000));
                                                                                                }
                                                                                                @Html.TextBoxFor(model => model.BudEstCurrFin[LedgerNo], new { @class = "form-control", @id = @name1 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                                                @Html.ValidationMessageFor(model => model.BudEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                <td>
                                                                                    @if (!Model.IsEnabled || (Model.IsEnabled && Ledgerdetails!=null))
                                                                                    {
                                                                                        <div class="form-group"> 
                                                                                          @{
                                                                                            Model.InterimRev.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.InterimRevEst.ToString("F")) : Convert.ToDecimal(0.0000));
                                                                                           } 
                                                                                            @Html.TextBoxFor(model => model.InterimRev[LedgerNo], new { @class = "form-control", @id = @name2 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                                            @Html.ValidationMessageFor(model => model.InterimRev[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>  
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                       <div class="form-group">
                                                                                           @{
                                                                                              Model.InterimRev.Insert(LedgerNo,Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.InterimRevEst.ToString("F")) : Convert.ToDecimal(0.0000));
                                                                                            }
                                                                                                @Html.TextBoxFor(model => model.InterimRev[LedgerNo], new { @class = "form-control", @id = @name2 + @Ledgers.LedgerNo })
                                                                                                @Html.ValidationMessageFor(model => model.InterimRev[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                      </div>  
                                                                                       
                                                                                    }
                                                                                </td>
                                                                                <td>
                                                                                       <div class="form-group">
                                                                                           @{
                                                                                               Model.ProvisionalRE.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ProvisionalRevEst.ToString("F")) : Convert.ToDecimal(0.0000));
                                                                                            }
                                                                                               @Html.TextBoxFor(model => model.ProvisionalRE[LedgerNo], new { @class = "form-control", @id = @name3 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                                               @Html.ValidationMessageFor(model => model.ProvisionalRE[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                      </div>  
                                                                                </td>
                                                                                @if(Model.IsEnabled && Ledgerdetails == null || (Model.IsEnabled && Model.EditEnabled==Ledgers.LedgerNo))
                                                                                {
                                                                                <td>
                                                                                   <button style="border:none;background-color:white" id="@save" class="Submit" formaction="InterimRev" type="submit" value="Save Budget" style="align-self:center">
                                                                                   <i class='bx bx-check' style="color:limegreen"></i></button>
                                                                                </td>
                                                                                }
                                                                                @if(Model.IsEnabled && Ledgerdetails != null && Model.EditEnabled!=Ledgers.LedgerNo)
                                                                                {
                                                                                <td>
                                                                                   <button style="border:none;background-color:white" id="@edit" class="Submit" formaction="Edit" type="submit" value="Edit Budget" style="align-self:center">
                                                                                   <i class='bx bxs-pencil' style="color:blue"></i></button>
                                                                               </td>
                                                                                }
                                                                                @if(Model.IsEnabled && Ledgerdetails != null)
                                                                                {
                                                                                <td>
                                                                                    <button style="border:none;background-color:white" id="@delete" class="Submit" formaction="Delete" type="submit" value="Delete Budget" style="align-self:center">
                                                                                    <i class='bx bx-x' style="color:red"></i>     
                                                                                    </button>
                                                                               </td>
                                                                                }
                                                                             </tr>
                                                                            
                                                                        LedgerNo++;
                                                                       }
                                                                        </table>
                                                                        Count = LedgerNo;
                                                               }
                                                               else
                                                               {
                                                                <table class="table ChildGrid">                                                                     
                                                                      @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                                                                      {
                                                                        <tr>
                                                                            <td></td>
                                                                            <td>
                                                                                @Ledgers.LedgerNo
                                                                            </td>
                                                                            <td>@Ledgers.LedgerName</td>
                                                                        </tr>
                                                                      }
                                                                </table>
                                                               }
                                                               </div>
                                                               
                                                            }
                                                        </td>
                                                        <td class="w-5">
                                                            @{
                                                              Model.SubGroupNameOrLedgerName.Insert(Count, Subs.SubGroupNo);
                                                             }

                                                            @Html.DisplayFor(model => model.SubGroupNameOrLedgerName[Count])
                                                            @Html.HiddenFor(model => model.SubGroupNameOrLedgerName[Count])
                                                        </td>
                                                        <td class="w-5"></td>
                                                        <td class="w-5">
                                                            @Subs.subGroupName
                                                        </td class="w-5">
                                                        <td class="w-5">
                                                        
                                                        @if (@Subs.RequireInput)
                                                        {
                                                            var LedgerPastYearAppBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();

                                                                <div class="form-group"> 
                                                                 @{
                                                                        Model.BudEstCurrFin.Insert(Count, LedgerPastYearAppBudEstCurrFin != null ? Convert.ToDecimal(LedgerPastYearAppBudEstCurrFin) : Convert.ToDecimal(0.0000));
                                                                   }
                                                                 @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @class = "form-control", @id = @name1, @readonly = "readonly"} )
                                                                 @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})

                                                                </div>
                                                        }
                                                        else
                                                        {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.BudEstCurrFin.Insert(Count,(PrevYearApp != null) ? Convert.ToDecimal(PrevYearApp.BudEstNextFin) : Convert.ToDecimal(0.0000));
                                                                     }
                                                                    @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @class = "form-control", @id = @name1, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})

                                                                </div>
                                                        }
                                                        </td>
                                                        <td class="w-5">
                                                        @if (@Subs.RequireInput)
                                                        {
                                                            var LedgerSumInterimRev = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.InterimRevEst).Sum();
                                                            <div class="form-group">  
                                                               @{
                                                                  Model.InterimRev.Insert(Count, LedgerSumInterimRev != null ? Convert.ToDecimal(LedgerSumInterimRev) : Convert.ToDecimal(0.0000));
                                                                }   
                                                                @Html.TextBoxFor(model => model.InterimRev[Count], new { @class = "form-control", @id = @name2, @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.InterimRev[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                            
                                                        }
                                                        else if (!Model.IsEnabled  || (Model.IsEnabled && details!=null))
                                                        {
                                                               <div class="form-group">
                                                               @{
                                                                  Model.InterimRev.Insert(Count, details != null ? Convert.ToDecimal(details.InterimRevEst) : Convert.ToDecimal(0.0000));
                                                                }
                                                                @Html.TextBoxFor(model => model.InterimRev[Count], new { @class = "form-control", @id = @name2, @readonly = "readonly" })
                                                                @Html.ValidationMessageFor(model => model.InterimRev[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                                
                                                        }
                                                        else
                                                        {
                                                            <div class="form-group">
                                                               @{
                                                                  Model.InterimRev.Insert(Count, details != null ? Convert.ToDecimal(details.InterimRevEst) : Convert.ToDecimal(0.0000));
                                                                }
                                                                @Html.TextBoxFor(model => model.InterimRev[Count], new { @class = "form-control", @id = @name2 })
                                                                @Html.ValidationMessageFor(model => model.InterimRev[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                            
                                                        }
                                                        </td>
                                                        <td class="w-5">
                                                        @if (@Subs.RequireInput)
                                                        {
                                                                var LedgerSumProvisionalRE = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ProvisionalRevEst).Sum();
                                                             <div class="form-group">
                                                               @{
                                                                  Model.ProvisionalRE.Insert(Count, LedgerSumProvisionalRE != null ? Convert.ToDecimal(LedgerSumProvisionalRE) : Convert.ToDecimal(0.0000));
                                                                 }
                                                                 @Html.TextBoxFor(model => model.ProvisionalRE[Count], new { @class = "form-control", @id = @name3, @readonly = "readonly"})
                                                                 @Html.ValidationMessageFor(model => model.ProvisionalRE[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                
                                                            }
                                                        else 
                                                        {                                       
                                                              <div class="form-group">
                                                                @{
                                                                   Model.ProvisionalRE.Insert(Count, details != null ? Convert.ToDecimal(details.ProvisionalRevEst) : Convert.ToDecimal(0.0000));
                                                                 }
                                                                  @Html.TextBoxFor(model => model.ProvisionalRE[Count], new { @class = "form-control", @id = @name3, @readonly = "readonly"})
                                                                 @Html.ValidationMessageFor(model => model.ProvisionalRE[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                
                                                            }
                                                       
                                                        </td>
                                                        @if ((!@Subs.RequireInput && Model.IsEnabled && details == null) || (Model.IsEnabled && Model.EditEnabled==Subs.SubGroupNo))
                                                        {
                                                            <td>
                                                                <button style="border:none;background-color:white" id="@save" class="Submit" formaction="InterimRev" type="submit" value="Save Budget" style="align-self:center">
                                                                <i class='bx bx-check' style="color:limegreen"></i></button>
                                                            </td>
                                                        }
                                                        @if ((!@Subs.RequireInput && Model.IsEnabled && details!=null && Model.EditEnabled!=Subs.SubGroupNo)) 
                                                        {
                                                             <td>
                                                                 <button style="border:none;background-color:white" id="@edit" class="Submit" formaction="Edit" type="submit" value="Edit Budget" style="align-self:center">
                                                                  <i class='bx bxs-pencil' style="color:blue"></i></button>
                                                             </td>
                                                        }
                                                        @if (!@Subs.RequireInput && Model.IsEnabled && details!=null)
                                                        {
                                                             <td>
                                                                  <button style="border:none;background-color:white" id="@delete" class="Submit" formaction="Delete" type="submit" value="Delete Budget" style="align-self:center">
                                                                  <i class='bx bx-x' style="color:red"></i></button>     
                                                             </td>
                                                        }
                                                     }
                                                    </tr>

                                                    Count++;
                                                    TableCount++;
                                        }
                                                <tr>
                                                    <td>
                                                    </td>
                                                    <td class="w-5">
                                                    </td>
                                                    <td class="w-5">
                                                        Sub-Total
                                                    </td>
                                                    <td class="w-5">
                                                        Sub-Total
                                                    </td>

                                                    <td class="w-5" id="@Sumname1-Total">
                                                        @SumBudEstCurrFin.ToString("F4")
                                                    </td>
                                                    <td class="w-5" id="@Sumname2-Total">
                                                       @SumInterimRev.ToString("F4")
                                                    </td>
                                                    <td class="w-5" id="@Sumname3-Total">
                                                       @SumProvisionalRE.ToString("F4")
                                                    </td>
                                                </tr>
                                    </tbody>
                                </table>
                            </div>
                           
                         }
                        else
                        {  
                                                     
                             <div id="@identi" class="tab-pane fade" role="tabpanel" aria-labelledby="@identi-tab" style="width: 1750px;">
                               
                                 
                                <table id="@identi-outertable" class="table table-responsive table-hover">
                                    <thead>
                                        <tr class="text-center">
                                           <th colspan="100" style="color:red;border-bottom:hidden;">(*FIGURES IN CRORES)</th>
                                        </tr>
                                        <tr>
                                            <th></th>
                                            <th class="w-5">
                                                HEAD NO.
                                            </th>
                                            <th class="w-5">
                                                SUBHEAD NO.
                                            </th>
                                            <th class="w-5">
                                                HEAD NAME
                                            </th>
                                            <th class="CurrentBudgetEstimates w-10" >
                                            </th>
                                            <th class="InterimRevision w-10" >
                                            </th>
                                            <th class="ProvisionalRevisedEstimates w-10" >
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody> 
                                        
                                        @foreach (var Subs in Model.SubGroupss.Where(d => d.GroupNo.Equals(@item.GroupNo)))
                                        {
                                                    var details = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a).FirstOrDefault();
                                                    var PrevYearApp =  (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a).FirstOrDefault();
                                                    

                                                    var name1 = String.Concat("BudEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name2 = String.Concat("InterimRev", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name3 = String.Concat("ProvisionalRE", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);

                                                    var save = String.Concat("Save", @inner.SectionNo.ToString(), "_",@Subs.SubGroupNo, @TableCount);
                                                    var edit = String.Concat("Edit", @inner.SectionNo.ToString(), "_",@Subs.SubGroupNo, @TableCount);
                                                    var delete = String.Concat("Delete", @inner.SectionNo.ToString(), "_",@Subs.SubGroupNo, @TableCount);

                                                    var LedgerCount = (from a in Model.Ledgerss where a.SubGroupNo.Equals(@Subs.SubGroupNo) select a.LedgerNo).Count();
                                                    
                                                     
                                                    <tr>
                                                        
                                                        <td class="w-5">
                                                          @if(LedgerCount > 0)
                                                          {
                                                                <img src="~/Images/plus.png" />
                                                             <div id="NestedTable" style="display:none"> 
                                                               @if(@Subs.RequireInput)
                                                               {
                                                                 LedgerNo = Count;

                                                                <table class="table ChildGrid">                                                 
                                                                       @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                                                                       {

                                                                         var Ledgerdetails = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a).FirstOrDefault();
                                                                         var LedPrevYearApp = (from a in Model.Approved where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a).FirstOrDefault(); 
                                                                          
                                                                          save = String.Concat("Save", @inner.SectionNo.ToString(),"_",@Ledgers.LedgerNo, @TableCount);
                                                                          edit = String.Concat("Edit", @inner.SectionNo.ToString(),"_",@Ledgers.LedgerNo, @TableCount);
                                                                          delete = String.Concat("Delete", @inner.SectionNo.ToString(),"_",@Ledgers.LedgerNo, @TableCount);
                                                                            <tr>
                                                                                <td></td>
                                                                                <td>
                                                                                    @{
                                                                                        Model.SubGroupNameOrLedgerName.Insert(LedgerNo, Ledgers.LedgerNo);
                                                                                     }

                                                                                     @Html.DisplayFor(model => model.SubGroupNameOrLedgerName[LedgerNo])


                                                                                    @Html.HiddenFor(model => model.SubGroupNameOrLedgerName[LedgerNo])
                                                                                 </td>
                                                                                <td>@Ledgers.LedgerName</td>
                                                                                <td>
                                                                                            <div class="form-group">
                                                                                                @{
                                                                                                  Model.BudEstCurrFin.Insert(LedgerNo, LedPrevYearApp != null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F")) : Convert.ToDecimal(0.0000));
                                                                                                }
                                                                                                @Html.TextBoxFor(model => model.BudEstCurrFin[LedgerNo], new { @class = "form-control", @id = @name1 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                                                @Html.ValidationMessageFor(model => model.BudEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                </td>
                                                                                <td>
                                                                                    @if (!Model.IsEnabled || (Model.IsEnabled && Ledgerdetails!=null))
                                                                                    {
                                                                                        <div class="form-group"> 
                                                                                          @{
                                                                                            Model.InterimRev.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.InterimRevEst.ToString("F")) : Convert.ToDecimal(0.0000));
                                                                                           } 
                                                                                            @Html.TextBoxFor(model => model.InterimRev[LedgerNo], new { @class = "form-control", @id = @name2 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                                            @Html.ValidationMessageFor(model => model.InterimRev[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>  
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                       <div class="form-group">
                                                                                           @{
                                                                                              Model.InterimRev.Insert(LedgerNo,Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.InterimRevEst.ToString("F")) : Convert.ToDecimal(0.0000));
                                                                                            }
                                                                                                @Html.TextBoxFor(model => model.InterimRev[LedgerNo], new { @class = "form-control", @id = @name2 + @Ledgers.LedgerNo })
                                                                                                @Html.ValidationMessageFor(model => model.InterimRev[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                      </div>  
                                                                                       
                                                                                    }
                                                                                </td>
                                                                                <td>
                                                                                       <div class="form-group">
                                                                                           @{
                                                                                               Model.ProvisionalRE.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ProvisionalRevEst.ToString("F")) : Convert.ToDecimal(0.0000));
                                                                                            }
                                                                                               @Html.TextBoxFor(model => model.ProvisionalRE[LedgerNo], new { @class = "form-control", @id = @name3 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                                               @Html.ValidationMessageFor(model => model.ProvisionalRE[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                      </div>  
                                                                                </td>
                                                                                @if(Model.IsEnabled && Ledgerdetails == null || (Model.IsEnabled && Model.EditEnabled==Ledgers.LedgerNo))
                                                                                {
                                                                                <td>
                                                                                   <button style="border:none;background-color:white" id="@save" class="Submit" formaction="InterimRev" type="submit" value="Save Budget" style="align-self:center">
                                                                                   <i class='bx bx-check' style="color:limegreen"></i></button>
                                                                                </td>
                                                                                }
                                                                                @if(Model.IsEnabled && Ledgerdetails != null && Model.EditEnabled!=Ledgers.LedgerNo)
                                                                                {
                                                                                <td>
                                                                                   <button style="border:none;background-color:white" id="@edit" class="Submit" formaction="Edit" type="submit" value="Edit Budget" style="align-self:center">
                                                                                   <i class='bx bxs-pencil' style="color:blue"></i></button>
                                                                               </td>
                                                                                }
                                                                                @if(Model.IsEnabled && Ledgerdetails != null)
                                                                                {
                                                                                <td>
                                                                                    <button style="border:none;background-color:white" id="@delete" class="Submit" formaction="Delete" type="submit" value="Delete Budget" style="align-self:center">
                                                                                    <i class='bx bx-x' style="color:red"></i>     
                                                                                    </button>
                                                                               </td>
                                                                                }
                                                                             </tr>
                                                                            
                                                                        LedgerNo++;
                                                                       }
                                                                        </table>
                                                                        Count = LedgerNo;
                                                               }
                                                               else
                                                               {
                                                                <table class="table ChildGrid">                                                                     
                                                                      @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                                                                      {
                                                                        <tr>
                                                                            <td></td>
                                                                            <td>
                                                                                @Ledgers.LedgerNo
                                                                            </td>
                                                                            <td>@Ledgers.LedgerName</td>
                                                                        </tr>
                                                                      }
                                                                </table>
                                                               }
                                                             </div>
                                                               
                                                          }
                                                        </td>
                                                        <td class="w-5">
                                                            @{
                                                              Model.SubGroupNameOrLedgerName.Insert(Count, Subs.SubGroupNo);
                                                             }

                                                            @Html.DisplayFor(model => model.SubGroupNameOrLedgerName[Count])
                                                            @Html.HiddenFor(model => model.SubGroupNameOrLedgerName[Count])
                                                        </td>
                                                        <td class="w-5"></td>
                                                        <td class="w-5">
                                                            @Subs.subGroupName
                                                        </td class="w-5">
                                                        <td class="w-5">
                                                        
                                                        @if (@Subs.RequireInput)
                                                        {
                                                            var LedgerPastYearAppBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();

                                                                <div class="form-group"> 
                                                                 @{
                                                                        Model.BudEstCurrFin.Insert(Count, LedgerPastYearAppBudEstCurrFin != null ? Convert.ToDecimal(LedgerPastYearAppBudEstCurrFin) : Convert.ToDecimal(0.0000));
                                                                   }
                                                                 @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @class = "form-control", @id = @name1, @readonly = "readonly"} )
                                                                 @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})

                                                                </div>
                                                        }
                                                        else
                                                        {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.BudEstCurrFin.Insert(Count,(PrevYearApp != null) ? Convert.ToDecimal(PrevYearApp.BudEstNextFin) : Convert.ToDecimal(0.0000));
                                                                     }
                                                                    @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @class = "form-control", @id = @name1, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})

                                                                </div>
                                                        }
                                                        </td>
                                                        <td class="w-5">
                                                        @if (@Subs.RequireInput)
                                                        {
                                                            var LedgerSumInterimRev = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.InterimRevEst).Sum();
                                                            <div class="form-group">  
                                                               @{
                                                                  Model.InterimRev.Insert(Count, LedgerSumInterimRev != null ? Convert.ToDecimal(LedgerSumInterimRev) : Convert.ToDecimal(0.0000));
                                                                }   
                                                                @Html.TextBoxFor(model => model.InterimRev[Count], new { @class = "form-control", @id = @name2, @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.InterimRev[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                            
                                                        }
                                                        else if (!Model.IsEnabled || (Model.IsEnabled && details!=null))
                                                        {
                                                               <div class="form-group">
                                                               @{
                                                                  Model.InterimRev.Insert(Count, details != null ? Convert.ToDecimal(details.InterimRevEst) : Convert.ToDecimal(0.0000));
                                                                }
                                                                @Html.TextBoxFor(model => model.InterimRev[Count], new { @class = "form-control", @id = @name2 })
                                                                @Html.ValidationMessageFor(model => model.InterimRev[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                                
                                                        }
                                                        else
                                                        {
                                                            <div class="form-group">
                                                               @{
                                                                  Model.InterimRev.Insert(Count, details != null ? Convert.ToDecimal(details.InterimRevEst) : Convert.ToDecimal(0.0000));
                                                                }
                                                                @Html.TextBoxFor(model => model.InterimRev[Count], new { @class = "form-control", @id = @name2 })
                                                                @Html.ValidationMessageFor(model => model.InterimRev[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                            
                                                        }
                                                        </td>
                                                        <td class="w-5">
                                                        @if (@Subs.RequireInput)
                                                        {
                                                                var LedgerSumProvisionalRE = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActCurrFinTill2ndQuart).Sum();
                                                             <div class="form-group">
                                                               @{
                                                                  Model.ProvisionalRE.Insert(Count, LedgerSumProvisionalRE != null ? Convert.ToDecimal(LedgerSumProvisionalRE) : Convert.ToDecimal(0.0000));
                                                                 }
                                                                 @Html.TextBoxFor(model => model.ProvisionalRE[Count], new { @class = "form-control", @id = @name3, @readonly = "readonly"})
                                                                 @Html.ValidationMessageFor(model => model.ProvisionalRE[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                
                                                            }
                                                        else 
                                                        {                                       
                                                              <div class="form-group">
                                                                @{
                                                                   Model.ProvisionalRE.Insert(Count, details != null ? Convert.ToDecimal(details.ProvisionalRevEst) : Convert.ToDecimal(0.0000));
                                                                 }
                                                                  @Html.TextBoxFor(model => model.ProvisionalRE[Count], new { @class = "form-control", @id = @name3, @readonly = "readonly"})
                                                                 @Html.ValidationMessageFor(model => model.ProvisionalRE[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                
                                                            }
                                                       
                                                        </td>
                                                        @if ((!@Subs.RequireInput && Model.IsEnabled && details == null) || (Model.IsEnabled && Model.EditEnabled==Subs.SubGroupNo))
                                                        {
                                                            <td>
                                                                <button style="border:none;background-color:white" id="@save" class="Submit" formaction="InterimRev" type="submit" value="Save Budget" style="align-self:center">
                                                                <i class='bx bx-check' style="color:limegreen"></i></button>
                                                            </td>
                                                        }
                                                        @if ((!@Subs.RequireInput && Model.IsEnabled && details!=null && Model.EditEnabled!=Subs.SubGroupNo)) 
                                                        {
                                                             <td>
                                                                 <button style="border:none;background-color:white" id="@edit" class="Submit" formaction="Edit" type="submit" value="Edit Budget" style="align-self:center">
                                                                  <i class='bx bxs-pencil' style="color:blue"></i></button>
                                                             </td>
                                                        }
                                                        @if (!@Subs.RequireInput && Model.IsEnabled && details!=null)
                                                        {
                                                             <td>
                                                                  <button style="border:none;background-color:white" id="@delete" class="Submit" formaction="Delete" type="submit" value="Delete Budget" style="align-self:center">
                                                                  <i class='bx bx-x' style="color:red"></i></button>     
                                                             </td>
                                                        }
                                                     }
                                                    </tr>

                                                    Count++;
                                                    TableCount++;
                                        }
                                                <tr>
                                                    <td>
                                                    </td>
                                                    <td class="w-5">
                                                    </td>
                                                    <td class="w-5">
                                                        Sub-Total
                                                    </td>
                                                    <td class="w-5">
                                                        Sub-Total
                                                    </td>

                                                    <td class="w-5" id="@Sumname1-Total">
                                                        @SumBudEstCurrFin.ToString("F4")
                                                    </td>
                                                    <td class="w-5" id="@Sumname2-Total">
                                                       @SumInterimRev.ToString("F4")
                                                    </td>
                                                    <td class="w-5" id="@Sumname3-Total">
                                                       @SumProvisionalRE.ToString("F4")
                                                    </td>
                                                </tr>
                                    </tbody>
                                </table>
                                        
                             </div>
                           
                        }
                          CounterBody++;
                    }
                </div>
            </div>
          }

           OuterBodyCount++;
       }
 
    </div>
    }
</div>


 

@section Scripts
{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script type="text/javascript" src="~/js/NestedTable.js"></script>
    <script type="text/javascript" src="~/jquery-validate/jquery.validate.min.js"></script>
    <script type="text/javascript" src="~/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

    <script type="text/javascript">
        
      $(document).ready(  
         function() 
         {
               onceDocReady();
              //resumeActiveTab();

                $('body').on('change',"#Division",
                    function (evt) {
                        $("#SelectedDivisionName").val($("#Division option:selected").text().trim());

                        var divisionname = $("#SelectedDivisionName").val();

                        $("#SelectedAcademicYear").val($("#AcademicYear option:selected").text().trim());

                        var academicyear = $("#SelectedAcademicYear").val();

                        var year = academicyear.split('-');
                        //alert(year[0]);
                        var sectionnoid = $('#outerTab li button.active').attr('id');
                        //alert(sectionnoid);
                        var section = sectionnoid.split('-');

                        var groupnoid = $('#' + section[0] + ' ul li button.active').attr('id');
                        //alert(groupnoid);
                        var group = groupnoid.split('-');
                        //alert(group[0]);

                        $.ajax
                            ({
                                type: "Get",
                                url: '@Url.Action("GetDetails","InterimRevision")',
                                data: { Year: year[0], Division: divisionname },
                                dataType: "html",
                                success: function (data) {
                                    //Whatever result you have got from your controller with html partial view replace with a specific html.
                                    //alert("Inside Ajax");
                                    //alert($("#outerdiv", data).html());

                                    //$("#outerdiv").html(data);

                                    //onceDocReady();

                                    $("#outerdiv").html($("#outerdiv",data).html());
                                    
                                    onceDocReady();
                                 
                                    //alert("Yes");
                                    //var activesectionid = $('#outerTab li button.active').attr('id');
                                    //alert("Not active : "+activesectionid);

                                    //$('#'+activesectionid).removeClass("active");
                                    //$('#'+sectionnoid).addClass("active");
                                    //alert("Active : "+sectionnoid);

                                    //var splitsection = activesectionid.split('-');

                                    //var activegroupnoid = $('#' + splitsection[0] + ' ul li button.active').attr('id');
                                    //$('#'+activegroupnoid).removeClass("active");
                                    //$('#'+groupnoid).addClass("active");
                                },
                                error: function (jqXHR, textStatus, errorThrown) {
                                    alert(errorThrown);
                                }

                            });


                    }

                );

                $('body').on('change',"#AcademicYear",
                    function (evt) {
                        $("#SelectedAcademicYear").val($("#AcademicYear option:selected").text().trim());

                        var academicyear = $("#SelectedAcademicYear").val();

                        $("#SelectedDivisionName").val($("#Division option:selected").text().trim());

                        var divisionname = $("#SelectedDivisionName").val();

                        var year = academicyear.split('-');
                        //alert(year[0]);

                        var sectionnoid = $('#outerTab li button.active').attr('id');

                        var section = sectionnoid.split('-');

                        var groupnoid = $('#' + section[0] + ' ul li button.active').attr('id');
                        //alert(groupnoid);
                        var group = groupnoid.split('-');
                        //alert(group[0]);

                        $.ajax
                            ({
                                type: "Get",
                                url: '@Url.Action("GetDetails","InterimRevision")',
                                data: { Year: year[0], Division: divisionname },
                                dataType: "html",
                                success: function (data)
                                {
                                    //Whatever result you have got from your controller with html partial view replace with a specific html.
                                    //alert("Inside Ajax");
                                    //alert("Inside Function");
 
                                    //$("#outerdiv").html(data);// HTML DOM replace
                                    
                                    //$("#outerdiv").html(data);
                                    $("#outerdiv").html($("#outerdiv", data).html());
                                    //alert("Function Completed");
                                    
                                    onceDocReady();
                                   
                                    //var activesectionid = $('#outerTab li button.active').attr('id');
                                    //alert("Not active : "+activesectionid);

                                    //$('#'+activesectionid).removeClass("active");
                                    //$('#'+sectionnoid).addClass("active");
                                    //alert("Active : "+sectionnoid);

                                    //var splitsection = activesectionid.split('-');

                                    //var activegroupnoid = $('#' + splitsection[0] + ' ul li button.active').attr('id');
                                    //$('#'+activegroupnoid).removeClass("active");
                                    //$('#'+groupnoid).addClass("active");
                                    //alert("Active : "+groupnoid);
                                  
                                },
                                error: function (jqXHR, textStatus, errorThrown)
                                {
                                    alert("errorThrown Interim Revision ");
                                    //alert("Error Thrown");
                                }

                            });
                    }
                );

                $('body').on('click',".Submit",
                    function () {
                       
                             var sectionnoid = $('#outerTab li button.active').attr('id');
                        
                             var section = sectionnoid.split('-');
                        
                             var groupnoid = $('#' + section[0] + ' ul li button.active').attr('id');
                             
                             var SubGroupLedger = $(this).attr('id');
                             var SubGroupLedger = SubGroupLedger.split('_')
                             
                             var Ledgerid = $(this).closest('tr').children('td').eq(1);
                             //alert("LedgerID"+Ledgerid.text());
                             
                             $("#SelectedAcademicYear").val($("#AcademicYear option:selected").text().trim());
                             //alert($("#SelectedAcademicYear").val());
                       

                             $("#SelectedDivisionName").val($("#Division option:selected").text().trim());
                             //alert($("#SelectedDivisionName").val());
                        
                             $('#SectionName').val($('#' + sectionnoid).text());
                             //alert($('#SectionName').val());
                        
                             $('#GroupName').val($('#' + groupnoid).text());
                             //alert($('#GroupName').val());

                             $('#SubGroupLedgerName').val(Ledgerid.text().trim());

                             //alert($(this).val());
                             if($(this).val() == "Save Budget")
                             {
                                 var nextelement = $(this).closest('td').next().children('button').val();
                                 
                                 //alert(nextelement);

                                 if(nextelement == "Delete Budget")
                                 {
                                     //alert(Ledgerid.text().trim());
                                    $('#EditEnabled').val(Ledgerid.text().trim());
                                 }
                             }
                             
                             //alert($('#SubGroupLedgerName').val());

                             //validateinput();
                    }
                 );

                
         });
        
        function onceDocReady()
        {
                 $("#SelectedAcademicYear").val($("#AcademicYear option:selected").text().trim());
                 var academicyear = $("#SelectedAcademicYear").val();
                 //alert('Inside Doc Ready module');
                 var year = academicyear.split('-');
                 //alert(year[1]);

                 $("#SelectedDivisionName").val($("#Division option:selected").text().trim());

                 $(".CurrentBudgetEstimates").text('Budget Estimates ' + $("#SelectedAcademicYear").val());
                 $(".InterimRevision").text('Interim Revision' + $("#SelectedAcademicYear").val());
                 $(".ProvisionalRevisedEstimates").text('Provisional Revised Estimates' + $("#SelectedAcademicYear").val());
                 
        } 
        
        function resumeActiveTab()
        {
            var SectionName =  $('#SectionName').val();
              alert("Stored Section Name : "+SectionName);
                        
           var GroupName = $('#GroupName').val();
               alert("Stored Group Name :"+ GroupName);
                        
           var activesectionno = $('#outerTab li button.active').attr('id');

            var section = activesectionno.split('-');
                        
            var activegroupno = $('#' + section[0] + ' ul li button.active').attr('id');

              //alert("Active Section Name :"+activesectionno);
              //alert("Active Group Name :"+activegroupno);

             if(SectionName!=' ' && SectionName!=activesectionno)
             {
                   $('#'+activesectionno).removeClass("active");
                   $('#'+SectionName).addClass("active");
                   //alert("Section class updated");
             }
                        
             if(GroupName!=' ' && GroupName!=activegroupno)
             {
                    $('#'+activegroupno).removeClass("active");
                    $('#' + GroupName).addClass("active");
                    //alert("Group class updated");
             }
        }
       // function validateinput()
       // {

        //   alert("Inside Validation");
       //    return true;
        //}

    </script>
}

