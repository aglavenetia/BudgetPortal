
@model BudgetPortal.ViewModel.MultipleData
@using System.Web;

@using BudgetPortal.Entities;
@using Microsoft.AspNetCore.Mvc;

@using Microsoft.AspNetCore.Identity;
@using BudgetPortal.Data;

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "View";
    int OuterHeaderCount = 0;
    int OuterBodyCount = 0;
    int CountHeader = 0;
    int CounterBody = 0;


    Model.SubGroupNameOrLedgerName = new List<String>();
    Model.BudEstCurrFin = new List<Decimal>();
    Model.ActPrevFin = new List<Decimal>();
    Model.ActCurrFinTillsecondQuart = new List<Decimal>();
    Model.RevEstCurrFin = new List<Decimal>();
    Model.PerVarRevEstOverBudgEstCurrFin = new List<Decimal>();
    Model.ACAndBWPropRECurrFin = new List<Decimal>();
    Model.BudgEstNexFin = new List<Decimal>();
    Model.PerVarRevEstOverBudgEstNxtFin = new List<Decimal>();
    Model.ACAndBWPropRENxtFin = new List<Decimal>();
    Model.Justification = new List<String>();
    //Model.File = new List<IFormFile>();

    Boolean AdminEditStatus = false ;
    Boolean DelegateEditStatus = false;

    Boolean FinalAdminEditStatus = (from a in Model.Statuss where (a.SectionNumber == 0 && a.GroupNumber.Equals("0")) select a.AdminEditStatus).FirstOrDefault();
    //Model.Detailss = new List<BudgetDetails>();
    
    int FinalAdminEditCount =  (from a in Model.Statuss where (a.SectionNumber == 0 && a.GroupNumber.Equals("0")) select a.AdminEditStatus).Count();

    @*int TableCount = 0;*@
    
}
<br />

 <div id="outerdiv" style="font-family:Cambria">
     <div style="justify-content:center;font-style:oblique;" class="text-success">@Model.ApprovedMessage</div>
    <div style="justify-content:center;font-style:oblique;" class="text-danger">@Model.WaitingForApprovalMessage</div>
    @*Html.ValidationMessage("BudgetStatus",null,new {@class = "text-success", @style="font-size: 1.5em;font-style: bold;"})*@

    @using (Html.BeginForm(null, null, FormMethod.Post, new { @action = "", enctype = "multipart/form-data", id = "AppForm"}))
    {
        @Html.AntiForgeryToken()
      <div style = "float:right">

            
           
        <table border="0" cellpadding="5" cellspacing="0" >
          <tr>
                  @if (User.IsInRole("Admin"))
                 {
                    <td>
                        @Html.LabelFor(Model => Model.SelectedDivisionID)                       
                    </td> 
                 }     
                    <td>
                        @Html.LabelFor(Model => Model.SelectedAcademicYearID)
                    </td>
          </tr>
          <tr>
           @if (User.IsInRole("Admin"))
           {
             <td>
                   @Html.DropDownListFor(Model => Model.SelectedDivisionID, Model.DivisionNames,"--Please select any Division--", new { @class = "form-control", @id="Division" })
                   @Html.ValidationMessageFor(Model => Model.SelectedDivisionID,null, new { @class = "text-danger" })
                        
             </td> 
           }       
             <td>
                 @Html.DropDownListFor(Model => Model.SelectedAcademicYearID, Model.AcademicYears,"--Please select any Academic Year--",new { @class = "form-control", @id="AcademicYear" })
                 @Html.ValidationMessageFor(Model => Model.SelectedAcademicYearID,null, new { @class = "text-danger" }) 
              
             </td>
                
          </tr>
        </table>
        
    </div>

    @*Html.ValidationSummary(false, "", new { @class = "text-danger" })*@
      <br />
      <br />
      <br />
      <br />
       
        if (User.IsInRole("Admin") && FinalAdminEditStatus)
        {
            <input id="Submit" class="FinalSubmit" formaction="~/Tabs/FinalSubmit" value="Finalise Budget" type="submit" style="align-self:center"/>
            @*Html.Hidden("SelectedAcademicYear", Model.SelectedAcademicYear,  new{@id = "FinalSubmit-SelectedAcademicYear" })
            @Html.Hidden("SelectedDivisionName",Model.SelectedDivisionName,  new{@id = "FinalSubmit-SelectedDivisionName" })*@
            <br /><br/>
        }

        

    <ul id="outerTab" class="nav nav-pills" role="tablist" >    
      @foreach (var item in Model.Sectionss)
      {
            var inneridenti = String.Concat("Budget", @item.SectionNo.ToString());

        if (OuterHeaderCount == 0)
        {
                <li class="nav-item" role="presentation">
                <button class="nav-link active" id="@inneridenti-nav" data-bs-toggle="tab" data-bs-target="#@inneridenti" type="button" role="tab" aria-controls="@inneridenti" aria-selected="true">@item.SectionName</button>
                </li>
        }
        else
        {
            
            <li class="nav-item" role="presentation">
                    <button class="nav-link" id="@inneridenti-nav"  data-bs-toggle="tab" data-bs-target="#@inneridenti" type="button" role="tab" aria-controls="@inneridenti" aria-selected="false">@item.SectionName</button>
            </li>
        }

        OuterHeaderCount++;
      }
    </ul>

    <div id="outerTabContent" class="tab-content">
       <br />  
       @Html.Hidden("SectionName",Model.SectionName, new{@id = "SectionName" })
       @Html.Hidden("GroupName",Model.GroupName,  new{@id = "GroupName" })
       @Html.Hidden("SubGroupLedgerName",Model.SubGroupLedgerName,  new{@id = "SubGroupLedgerName" })
       
       @Html.Hidden("SelectedAcademicYear", Model.SelectedAcademicYear,  new{@id = "SelectedAcademicYear" })
       @Html.Hidden("SelectedDivisionName",Model.SelectedDivisionName,  new{@id = "SelectedDivisionName" })

       @foreach (var inner in Model.Sectionss)
       {
           var GroupsStatRowCount = (from a in Model.Statuss where (a.SectionNumber == @inner.SectionNo) select a.DelegateEditStatus).Count();

           var inneridenti = String.Concat("Budget", @inner.SectionNo.ToString());
           CountHeader = 0;
           CounterBody = 0;
           int Count = 0;
           int LedgerNo = 0;

            var SectionSumBudEstCurrFin = (from a in Model.Approved where a.SectionNumber.Equals(@inner.SectionNo) select a.BudEstNextFin).Sum();
            var SectionSumActPrevFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.ActPrevFin).Sum();
            var SectionSumActCurrFinTill2ndQuart = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.ActCurrFinTill2ndQuart).Sum();
            var SectionSumRevEstCurrFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.RevEstCurrFin).Sum();
            var SectionSumACAndBWPropRECurrFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.ACAndBWPropRECurrFin).Sum();
            var SectionSumBudgEstNexFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.BudgEstNexFin).Sum();
            var SectionSumACAndBWPropRENxtFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.ACAndBWPropRENxtFin).Sum();
            var SectionSumPerVarRevEstOverBudgEstCurrFin = 0.00;
            var SectionSumPerVarRevEstOverBudgEstNxtFin = 0.00;

            @if(Model.PreviousYearAdminCount > 0 && GroupsStatRowCount > 0 )
            {
                SectionSumPerVarRevEstOverBudgEstCurrFin = Convert.ToInt32(Convert.ToDecimal((SectionSumRevEstCurrFin - SectionSumBudEstCurrFin) / SectionSumBudEstCurrFin)*100);
                SectionSumPerVarRevEstOverBudgEstNxtFin = Convert.ToInt32(Convert.ToDecimal((SectionSumBudgEstNexFin - SectionSumRevEstCurrFin) / SectionSumRevEstCurrFin) * 100);
            }
            else
            {
                 SectionSumPerVarRevEstOverBudgEstCurrFin = Convert.ToDouble(0.00);
                 SectionSumPerVarRevEstOverBudgEstNxtFin = Convert.ToDouble(0.00);
            }
            var GroupsCount = (from a in Model.Groupss where a.SectionNo.Equals(@inner.SectionNo) select a.GroupNo).Count();

            @* Boolean AdminEditStatus = false; *@

           if (OuterBodyCount == 0)
           {
            <div id="@inneridenti" class="tab-pane fade show active" role="tabpanel" aria-labelledby="@inneridenti-tab" aria-selected="true" style="width: 1750px;">
                   <ul id="innertab1" class="nav nav-pills nav-justified" role="tablist">
                    @foreach (var item in Model.Groupss.Where(d => d.SectionNo == @inner.SectionNo))
                    {                           
                        var identi = String.Concat("Budget", Convert.ToInt32((Convert.ToDecimal(@item.GroupNo) * 10)).ToString());
                        
                        if (CountHeader == 0)
                        {
                            <li class="nav-item" role="presentation">
                                        <button class="nav-link active" id="@identi-nav" data-bs-toggle="tab" data-bs-target="#@identi" type="button" role="tab" aria-controls="@identi" aria-selected="true">@item.GroupName</button>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item" role="presentation">
                                        <button class="nav-link" id="@identi-nav" data-bs-toggle="tab" data-bs-target="#@identi" type="button" role="tab" aria-controls="@identi" aria-selected="false">@item.GroupName</button>
                            </li>
                        }

                        CountHeader++;
                    }
                </ul>

                <div id="innertabcontent1" class="tab-content">
                    <br />

                    @foreach (var item in Model.Groupss.Where(d => d.SectionNo == @inner.SectionNo))
                    {
                       var GroupsStatusRowCount = (from a in Model.Statuss where (a.SectionNumber == @inner.SectionNo && a.GroupNumber.Equals(@item.GroupNo)) select a.DelegateEditStatus).Count();
                       var AdminStatus = (from a in Model.Statuss where (a.SectionNumber == @inner.SectionNo && a.GroupNumber.Equals(@item.GroupNo)) select a.AdminEditStatus).FirstOrDefault();
                       
                        if (GroupsStatusRowCount == 0 && Model.PreviousYearAdminCount > 0 )
                        {
                                    DelegateEditStatus = true;
                                    AdminEditStatus = false;
                        }
                        else if (AdminStatus && Model.PreviousYearAdminCount > 0)
                        {
                                     DelegateEditStatus = false;
                                    AdminEditStatus = true;
                        }
                         else
                        {
                                    DelegateEditStatus = false;
                                    AdminEditStatus = false;
                        }
                        int TableCount = 0;
                        var Submit = String.Concat("Submit", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                        var identi = String.Concat("Budget", Convert.ToInt32((Convert.ToDecimal(@item.GroupNo) * 10)).ToString());
                        
                         var SumBudEstCurrFin = (from a in Model.Approved where a.GroupNumber.Equals(@item.GroupNo) select a.BudEstNextFin).Sum();
                         var SumActPrevFin = (from a in Model.Detailss where a.GroupNumber.Equals(@item.GroupNo) select a.ActPrevFin).Sum();
                         var SumActCurrFinTill2ndQuart = (from a in Model.Detailss where a.GroupNumber.Equals(@item.GroupNo) select a.ActCurrFinTill2ndQuart).Sum();
                         var SumRevEstCurrFin = (from a in Model.Detailss where a.GroupNumber.Equals(@item.GroupNo) select a.RevEstCurrFin).Sum();
                         var SumACAndBWPropRECurrFin = (from a in Model.Detailss where a.GroupNumber.Equals(@item.GroupNo) select a.ACAndBWPropRECurrFin).Sum();
                         var SumBudgEstNexFin = (from a in Model.Detailss where a.GroupNumber.Equals(@item.GroupNo) select a.BudgEstNexFin).Sum();
                         var SumACAndBWPropRENxtFin = (from a in Model.Detailss where a.GroupNumber.Equals(@item.GroupNo) select a.ACAndBWPropRENxtFin).Sum();
                         var SumPerVarRevEstOverBudgEstCurrFin = 0.00;
                         var SumPerVarRevEstOverBudgEstNxtFin = 0.00;

                         @if(Model.PreviousYearAdminCount > 0 && GroupsStatusRowCount > 0)
                         {
                             SumPerVarRevEstOverBudgEstCurrFin = Convert.ToInt32(Convert.ToDecimal((SumRevEstCurrFin - SumBudEstCurrFin) / SumBudEstCurrFin)*100);
                             SumPerVarRevEstOverBudgEstNxtFin = Convert.ToInt32(Convert.ToDecimal((SumBudgEstNexFin - SumRevEstCurrFin) / SumRevEstCurrFin)*100);
                         }
                         else
                         {
                               SumPerVarRevEstOverBudgEstCurrFin = Convert.ToDouble(0.00);
                               SumPerVarRevEstOverBudgEstNxtFin = Convert.ToDouble(0.00);
                         }

                            var Sumname1 = String.Concat("BudEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname2 = String.Concat("ActPrevFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname3 = String.Concat("ActCurrFinTillsecondQuart", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname4 = String.Concat("RevEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname5 = String.Concat("PerVarRevEstOverBudgEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname6 = String.Concat("ACAndBWPropRECurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname7 = String.Concat("BudgEstNexFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname8 = String.Concat("PerVarRevEstOverBudgEstNxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname9 = String.Concat("ACAndBWPropRENxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname10 = String.Concat("Justification", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);

                        if (CounterBody == 0)
                        {
                                                   
                            <div id="@identi" class="tab-pane fade show active" role="tabpanel" aria-labelledby="@identi-tab" style="width: 1750px;">

                                @if (!User.IsInRole("Admin") && AdminEditStatus && @Model.WaitingForApprovalMessage.Equals(" ") && @Model.ApprovedMessage.Equals(" "))
                                {
                                   <div style="color:green"> * Budget proposal @Model.SelectedAcademicYear for <span style="color:red">'@item.GroupName'</span> has been submitted to AC&BW successfully </div>
                                }
                                else if(User.IsInRole("Admin") && !AdminEditStatus && !@Model.WaitingForApprovalMessage.Equals(" "))
                                {
                                    <div style="color:green"> * Budget values for @Model.SelectedAcademicYear for <span style="color:red">'@item.GroupName'</span> has been saved successfully </div>
                                }
                                <table id="@identi-outertable" class="table table-responsive table-hover">
                                    <thead>
                                        <tr class="text-center">
                                           <th colspan="100" style="color:red;border-bottom:hidden;">(*FIGURES IN CRORES)</th>
                                        </tr>
                                        <tr>
                                            <th></th>
                                            <th class="w-5">
                                                @*SubGroupNumber*@
                                                HEAD NO.
                                            </th>
                                            <th class="w-5">
                                                SUBHEAD NO.
                                            </th>
                                            <th class="w-5">
                                                @*SubGroupName*@
                                                HEAD NAME
                                            </th>
                                            <th class="CurrentBudgetEstimates w-10" >
                                            </th>
                                            <th class="InterimRevision w-10" >
                                            </th>
                                            <th class="ProvisionalRevisedEstimates w-10" >
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody> 
                                        
                                        @foreach (var Subs in Model.SubGroupss.Where(d => d.GroupNo.Equals(@item.GroupNo)))
                                        {
                                                    var details = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a).FirstOrDefault();
                                                    var PrevYearApp =  (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a).FirstOrDefault();
                                                    

                                                    var name1 = String.Concat("BudEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name2 = String.Concat("ActPrevFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name3 = String.Concat("ActCurrFinTillsecondQuart", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name4 = String.Concat("RevEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name5 = String.Concat("PerVarRevEstOverBudgEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name6 = String.Concat("ACAndBWPropRECurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name7 = String.Concat("BudgEstNexFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name8 = String.Concat("PerVarRevEstOverBudgEstNxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name9 = String.Concat("ACAndBWPropRENxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name10 = String.Concat("Justification", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name11 = String.Concat("UploadFile", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var upload = String.Concat("UploadButton", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var delete = String.Concat("DeleteButton", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var view = String.Concat("ViewButton", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);

                                                    var LedgerCount = (from a in Model.Ledgerss where a.SubGroupNo.Equals(@Subs.SubGroupNo) select a.LedgerNo).Count();
                                                    
                                                     
                                                    <tr>
                                                        
                                                        <td class="w-5">
                                                            @if(LedgerCount > 0)
                                                            {
                                                                <img src="~/Images/plus.png" />
                                                               <div id="NestedTable" style="display:none"> 
                                                               @if(@Subs.RequireInput)
                                                               {
                                                                 LedgerNo = Count;

                                                                <table class="table ChildGrid">                                                 
                                                                       @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                                                                       {

                                                                         var Ledgerdetails = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a).FirstOrDefault();
                                                                         var LedPrevYearApp = (from a in Model.Approved where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a).FirstOrDefault(); 
                                                                          
                                                                            <tr>
                                                                                <td></td>
                                                                                <td></td>
                                                                                <td>
                                                                                    @{
                                                                                        Model.SubGroupNameOrLedgerName.Insert(LedgerNo, Ledgers.LedgerNo);
                                                                                     }

                                                                                     @Html.DisplayFor(model => model.SubGroupNameOrLedgerName[LedgerNo])


                                                                                    @Html.HiddenFor(model => model.SubGroupNameOrLedgerName[LedgerNo])
                                                                                 </td>
                                                                                <td>@Ledgers.LedgerName</td>
                                                                                <td>
                                                                                    @if (!DelegateEditStatus)
                                                                                    {
                                                                                       <div class="form-group"> 
                                                                                         
                                                                                         @{
                                                                                          Model.BudEstCurrFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.BudEstCurrFin.ToString("F")): Convert.ToDecimal(0.00));
                                                                                          }     
                                                                                          @Html.TextBoxFor(model => model.BudEstCurrFin[LedgerNo], new { @class = "form-control", id = @name1 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                                          @Html.ValidationMessageFor(model => model.BudEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div> 
                                                                                            
                                                                                    }
                                                                                        else
                                                                                        {
                                                                                            <div class="form-group">
                                                                                                @{
                                                                                                  Model.BudEstCurrFin.Insert(LedgerNo, LedPrevYearApp != null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F")) : Convert.ToDecimal(0.00));
                                                                                                }
                                                                                                @Html.TextBoxFor(model => model.BudEstCurrFin[LedgerNo], new { @class = "form-control", @id = @name1 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                                                @Html.ValidationMessageFor(model => model.BudEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                        }
                                                                                </td>
                                                                                <td>
                                                                                    @if (User.IsInRole("Admin") || !DelegateEditStatus)
                                                                                    {
                                                                                        <div class="form-group"> 
                                                                                          @{
                                                                                            Model.ActPrevFin.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.ActPrevFin.ToString("F")) : Convert.ToDecimal(0.00));
                                                                                           } 
                                                                                            @Html.TextBoxFor(model => model.ActPrevFin[LedgerNo], new { @class = "form-control", @id = @name2 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                                            @Html.ValidationMessageFor(model => model.ActPrevFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>  
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                       <div class="form-group">
                                                                                           @{
                                                                                              Model.ActPrevFin.Insert(LedgerNo,Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ActPrevFin.ToString("F")) : Convert.ToDecimal(0.00));
                                                                                            }
                                                                                                @Html.TextBoxFor(model => model.ActPrevFin[LedgerNo], new { @class = "form-control", @id = @name2 + @Ledgers.LedgerNo })
                                                                                                @Html.ValidationMessageFor(model => model.ActPrevFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                      </div>  
                                                                                       
                                                                                    }
                                                                                </td>
                                                                                <td>
                                                                                    @if (User.IsInRole("Admin") || !DelegateEditStatus)
                                                                                    {
                                                                                       <div class="form-group">
                                                                                           @{
                                                                                               Model.ActCurrFinTillsecondQuart.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ActCurrFinTill2ndQuart.ToString("F")) : Convert.ToDecimal(0.00));
                                                                                            }
                                                                                               @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[LedgerNo], new { @class = "form-control", @id = @name3 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                                               @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                      </div>  
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                       <div class="form-group">
                                                                                           @{
                                                                                            Model.ActCurrFinTillsecondQuart.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ActCurrFinTill2ndQuart.ToString("F")) : Convert.ToDecimal(0.00));
                                                                                            }
                                                                                            @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[LedgerNo], new { @class = "form-control", @id = @name3+@Ledgers.LedgerNo})
                                                                                            @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                       </div> 
                                                                                    }
                                                                                </td>
                                                                             </tr>
                                                                            
                                                                        LedgerNo++;
                                                                       }
                                                                        </table>
                                                                        Count = LedgerNo;
                                                               }
                                                               else
                                                               {
                                                                <table class="table ChildGrid">                                                                     
                                                                      @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                                                                      {
                                                                        <tr>
                                                                            <td></td>
                                                                            <td></td>
                                                                            <td>
                                                                                @Ledgers.LedgerNo
                                                                            </td>
                                                                            <td>@Ledgers.LedgerName</td>
                                                                        </tr>
                                                                      }
                                                                </table>
                                                               }
                                                               </div>
                                                               
                                                            }
                                                        </td>
                                                        <td class="w-5">
                                                            @{
                                                              Model.SubGroupNameOrLedgerName.Insert(Count, Subs.SubGroupNo);
                                                             }

                                                            @Html.DisplayFor(model => model.SubGroupNameOrLedgerName[Count])
                                                            @Html.HiddenFor(model => model.SubGroupNameOrLedgerName[Count])
                                                        </td>
                                                        <td class="w-5"></td>
                                                        <td class="w-5">
                                                            @Subs.subGroupName
                                                        </td class="w-5">
                                                        <td class="w-5">
                                                        
                                                        @if (@Subs.RequireInput && DelegateEditStatus)
                                                        {
                                                            var LedgerPastYearAppBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();

                                                                <div class="form-group"> 
                                                                 @{
                                                                        Model.BudEstCurrFin.Insert(Count, LedgerPastYearAppBudEstCurrFin != null ? Convert.ToDecimal(LedgerPastYearAppBudEstCurrFin) : Convert.ToDecimal(0.00));
                                                                   }
                                                                 @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @class = "form-control", @id = @name1, @readonly = "readonly"} )
                                                                 @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})

                                                                </div>
                                                            
                                                        }
                                                        else if (@Subs.RequireInput && !DelegateEditStatus)
                                                        {
                                                            var LedgerSumBudEstCurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstCurrFin).Sum();                                                                                                                            
                                                            
                                                            <div class="form-group">
                                                                    @{
                                                                        Model.BudEstCurrFin.Insert(Count, LedgerSumBudEstCurrFin != null ? Convert.ToDecimal(LedgerSumBudEstCurrFin) : Convert.ToDecimal(0.00));
                                                                     }
                                                                     @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @class = "form-control", @id = @name1, @readonly = "readonly"} )
                                                                     @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                
                                                            }

                                                            else if (!DelegateEditStatus)
                                                            {
                                                                <div class="form-group">
                                                                   
                                                                   @{
                                                                        Model.BudEstCurrFin.Insert(Count, details != null ? Convert.ToDecimal(details.BudEstCurrFin) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @class = "form-control", @id = @name1, @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})

                                                                </div>
                                                                
                                                            }
                                                            else
                                                            {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.BudEstCurrFin.Insert(Count,(PrevYearApp != null) ? Convert.ToDecimal(PrevYearApp.BudEstNextFin) : Convert.ToDecimal(0.00));
                                                                     }
                                                                    @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @class = "form-control", @id = @name1, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})

                                                                </div>
                                                                
                                                        }
                                                        </td>
                                                        <td class="w-5">
                                                        @if (@Subs.RequireInput)
                                                        {
                                                            var LedgerSumActPrevFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActPrevFin).Sum();
                                                            <div class="form-group">  
                                                               @{
                                                                  Model.ActPrevFin.Insert(Count, LedgerSumActPrevFin != null ? Convert.ToDecimal(LedgerSumActPrevFin) : Convert.ToDecimal(0.00));
                                                                }   
                                                                @Html.TextBoxFor(model => model.ActPrevFin[Count], new { @class = "form-control", @id = @name2, @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.ActPrevFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                            
                                                        }
                                                        else if (User.IsInRole("Admin") || !DelegateEditStatus)
                                                        {
                                                                <div class="form-group">
                                                                  @{ 
                                                                     Model.ActPrevFin.Insert(Count, details != null ? Convert.ToDecimal(details.ActPrevFin) : Convert.ToDecimal(0.00));
                                                                   }
                                                                    @Html.TextBoxFor(model => model.ActPrevFin[Count], new { @class = "form-control", @id = @name2, @readonly = "readonly"} )
                                                                    @Html.ValidationMessageFor(model => model.ActPrevFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                
                                                        }
                                                        else
                                                        {
                                                            <div class="form-group">
                                                               @{
                                                                  Model.ActPrevFin.Insert(Count, details != null ? Convert.ToDecimal(details.ActPrevFin) : Convert.ToDecimal(0.00));
                                                                }
                                                                @Html.TextBoxFor(model => model.ActPrevFin[Count], new { @class = "form-control", @id = @name2 })
                                                                @Html.ValidationMessageFor(model => model.ActPrevFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                            
                                                        }
                                                        </td>
                                                        <td class="w-5">
                                                        @if (@Subs.RequireInput)
                                                        {
                                                                var LedgerSumActCurrFinTill2ndQuart = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActCurrFinTill2ndQuart).Sum();
                                                             <div class="form-group">
                                                               @{
                                                                  Model.ActCurrFinTillsecondQuart.Insert(Count, LedgerSumActCurrFinTill2ndQuart != null ? Convert.ToDecimal(LedgerSumActCurrFinTill2ndQuart) : Convert.ToDecimal(0.00));
                                                                 }
                                                                 @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[Count], new { @class = "form-control", @id = @name3, @readonly = "readonly"})
                                                                 @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                
                                                            }
                                                        else if (User.IsInRole("Admin") || !DelegateEditStatus)
                                                        {                                       
                                                              <div class="form-group">
                                                                @{
                                                                   Model.ActCurrFinTillsecondQuart.Insert(Count, details != null ? Convert.ToDecimal(details.ActCurrFinTill2ndQuart) : Convert.ToDecimal(0.00));
                                                                 }
                                                                  @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[Count], new { @class = "form-control", @id = @name3, @readonly = "readonly"})
                                                                 @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                
                                                            }
                                                        else
                                                        {
                                                            <div class="form-group">
                                                               @{ 
                                                                  Model.ActCurrFinTillsecondQuart.Insert(Count, details != null ? Convert.ToDecimal(details.ActCurrFinTill2ndQuart) : Convert.ToDecimal(0.00));
                                                                } 
                                                                @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[Count], new { @class = "form-control", @id = @name3})
                                                                @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                            
                                                        }
                                                        </td>
                                                    </tr>

                                                    Count++;
                                                    TableCount++;
                                        }
                                                <tr>
                                                    <td>
                                                    </td>
                                                    <td class="w-5">
                                                    </td>
                                                    <td class="w-5">
                                                        Sub-Total
                                                    </td>
                                                    <td class="w-5">
                                                        Sub-Total
                                                    </td>

                                                    <td class="w-5" id="@Sumname1-Total">
                                                        @SumBudEstCurrFin.ToString("F4")
                                                    </td>
                                                    <td class="w-5" id="@Sumname2-Total">
                                                       @SumActPrevFin.ToString("F4")
                                                    </td>
                                                    <td class="w-5" id="@Sumname3-Total">
                                                        @SumActCurrFinTill2ndQuart.ToString("F4")
                                                    </td>
                                                </tr>
                                    </tbody>
                                </table>
                                        @*Html.Hidden("SectionName",Model.SectionName, new{@id = @identi+"-SectionName" })
                                        @Html.Hidden("GroupName",Model.GroupName,  new{@id = @identi+"-GroupName" })
                                        @Html.Hidden("SelectedAcademicYear", Model.SelectedAcademicYear,  new{@id = @identi+"-SelectedAcademicYear" })
                                        @Html.Hidden("SelectedDivisionName",Model.SelectedDivisionName,  new{@id = @identi+"-SelectedDivisionName" })*@
                                    @if ((User.IsInRole("Admin") && AdminEditStatus) || (!User.IsInRole("Admin") && DelegateEditStatus))
                                    {
                                            <input id="@Submit" class="Submit" formaction="~/Tabs/Index" type="submit" value="Save Budget" style="align-self:center"/>
                                    }
                                        @*}*@
                            </div>
                          
                        }
                        else
                        {
                                                    
                            <div id="@identi" class="tab-pane fade" role="tabpanel" aria-labelledby="@identi-tab" style="width: 1750px;">
                                <br />
                                 @if (!User.IsInRole("Admin") && AdminEditStatus && @Model.WaitingForApprovalMessage.Equals(" ") && @Model.ApprovedMessage.Equals(" "))
                                 {
                                   <div style="color:green"> * Budget proposal @Model.SelectedAcademicYear for <span style="color:red">'@item.GroupName'</span> has been submitted to AC&BW successfully </div>
                                 }
                                 else if(User.IsInRole("Admin") && !AdminEditStatus && !@Model.WaitingForApprovalMessage.Equals(" "))
                                {
                                    <div style="color:green"> * Budget values for @Model.SelectedAcademicYear for <span style="color:red">'@item.GroupName'</span> has been saved successfully </div>
                                }
                                        <table id="@identi-outertable" class="table table-responsive table-hover">
                                            <thead>
                                                <tr class="text-center">
                                                    <th colspan="100" style="color:red;border-bottom:hidden;">(*FIGURES IN CRORES)</th>
                                                </tr>
                                                <tr>
                                                    <th></th>
                                                    <th class="w-5">
                                                        @*SubGroupNumber*@
                                                        HEAD NO.
                                                    </th>
                                                    <th class="w-5">SUB HEAD NO.</th>
                                                    <th class="w-5">
                                                        @*SubGroupName*@
                                                        HEAD NAME
                                                    </th>
                                                    <th class="CurrentBudgetEstimates w-10">

                                                    </th>
                                                    <th class="PreviousActualBudget w-10">

                                                    </th>
                                                    <th class="PreviousHalfYearActualBudget w-10">

                                                    </th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var Subs in Model.SubGroupss.Where(d => d.GroupNo.Equals(@item.GroupNo)))
                                                {
                                                    var details = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a).FirstOrDefault();
                                                    var PrevYearApp =  (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a).FirstOrDefault();

                                                    var name1 = String.Concat("BudEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name2 = String.Concat("ActPrevFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name3 = String.Concat("ActCurrFinTillsecondQuart", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name4 = String.Concat("RevEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name5 = String.Concat("PerVarRevEstOverBudgEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name6 = String.Concat("ACAndBWPropRECurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name7 = String.Concat("BudgEstNexFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name8 = String.Concat("PerVarRevEstOverBudgEstNxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name9 = String.Concat("ACAndBWPropRENxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name10 = String.Concat("Justification", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name11 = String.Concat("UploadFile", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var upload = String.Concat("UploadButton", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var delete = String.Concat("DeleteButton", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var view = String.Concat("ViewButton", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    
                                                    var LedgerCount = (from a in Model.Ledgerss where a.SubGroupNo.Equals(@Subs.SubGroupNo) select a.LedgerNo).Count();
                                                    
                                                    <tr>
                                                        <td> 
                                                            @if(LedgerCount >0)
                                                            {
                                                              <img src="~/Images/plus.png" />
                                                              <div id="NestedTable" style="display:none">
                                                                @if (@Subs.RequireInput)
                                                                {
                                                                        LedgerNo = Count;
                                                                        <table class="table ChildGrid">
                                                                        @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                                                                        {
                                                                            var Ledgerdetails = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a).FirstOrDefault();
                                                                            var LedPrevYearApp = (from a in Model.Approved where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a).FirstOrDefault();                       
                                                                            
                                                                            <tr>
                                                                                <td></td>
                                                                                <td></td>
                                                                                <td>
                                                                                    @{
                                                                                       Model.SubGroupNameOrLedgerName.Insert(LedgerNo, Ledgers.LedgerNo);
                                                                                     }
                                                                                     @Html.DisplayFor(model => model.SubGroupNameOrLedgerName[LedgerNo])
                                                                                     @Html.HiddenFor(model => model.SubGroupNameOrLedgerName[LedgerNo])
                                                                                </td>
                                                                                <td>@Ledgers.LedgerName</td>
                                                                                <td>
                                                                                    @if (!DelegateEditStatus)
                                                                                    {
                                                                                        <div class="form-group">
                                                                                        @{
                                                                                            Model.BudEstCurrFin.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.BudEstCurrFin.ToString("F")) : Convert.ToDecimal(0.00));
                                                                                        }
                                                                                            @*Html.TextBox(@name1+@Ledgers.LedgerNo, Ledgerdetails!=null ? Ledgerdetails.BudEstCurrFin.ToString("F")  : " ", new { @class = "form-control", @id = @name1+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                            @Html.ValidationMessage(@name1+@Ledgers.LedgerNo,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                                            @Html.TextBoxFor(model => model.BudEstCurrFin[LedgerNo], new { @class = "form-control", @id = @name1+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.BudEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})

                                                                                            
                                                                                        </div>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <div class="form-group">
                                                                                        @{
                                                                                            Model.BudEstCurrFin.Insert(LedgerNo, LedPrevYearApp!=null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F")) : Convert.ToDecimal(0.00));
                                                                                        }
                                                                                            @*Html.TextBox(@name1+@Ledgers.LedgerNo, LedPrevYearApp!=null ? LedPrevYearApp.BudEstNextFin.ToString("F") : " ", new { @class = "form-control", @id = @name1+@Ledgers.LedgerNo, Name=@name1, @readonly = "readonly"})
                                                                                            @Html.ValidationMessage(@name1+@Ledgers.LedgerNo,  "*",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                                            @Html.TextBoxFor(model => model.BudEstCurrFin[LedgerNo], new { @class = "form-control", @id = @name1+@Ledgers.LedgerNo, Name=@name1, @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.BudEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    }
                                                                                </td>
                                                                                <td>
                                                                                    @if (User.IsInRole("Admin") || !DelegateEditStatus)
                                                                                    {
                                                                                        <div class="form-group">
                                                                                        @{
                                                                                           Model.ActPrevFin.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.ActPrevFin.ToString("F"))  : Convert.ToDecimal(0.00));
                                                                                        }
                                                                                             @*Html.TextBox(@name2+@Ledgers.LedgerNo, Ledgerdetails!=null ? Ledgerdetails.ActPrevFin.ToString("F") : " ", new { @class = "form-control", @id = @name2+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                             @Html.ValidationMessage(@name2+@Ledgers.LedgerNo,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                                             @Html.TextBoxFor(model => model.ActPrevFin[LedgerNo], new { @class = "form-control", @id = @name2+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                             @Html.ValidationMessageFor(model => model.ActPrevFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <div class="form-group">
                                                                                                @{
                                                                                                    Model.ActPrevFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ActPrevFin.ToString("F")) : Convert.ToDecimal(0.00));
                                                                                                }
                                                                                                @*Html.TextBox(@name2+@Ledgers.LedgerNo, Ledgerdetails!=null ? Ledgerdetails.ActPrevFin.ToString("F") : " ", new { @class = "form-control", @id = @name2+@Ledgers.LedgerNo})
                                                                                                @Html.ValidationMessage(@name2+@Ledgers.LedgerNo,  "*",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                                                @Html.TextBoxFor(model => model.ActPrevFin[LedgerNo], new { @class = "form-control", @id = @name2+@Ledgers.LedgerNo})
                                                                                                @Html.ValidationMessageFor(model => model.ActPrevFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    }
                                                                                </td>
                                                                                <td>
                                                                                        @if (User.IsInRole("Admin") || !DelegateEditStatus)
                                                                                    {
                                                                                        <div class="form-group">
                                                                                        @{
                                                                                            Model.ActCurrFinTillsecondQuart.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.ActCurrFinTill2ndQuart.ToString("F")) : Convert.ToDecimal(0.00));
                                                                                         }
                                                                                             @*Html.TextBox(@name3+@Ledgers.LedgerNo, Ledgerdetails!=null ? Ledgerdetails.ActCurrFinTill2ndQuart.ToString("F") : " ", new { @class = "form-control", @id = @name3+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                             @Html.ValidationMessage(@name3+@Ledgers.LedgerNo,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                                                @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[LedgerNo], new { @class = "form-control", @id = @name3+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                             @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <div class="form-group">
                                                                                                @{
                                                                                                    Model.ActCurrFinTillsecondQuart.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ActCurrFinTill2ndQuart.ToString("F")) : Convert.ToDecimal(0.00));
                                                                                                }
                                                                                             @*Html.TextBox(@name3+@Ledgers.LedgerNo, Ledgerdetails!=null ? Ledgerdetails.ActCurrFinTill2ndQuart.ToString("F") : " ", new { @class = "form-control", @id = @name3+@Ledgers.LedgerNo})
                                                                                             @Html.ValidationMessage(@name3+@Ledgers.LedgerNo,  "*",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                                             @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[LedgerNo], new { @class = "form-control", @id = @name3+@Ledgers.LedgerNo})
                                                                                             @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    }
                                                                                </td>
                                                                            </tr>

                                                                                LedgerNo ++;
                                                                            }
                                                                    </table>
                                                                        Count = LedgerNo;
                                                                }
                                                                else
                                                                {
                                                                    <table class="table ChildGrid">
                                                                        @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                                                                        {
                                                                            <tr>
                                                                                <td></td>
                                                                                <td></td>
                                                                                <td>@Ledgers.LedgerNo</td>
                                                                                <td>@Ledgers.LedgerName</td>
                                                                            </tr>
                                                                        }
                                                                    </table>
                                                                }
                                                                </div>
                                                            }
                                                        </td>
                                                        <td>
                                                            @{
                                                                Model.SubGroupNameOrLedgerName.Insert(Count, Subs.SubGroupNo);
                                                             }
                                                             @Html.DisplayFor(model => model.SubGroupNameOrLedgerName[Count])
                                                             @Html.HiddenFor(model => model.SubGroupNameOrLedgerName[Count])
                                                        </td>
                                                        <td></td>
                                                        <td>
                                                            @Subs.subGroupName
                                                        </td>
                                                         <td>
                                                        
                                                        @if (@Subs.RequireInput && DelegateEditStatus)
                                                        {
                                                            var LedgerPastYearAppBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();                                                                                                                            
                                                            <div class="form-group">
                                                            @{
                                                                Model.BudEstCurrFin.Insert(Count, LedgerPastYearAppBudEstCurrFin!=null ? Convert.ToDecimal(LedgerPastYearAppBudEstCurrFin.ToString("F")) : Convert.ToDecimal(0.00));
                                                            }
                                                            @*Html.TextBox(@name1, LedgerPastYearAppBudEstCurrFin!=null ? LedgerPastYearAppBudEstCurrFin.ToString("F") : " ", new { @class = "form-control", @id = @name1, @readonly = "readonly"})
                                                                   @Html.ValidationMessage(@name1,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                   @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @class = "form-control", @id = @name1, @readonly = "readonly"})
                                                                   @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        else if (@Subs.RequireInput && !DelegateEditStatus)
                                                        {
                                                            var LedgerSumBudEstCurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstCurrFin).Sum();                                                                                                                            
                                                            <div class="form-group">
                                                            @{
                                                                Model.BudEstCurrFin.Insert(Count, LedgerSumBudEstCurrFin!=null ? Convert.ToDecimal(LedgerSumBudEstCurrFin.ToString("F")) : Convert.ToDecimal(0.00));
                                                            }
                                                         @*Html.TextBox(@name1, LedgerSumBudEstCurrFin!=null ? LedgerSumBudEstCurrFin.ToString("F") : " ", new { @class = "form-control", @id = @name1, @readonly = "readonly"})
                                                                @Html.ValidationMessage(@name1,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @class = "form-control", @id = @name1, @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        
                                                        else if(!DelegateEditStatus) 
                                                        {  
                                                             <div class="form-group">
                                                             @{
                                                                Model.BudEstCurrFin.Insert(Count, details!=null ? Convert.ToDecimal(details.BudEstCurrFin.ToString("F")) : Convert.ToDecimal(0.00));
                                                            }
                                                         @*Html.TextBox(@name1, details!=null ? details.BudEstCurrFin.ToString("F")  : " ", new { @class = "form-control", @id = @name1, @readonly = "readonly"})
                                                                @Html.ValidationMessage(@name1,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @class = "form-control", @id = @name1, @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>   
                                                        }
                                                        else
                                                        {
                                                            <div class="form-group">
                                                            @{
                                                                Model.BudEstCurrFin.Insert(Count, PrevYearApp!=null? Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F")) : Convert.ToDecimal(0.00));
                                                            }
                                                           @*Html.TextBox(@name1, PrevYearApp!=null?PrevYearApp.BudEstNextFin : " ", new { @class = "form-control", @id = @name1, Name=@name1, @readonly = "readonly"})
                                                                 @Html.ValidationMessage(@name1,  "*",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                 @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @class = "form-control", @id = @name1, Name=@name1, @readonly = "readonly"})
                                                                 @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        </td>
                                                        <td>
                                                        @if (@Subs.RequireInput)
                                                        {
                                                            var LedgerSumActPrevFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActPrevFin).Sum();
                                                            <div class="form-group"> 
                                                             @{
                                                                Model.ActPrevFin.Insert(Count, LedgerSumActPrevFin!=null ? Convert.ToDecimal(LedgerSumActPrevFin.ToString("F")) : Convert.ToDecimal(0.00));
                                                            }
                                                            @*Html.TextBox(@name2, LedgerSumActPrevFin!=null ? LedgerSumActPrevFin.ToString("F") : " ", new { @class = "form-control", @id = @name2, @readonly = "readonly"})
                                                                @Html.ValidationMessage(@name2,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                @Html.TextBoxFor(model => model.ActPrevFin[Count], new { @class = "form-control", @id = @name2, @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.ActPrevFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        else if(User.IsInRole("Admin")|| !DelegateEditStatus)
                                                        {
                                                                <div class="form-group">
                                                                @{
                                                                   Model.ActPrevFin.Insert(Count, details!=null ? Convert.ToDecimal(details.ActPrevFin.ToString("F")) : Convert.ToDecimal(0.00));
                                                                 }
                                                                 @*Html.TextBox(@name2, details!=null ? details.ActPrevFin.ToString("F"): " ", new { @class = "form-control", @id = @name2, @readonly = "readonly"})
                                                                     @Html.ValidationMessage(@name2,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                     @Html.TextBoxFor(model => model.ActPrevFin[Count], new { @class = "form-control", @id = @name2, @readonly = "readonly"})
                                                                     @Html.ValidationMessageFor(model => model.ActPrevFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                        }
                                                        else
                                                        {
                                                            <div class="form-group">
                                                            @{
                                                                Model.ActPrevFin.Insert(Count, details!=null ? Convert.ToDecimal(details.ActPrevFin.ToString("F")) : Convert.ToDecimal(0.00));
                                                            }
                                                          @*Html.TextBox(@name2, details!=null ? details.ActPrevFin.ToString("F") : " ", new { @class = "form-control", @id = @name2})
                                                                @Html.ValidationMessage(@name2,  "*",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                @Html.TextBoxFor(model => model.ActPrevFin[Count], new { @class = "form-control", @id = @name2})
                                                                @Html.ValidationMessageFor(model => model.ActPrevFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        </td>
                                                        <td>
                                                        @if (@Subs.RequireInput)
                                                        {
                                                                var LedgerSumActCurrFinTill2ndQuart = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActCurrFinTill2ndQuart).Sum();
                                                             <div class="form-group">
                                                             @{
                                                                Model.ActCurrFinTillsecondQuart.Insert(Count, LedgerSumActCurrFinTill2ndQuart!=null ? Convert.ToDecimal(LedgerSumActCurrFinTill2ndQuart.ToString("F"))  : Convert.ToDecimal(0.00));
                                                            }
                                                            @*Html.TextBox(@name3, LedgerSumActCurrFinTill2ndQuart!=null ? LedgerSumActCurrFinTill2ndQuart.ToString("F") : " ", new { @class = "form-control", @id = @name3, @readonly = "readonly"})
                                                                 @Html.ValidationMessage(@name3,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                 @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[Count], new { @class = "form-control", @id = @name3, @readonly = "readonly"})
                                                                 @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                             </div>
                                                        }
                                                        else if(User.IsInRole("Admin") || !DelegateEditStatus)
                                                        {                                       
                                                              <div class="form-group">
                                                              @{
                                                                Model.ActCurrFinTillsecondQuart.Insert(Count, details!=null ? Convert.ToDecimal(details.ActCurrFinTill2ndQuart.ToString("F")) : Convert.ToDecimal(0.00));
                                                            }
                                                          @*Html.TextBox(@name3, details!=null ? details.ActCurrFinTill2ndQuart.ToString("F") : " ", new { @class = "form-control", @id = @name3, @readonly = "readonly"})
                                                                @Html.ValidationMessage(@name3,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                    @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[Count], new { @class = "form-control", @id = @name3, @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                             </div>  
                                                        }
                                                        else
                                                        {
                                                            <div class="form-group">
                                                            @{
                                                                Model.ActCurrFinTillsecondQuart.Insert(Count, details!=null ? Convert.ToDecimal(details.ActCurrFinTill2ndQuart.ToString("F")) : Convert.ToDecimal(0.00));
                                                            }
                                                           @*Html.TextBox(@name3, details!=null ? details.ActCurrFinTill2ndQuart.ToString("F") : " ", new { @class = "form-control", @id = @name3})
                                                                 @Html.ValidationMessage(@name3,  "*",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                 @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[Count], new { @class = "form-control", @id = @name3})
                                                                 @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        </td>
                                                    </tr>

                                                    Count++;
                                                    TableCount++;
                                                }
                                                <tr>
                                                    <td>
                                                    </td>
                                                    <td></td>
                                                    <td>
                                                        Sub-Total
                                                    </td>
                                                    <td>
                                                        Sub-Total
                                                    </td>

                                                    <td id="@Sumname1-Total">
                                                        @SumBudEstCurrFin.ToString("F4")
                                                    </td>
                                                    <td id="@Sumname2-Total">
                                                        @SumActPrevFin.ToString("F4")
                                                    </td>
                                                    <td id="@Sumname3-Total">
                                                        @SumActCurrFinTill2ndQuart.ToString("F4")
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                        @*Html.Hidden("SectionName",Model.SectionName, new{@id = @identi+"-SectionName" })
                                        @Html.Hidden("GroupName",Model.GroupName,  new{@id = @identi+"-GroupName" })
                                        @Html.Hidden("SelectedAcademicYear", Model.SelectedAcademicYear,  new{@id = @identi+"-SelectedAcademicYear" })
                                        @Html.Hidden("SelectedDivisionName",Model.SelectedDivisionName,  new{@id = @identi+"-SelectedDivisionName" })*@
                                        @if ((User.IsInRole("Admin") && AdminEditStatus && Model.PreviousYearAdminCount>0) || (!User.IsInRole("Admin") && DelegateEditStatus) && Model.PreviousYearAdminCount > 0)
                                        {
                                            <input id="@Submit" class="Submit" formaction="~/Tabs/Index" type="submit" value="Save Budget" style="align-self:center"/>
                                        }
                                        @*}*@
                            </div>
                          
                        }
                       CounterBody++;
                    }
                  
                </div>
            </div>
          }

           else
           {
                    <div id="@inneridenti" class="tab-pane fade" role="tabpanel" aria-labelledby="@inneridenti-tab" aria-selected="false" style="width: 1750px;">

                @if(GroupsCount>0)
                {
                    <table id="@inneridenti-Totaltable" class="table">
                        <thead>
                            <tr class="text-center">
                                <th colspan="100" style="color:darkcyan;border-bottom:hidden;">@inner.SectionName Section-Total</th>
                            </tr>
                            <tr class="text-center">
                                <th colspan="100" style="color:red;border-bottom:hidden;">(*FIGURES IN CRORES)</th>
                            </tr>
                            <tr>
                                <th>

                                </th>
                                <th class="CurrentBudgetEstimates w-10">

                                </th>
                                <th class="PreviousActualBudget w-10">

                                </th>
                                <th class="PreviousHalfYearActualBudget w-10">

                                </th>
                                
                            </tr>
                        </thead>
                        <tbody>
                            <tr style="border-bottom : hidden;">
                                <td>
                                    @inner.SectionNo @inner.SectionName-Total
                                </td>

                                <td id="SumBudEstCurrFin">
                                    @SectionSumBudEstCurrFin.ToString("F4")
                                </td>
                                <td id="SumActPrevFin">
                                   @SectionSumActPrevFin.ToString("F4")
                                </td>
                                <td id="SumActCurrFinTillsecondQuart">
                                   @SectionSumActCurrFinTill2ndQuart.ToString("F4")
                                </td>
                            </tr>
                        </tbody>
                    </table>
                }
                <ul id="innertab2" class="nav nav-pills" role="tablist">

                    @foreach (var item in Model.Groupss.Where(d => d.SectionNo == @inner.SectionNo))
                    {
                        var identi = String.Concat("Budget", Convert.ToInt32((Convert.ToDecimal(@item.GroupNo) * 10)).ToString());
                        if (CountHeader == 0)
                        {
                            <li class="nav-item" role="presentation">
                                <button class="nav-link active" id="@identi-nav" data-bs-toggle="tab" data-bs-target="#@identi" type="button" role="tab" aria-controls="@identi" aria-selected="true">@item.GroupName</button>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item" role="presentation">
                                        <button class="nav-link" id="@identi-nav" data-bs-toggle="tab" data-bs-target="#@identi" type="button" role="tab" aria-controls="@identi" aria-selected="false">@item.GroupName</button>
                            </li>
                        }

                        CountHeader++;
                    }
                </ul>

                <div id="innertabcontent2" class="tab-content">
                    <br />
                    @foreach (var item in Model.Groupss.Where(d => d.SectionNo == @inner.SectionNo))
                    {
                        var GroupsStatusRowCount = (from a in Model.Statuss where (a.SectionNumber == @inner.SectionNo && a.GroupNumber.Equals(@item.GroupNo)) select a.DelegateEditStatus).Count();
                       var AdminStatus = (from a in Model.Statuss where (a.SectionNumber == @inner.SectionNo && a.GroupNumber.Equals(@item.GroupNo)) select a.AdminEditStatus).FirstOrDefault();
                       
                        if (GroupsStatusRowCount == 0 && (Model.PreviousYearAdminCount > 0))
                        {
                                    DelegateEditStatus = true;
                                    AdminEditStatus = false;
                        }
                        else if (AdminStatus && (Model.PreviousYearAdminCount > 0))
                        {
                                     DelegateEditStatus = false;
                                    AdminEditStatus = true;
                        }
                        else
                        {
                                    DelegateEditStatus = false;
                                    AdminEditStatus = false;
                        }

                          int TableCount = 0;
                          var Submit = String.Concat("Submit", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                          var identi = String.Concat("Budget", Convert.ToInt32((Convert.ToDecimal(@item.GroupNo) * 10)).ToString());

                            var SumBudEstCurrFin = (from a in Model.Approved where a.GroupNumber.Equals(@item.GroupNo) select a.BudEstNextFin).Sum();
                            var SumActPrevFin = (from a in Model.Detailss where a.GroupNumber.Equals(@item.GroupNo) select a.ActPrevFin).Sum();
                            var SumActCurrFinTill2ndQuart = (from a in Model.Detailss where a.GroupNumber.Equals(@item.GroupNo) select a.ActCurrFinTill2ndQuart).Sum();
                            var SumRevEstCurrFin = (from a in Model.Detailss where a.GroupNumber.Equals(@item.GroupNo) select a.RevEstCurrFin).Sum();
                            var SumACAndBWPropRECurrFin = (from a in Model.Detailss where a.GroupNumber.Equals(@item.GroupNo) select a.ACAndBWPropRECurrFin).Sum();
                            var SumBudgEstNexFin = (from a in Model.Detailss where a.GroupNumber.Equals(@item.GroupNo) select a.BudgEstNexFin).Sum();
                            var SumACAndBWPropRENxtFin = (from a in Model.Detailss where a.GroupNumber.Equals(@item.GroupNo) select a.ACAndBWPropRENxtFin).Sum();
                            var SumPerVarRevEstOverBudgEstCurrFin = 0.00;
                            var SumPerVarRevEstOverBudgEstNxtFin = 0.00;

                            @if(Model.PreviousYearAdminCount > 0 && GroupsStatusRowCount > 0)
                            {
                               SumPerVarRevEstOverBudgEstCurrFin = Convert.ToInt32(Convert.ToDouble((SumRevEstCurrFin - SumBudEstCurrFin) / SumBudEstCurrFin)*100);
                               SumPerVarRevEstOverBudgEstNxtFin = Convert.ToInt32(Convert.ToDouble((SumBudgEstNexFin - SumRevEstCurrFin) / SumRevEstCurrFin)*100);
                            }
                            else
                            {
                               SumPerVarRevEstOverBudgEstCurrFin = Convert.ToDouble(0.00);
                               SumPerVarRevEstOverBudgEstNxtFin = Convert.ToDouble(0.00);
                             }
                                
                                var Sumname1 = String.Concat("BudEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                var Sumname2 = String.Concat("ActPrevFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                var Sumname3 = String.Concat("ActCurrFinTillsecondQuart", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                var Sumname4 = String.Concat("RevEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                var Sumname5 = String.Concat("PerVarRevEstOverBudgEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                var Sumname6 = String.Concat("ACAndBWPropRECurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                var Sumname7 = String.Concat("BudgEstNexFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                var Sumname8 = String.Concat("PerVarRevEstOverBudgEstNxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                var Sumname9 = String.Concat("ACAndBWPropRENxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                var Sumname10 = String.Concat("Justification", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);

                            

                          if (CounterBody == 0)
                          {
                              <div id="@identi" class="tab-pane fade show active" role="tabpanel" aria-labelledby="@identi-tab" style="width: 1750px;">
                                  
                                @if(!User.IsInRole("Admin") && AdminEditStatus && @Model.WaitingForApprovalMessage.Equals(" ") && @Model.ApprovedMessage.Equals(" "))
                                {
                                    <div style="color:green"> * Budget proposal @Model.SelectedAcademicYear for <span style="color:red">'@item.GroupName'</span> has been submitted to AC&BW successfully </div>
                                }
                                else if(User.IsInRole("Admin") && !AdminEditStatus && !@Model.WaitingForApprovalMessage.Equals(" "))
                                {
                                    <div style="color:green"> * Budget values for @Model.SelectedAcademicYear for <span style="color:red">'@item.GroupName'</span> has been saved successfully </div>
                                }
                                        <table id="@identi-outertable" class="table table-responsive table-hover">
                                            <thead>
                                                <tr class="text-center">
                                                    <th colspan="100" style="color:red;border-bottom:hidden;">(*FIGURES IN CRORES)</th>
                                                </tr>
                                                <tr>
                                                    <th></th>
                                                    <th class="w-5">
                                                        @*SubGroupNumber*@
                                                        HEAD NO.
                                                    </th>
                                                    <th class="w-5">SUB HEAD NO.</th>
                                                    <th class="w-5">
                                                        @*SubGroupName*@
                                                        HEAD NAME
                                                    </th>
                                                    <th class="CurrentBudgetEstimates w-10">

                                                    </th>
                                                    <th class="PreviousActualBudget w-10">

                                                    </th>
                                                    <th class="PreviousHalfYearActualBudget w-10">

                                                    </th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var Subs in Model.SubGroupss.Where(d => d.GroupNo.Equals(@item.GroupNo)))
                                                {
                                                    var details = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a).FirstOrDefault();
                                                    var PrevYearApp =  (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a).FirstOrDefault();                                           

                                                    var name1 = String.Concat("BudEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name2 = String.Concat("ActPrevFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name3 = String.Concat("ActCurrFinTillsecondQuart", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name4 = String.Concat("RevEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name5 = String.Concat("PerVarRevEstOverBudgEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name6 = String.Concat("ACAndBWPropRECurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name7 = String.Concat("BudgEstNexFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name8 = String.Concat("PerVarRevEstOverBudgEstNxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name9 = String.Concat("ACAndBWPropRENxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name10 = String.Concat("Justification", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name11 = String.Concat("UploadFile", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var upload = String.Concat("UploadButton", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var delete = String.Concat("DeleteButton", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var view = String.Concat("ViewButton", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);

                                                    var LedgerCount = (from a in Model.Ledgerss where a.SubGroupNo.Equals(@Subs.SubGroupNo) select a.LedgerNo).Count();
                                                     
                                                    <tr>
                                                        <td>
                                                         @if(LedgerCount > 0)
                                                         {
                                                            <img src="~/Images/plus.png" />
                                                            <div id="NestedTable" style="display:none">
                                                                @if (@Subs.RequireInput)
                                                                {
                                                                        LedgerNo = Count;
                                                                        <table class="table ChildGrid">                                                                       
                                                                        @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                                                                        {
                                                                            var Ledgerdetails = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a).FirstOrDefault();
                                                                            var LedPrevYearApp = (from a in Model.Approved where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a).FirstOrDefault();                       

                                                                            <tr>
                                                                                <td></td>
                                                                                <td></td>
                                                                                <td>
                                                                                    @{
                                                                                       Model.SubGroupNameOrLedgerName.Insert(LedgerNo, Ledgers.LedgerNo);
                                                                                     }
                                                                                     @Html.DisplayFor(model => model.SubGroupNameOrLedgerName[LedgerNo])
                                                                                     @Html.HiddenFor(model => model.SubGroupNameOrLedgerName[LedgerNo])
                                                                                </td>
                                                                                <td>@Ledgers.LedgerName</td>
                                                                                <td>
                                                                                    @if (!DelegateEditStatus)
                                                                                    {
                                                                                            <div class="form-group">
                                                                                                @{
                                                                                                    Model.BudEstCurrFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.BudEstCurrFin.ToString("F")) : Convert.ToDecimal(0.00));
                                                                                                }
                                                                                       @*Html.TextBox(@name1+@Ledgers.LedgerNo, Ledgerdetails!=null ? Ledgerdetails.BudEstCurrFin.ToString("F") : " ", new { @class = "form-control", @id = @name1+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                            @Html.ValidationMessage(@name1+@Ledgers.LedgerNo,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                                            @Html.TextBoxFor(model => model.BudEstCurrFin[LedgerNo], new { @class = "form-control", @id = @name1+@Ledgers.LedgerNo, @readonly = "readonly"}) )
                                                                                            @Html.ValidationMessageFor(model => model.BudEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <div class="form-group">
                                                                                        @{
                                                                                            Model.BudEstCurrFin.Insert(LedgerNo, LedPrevYearApp!=null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F")) : Convert.ToDecimal(0.00));
                                                                                         }
                                                                                     @*Html.TextBox(@name1+@Ledgers.LedgerNo, LedPrevYearApp!=null?LedPrevYearApp.BudEstNextFin.ToString("F")  : " ", new { @class = "form-control", @id = @name1+@Ledgers.LedgerNo, Name=@name1, @readonly = "readonly"})
                                                                                            @Html.ValidationMessage(@name1+@Ledgers.LedgerNo,  "*",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                                            @Html.TextBoxFor(model => model.BudEstCurrFin[LedgerNo], new { @class = "form-control", @id = @name1+@Ledgers.LedgerNo, Name=@name1, @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.BudEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    }
                                                                                </td>
                                                                                <td>
                                                                                    @if (User.IsInRole("Admin") || !DelegateEditStatus)
                                                                                    {
                                                                                        <div class="form-group">
                                                                                        @{
                                                                                            Model.ActPrevFin.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.ActPrevFin.ToString("F")) : Convert.ToDecimal(0.00));
                                                                                         }
                                                                                     @*Html.TextBox(@name2+@Ledgers.LedgerNo, Ledgerdetails!=null ? Ledgerdetails.ActPrevFin.ToString("F") : " ", new { @class = "form-control", @id = @name2+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                           @Html.ValidationMessage(@name2+@Ledgers.LedgerNo,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                                                @Html.TextBoxFor(model => model.ActPrevFin[LedgerNo], new { @class = "form-control", @id = @name2+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                           @Html.ValidationMessageFor(model => model.ActPrevFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <div class="form-group">
                                                                                        @{
                                                                                            Model.ActPrevFin.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.ActPrevFin.ToString("F")) : Convert.ToDecimal(0.00));
                                                                                         }
                                                                                       @*Html.TextBox(@name2+@Ledgers.LedgerNo, Ledgerdetails!=null ? Ledgerdetails.ActPrevFin.ToString("F") : " ", new { @class = "form-control", @id = @name2+@Ledgers.LedgerNo})
                                                                                               @Html.ValidationMessage(@name2+@Ledgers.LedgerNo,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                                               @Html.TextBoxFor(model => model.ActPrevFin[LedgerNo], new { @class = "form-control", @id = @name2+@Ledgers.LedgerNo})
                                                                                               @Html.ValidationMessageFor(model => model.ActPrevFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    }
                                                                                </td>
                                                                                <td>
                                                                                    @if (User.IsInRole("Admin") || !DelegateEditStatus)
                                                                                    {
                                                                                        <div class="form-group">
                                                                                        @{
                                                                                            Model.ActCurrFinTillsecondQuart.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.ActCurrFinTill2ndQuart.ToString("F")) : Convert.ToDecimal(0.00));
                                                                                         }
                                                                                    @*Html.TextBox(@name3+@Ledgers.LedgerNo, Ledgerdetails!=null ? Ledgerdetails.ActCurrFinTill2ndQuart.ToString("F") : " ", new { @class = "form-control", @id = @name3+@Ledgers.LedgerNo, @readonly = "readonly"}) 
                                                                                            @Html.ValidationMessage(@name3+@Ledgers.LedgerNo,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                                                @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[LedgerNo], new { @class = "form-control", @id = @name3+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                                @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <div class="form-group">
                                                                                         @{
                                                                                            Model.ActCurrFinTillsecondQuart.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.ActCurrFinTill2ndQuart.ToString("F")) : Convert.ToDecimal(0.00));
                                                                                         }
                                                                                    @*Html.TextBox(@name3+@Ledgers.LedgerNo, Ledgerdetails!=null ? Ledgerdetails.ActCurrFinTill2ndQuart.ToString("F") : " ", new { @class = "form-control", @id = @name3+@Ledgers.LedgerNo})
                                                                                                @Html.ValidationMessage(@name3+@Ledgers.LedgerNo,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                                                @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[LedgerNo], new { @class = "form-control", @id = @name3+@Ledgers.LedgerNo})
                                                                                                @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    }
                                                                                </td>
                                                                                </tr>

                                                                             LedgerNo++;
                                                                            }
                                                                    </table>
                                                                    Count = LedgerNo;
                                                                }
                                                                else
                                                                {
                                                                    <table class="table ChildGrid">
                                                                        @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                                                                        {
                                                                            <tr>
                                                                                <td></td>
                                                                                <td></td>
                                                                                <td>@Ledgers.LedgerNo</td>
                                                                                <td>@Ledgers.LedgerName</td>
                                                                            </tr>
                                                                        }
                                                                    </table>
                                                                }
                                                                </div>
                                                                
                                                            }
                                                        </td>
                                                        <td>
                                                            @{
                                                                Model.SubGroupNameOrLedgerName.Insert(Count, Subs.SubGroupNo);
                                                             }
                                                             @Html.DisplayFor(model => model.SubGroupNameOrLedgerName[Count])
                                                             @Html.HiddenFor(model => model.SubGroupNameOrLedgerName[Count])
                                                        </td>
                                                        <td></td>
                                                        <td>
                                                            @Subs.subGroupName
                                                        </td>
                                                        <td>

                                                        @if (@Subs.RequireInput && DelegateEditStatus)
                                                        {
                                                                var LedgerPastYearAppBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.BudEstCurrFin.Insert(Count, LedgerPastYearAppBudEstCurrFin != null ? Convert.ToDecimal(LedgerPastYearAppBudEstCurrFin.ToString("F")) : Convert.ToDecimal(0.00));
                                                                    } 
                                                                                     
                                                                     @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @class = "form-control", @id = @name1, @readonly = "readonly"})
                                                                     @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        else if (@Subs.RequireInput && !DelegateEditStatus)
                                                        {
                                                            var LedgerSumBudEstCurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstCurrFin).Sum();                                                                                                                            
                                                            <div class="form-group">
                                                                   @{
                                                                        Model.BudEstCurrFin.Insert(Count, LedgerSumBudEstCurrFin!=null ? Convert.ToDecimal(LedgerSumBudEstCurrFin.ToString("F")): Convert.ToDecimal(0.00));
                                                                    } 
                                                              @*Html.TextBox(@name1, LedgerSumBudEstCurrFin!=null ? LedgerSumBudEstCurrFin.ToString("F") : " ", new { @class = "form-control", @id = @name1, @readonly = "readonly"})
                                                                    @Html.ValidationMessage(@name1,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                    @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @class = "form-control", @id = @name1, @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                            else if(!DelegateEditStatus)
                                                            {
                                                                <div class="form-group">
                                                                @{
                                                                    Model.BudEstCurrFin.Insert(Count, details!=null? Convert.ToDecimal(details.BudEstCurrFin.ToString("F")): Convert.ToDecimal(0.00));
                                                                 }
                                                                 @*Html.TextBox(@name1, details!=null?details.BudEstCurrFin.ToString("F") : " ", new { @class = "form-control", @id = @name1, @readonly = "readonly"})
                                                                        @Html.ValidationMessage(@name1,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                        @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @class = "form-control", @id = @name1, @readonly = "readonly"})
                                                                        @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                                <div class="form-group">
                                                                @{
                                                                    Model.BudEstCurrFin.Insert(Count, PrevYearApp!=null ? Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F")) : Convert.ToDecimal(0.00));
                                                                 }
                                                                @*Html.TextBox(@name1, PrevYearApp!=null?PrevYearApp.BudEstNextFin.ToString("F") : " ", new { @class = "form-control", @id = @name1, Name=@name1, @readonly = "readonly"})
                                                                     @Html.ValidationMessage(@name1,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                     @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @class = "form-control", @id = @name1, Name=@name1, @readonly = "readonly"})
                                                                     @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            }
                                                        </td>
                                                        <td>
                                                            @if (@Subs.RequireInput)
                                                            {
                                                                var LedgerSumActPrevFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActPrevFin).Sum();
                                                                <div class="form-group">
                                                                @{
                                                                    Model.ActPrevFin.Insert(Count, LedgerSumActPrevFin!=null ? Convert.ToDecimal(LedgerSumActPrevFin.ToString("F")): Convert.ToDecimal(0.00));
                                                                 }
                                                                @*Html.TextBox(@name2, LedgerSumActPrevFin!=null ? LedgerSumActPrevFin.ToString("F") : " ", new { @class = "form-control", @id = @name2, @readonly = "readonly"})
                                                                     @Html.ValidationMessage(@name2,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                     @Html.TextBoxFor(model => model.ActPrevFin[Count], new { @class = "form-control", @id = @name2, @readonly = "readonly"})
                                                                     @Html.ValidationMessageFor(model => model.ActPrevFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            }
                                                            else if (User.IsInRole("Admin") || !DelegateEditStatus)
                                                            {
                                                                <div class="form-group">
                                                                @{
                                                                    Model.ActPrevFin.Insert(Count, details!=null ? Convert.ToDecimal(details.ActPrevFin.ToString("F")): Convert.ToDecimal(0.00));
                                                                 }
                                                               @*Html.TextBox(@name2, details!=null ? details.ActPrevFin.ToString("F"): " ", new { @class = "form-control", @id = @name2, @readonly = "readonly"})
                                                                        @Html.ValidationMessage(@name2,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                        @Html.TextBoxFor(model => model.ActPrevFin[Count], new { @class = "form-control", @id = @name2, @readonly = "readonly"})
                                                                        @Html.ValidationMessageFor(model => model.ActPrevFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                                <div class="form-group">
                                                                 @{
                                                                    Model.ActPrevFin.Insert(Count, details!=null ? Convert.ToDecimal(details.ActPrevFin.ToString("F")): Convert.ToDecimal(0.00));
                                                                 }
                                                                @*Html.TextBox(@name2, details!=null ? details.ActPrevFin.ToString("F") : " ", new { @class = "form-control", @id = @name2})
                                                                     @Html.ValidationMessage(@name2,  "*",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                     @Html.TextBoxFor(model => model.ActPrevFin[Count],   new { @class = "form-control", @id = @name2})
                                                                     @Html.ValidationMessageFor(model => model.ActPrevFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            }
                                                        </td>
                                                        <td>
                                                            @if (@Subs.RequireInput)
                                                            {
                                                                var LedgerSumActCurrFinTill2ndQuart = (from a in Model.Detailss where a.GroupNumber.Equals(@Subs.SubGroupNo) select a.ActCurrFinTill2ndQuart).Sum();
                                                                <div class="form-group">
                                                                 @{
                                                                        Model.ActCurrFinTillsecondQuart.Insert(Count, LedgerSumActCurrFinTill2ndQuart!=null ? Convert.ToDecimal(LedgerSumActCurrFinTill2ndQuart.ToString("F")) : Convert.ToDecimal(0.00));
                                                                 }
                                                                @*Html.TextBox(@name3, LedgerSumActCurrFinTill2ndQuart!=null ? LedgerSumActCurrFinTill2ndQuart.ToString("F") : " ", new { @class = "form-control", @id = @name3, @readonly = "readonly"})
                                                                     @Html.ValidationMessage(@name3,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                    @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[Count],   new { @class = "form-control", @id = @name3, @readonly = "readonly"})
                                                                     @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            }
                                                            else if (User.IsInRole("Admin") || !DelegateEditStatus)
                                                            {
                                                                <div class="form-group">
                                                                @{
                                                                        Model.ActCurrFinTillsecondQuart.Insert(Count, details!=null ? Convert.ToDecimal(details.ActCurrFinTill2ndQuart.ToString("F")) : Convert.ToDecimal(0.00));
                                                                 }
                                                                 @*Html.TextBox(@name3, details!=null ? details.ActCurrFinTill2ndQuart.ToString("F") : " ", new { @class = "form-control", @id = @name3, @readonly = "readonly"})
                                                                      @Html.ValidationMessage(@name3,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                    @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[Count],   new { @class = "form-control", @id = @name3, @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                                <div class="form-group">
                                                                @{
                                                                        Model.ActCurrFinTillsecondQuart.Insert(Count, details!=null ? Convert.ToDecimal(details.ActCurrFinTill2ndQuart.ToString("F")) : Convert.ToDecimal(0.00));
                                                                 }
                                                               @*Html.TextBox(@name3, details!=null ? details.ActCurrFinTill2ndQuart.ToString("F") : " ", new { @class = "form-control", @id = @name3})
                                                                    @Html.ValidationMessage(@name3,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                    @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[Count],   new { @class = "form-control", @id = @name3})
                                                                    @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            }
                                                        </td>
                                                    </tr>
                                                    Count++;
                                                    TableCount++;
                                                }
                                                <tr>
                                                    <td>
                                                    </td>
                                                    <td></td>
                                                    <td>
                                                        Sub-Total
                                                    </td>
                                                    <td>
                                                        Sub-Total
                                                    </td>

                                                    <td id="@Sumname1-Total">
                                                        @SumBudEstCurrFin.ToString("F4")
                                                    </td >
                                                    <td id="@Sumname2-Total">
                                                        @SumActPrevFin.ToString("F4")
                                                    </td>
                                                    <td id="@Sumname3-Total">
                                                        @SumActCurrFinTill2ndQuart.ToString("F4")
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                        @*Html.Hidden("SectionName",Model.SectionName, new{@id = @identi+"-SectionName" })
                                        @Html.Hidden("GroupName",Model.GroupName,  new{@id = @identi+"-GroupName" })
                                        @Html.Hidden("SelectedAcademicYear", Model.SelectedAcademicYear,  new{@id = @identi+"-SelectedAcademicYear" })
                                        @Html.Hidden("SelectedDivisionName",Model.SelectedDivisionName,  new{@id = @identi+"-SelectedDivisionName" })*@
                                        @if ((User.IsInRole("Admin") && AdminEditStatus && Model.PreviousYearAdminCount>0) || (!User.IsInRole("Admin") && DelegateEditStatus) && Model.PreviousYearAdminCount > 0)
                                        {
                                            <input id="@Submit" class="Submit" formaction="~/Tabs/Index" type="submit" value="Save Budget" style="align-self:center"/>
                                        }
                                        @*}*@
                            </div>
                           
                         }
                        else
                        {  
                                                     
                             <div id="@identi" class="tab-pane fade" role="tabpanel" aria-labelledby="@identi-tab" style="width: 1750px;">
                                <br />
                                 @if (!User.IsInRole("Admin") && AdminEditStatus && @Model.WaitingForApprovalMessage.Equals(" ") && @Model.ApprovedMessage.Equals(" "))
                                 {
                                   <div style="color:green"> * Budget proposal @Model.SelectedAcademicYear for <span style="color:red">'@item.GroupName'</span> has been submitted to AC&BW successfully </div>
                                 }
                                        else if (User.IsInRole("Admin") && !AdminEditStatus && !@Model.WaitingForApprovalMessage.Equals(" "))
                                 {
                                    <div style="color:green"> * Budget values for @Model.SelectedAcademicYear for <span style="color:red">'@item.GroupName'</span> has been saved successfully </div>
                                 }
                                        <table id="@identi-outertable" class="table table-responsive table-hover">
                                            <thead>
                                                <tr class="text-center">
                                                    <th colspan="100" style="color:red;border-bottom:hidden;">(*FIGURES IN CRORES)</th>
                                                </tr>
                                                <tr>
                                                    <th></th>
                                                    <th class="w-5">
                                                        @*SubGroupNumber*@
                                                        HEAD NO.
                                                    </th>
                                                    <th class="w-5">SUB HEAD NO.</th>
                                                    <th class="w-5">
                                                        @*SubGroupName*@
                                                        HEAD NAME
                                                    </th>
                                                    <th class="CurrentBudgetEstimates w-10">

                                                    </th>
                                                    <th class="PreviousActualBudget w-10">

                                                    </th>
                                                    <th class="PreviousHalfYearActualBudget w-10">

                                                    </th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var Subs in Model.SubGroupss.Where(d => d.GroupNo.Equals(@item.GroupNo)))
                                                {
                                                    var details = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a).FirstOrDefault();
                                                    var PrevYearApp =  (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a).FirstOrDefault();                                           

                                                    var name1 = String.Concat("BudEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name2 = String.Concat("ActPrevFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name3 = String.Concat("ActCurrFinTillsecondQuart", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name4 = String.Concat("RevEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name5 = String.Concat("PerVarRevEstOverBudgEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name6 = String.Concat("ACAndBWPropRECurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name7 = String.Concat("BudgEstNexFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name8 = String.Concat("PerVarRevEstOverBudgEstNxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name9 = String.Concat("ACAndBWPropRENxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name10 = String.Concat("Justification", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name11 = String.Concat("UploadFile", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var upload = String.Concat("UploadButton", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var delete = String.Concat("DeleteButton", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var view = String.Concat("ViewButton", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);

                                                    var LedgerCount = (from a in Model.Ledgerss where a.SubGroupNo.Equals(@Subs.SubGroupNo) select a.LedgerNo).Count();
                                                    
                                                    <tr>
                                                        <td>
                                                            @if(LedgerCount > 0)
                                                            {
                                                              <img src="~/Images/plus.png" />
                                                              <div id="NestedTable" style="display:none">
                                                                @if (@Subs.RequireInput)
                                                                {
                                                                        LedgerNo = Count;
                                                                        <table class="table ChildGrid">                                                                       
                                                                        @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                                                                        {
                                                                            var Ledgerdetails = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a).FirstOrDefault();
                                                                            var LedPrevYearApp = (from a in Model.Approved where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a).FirstOrDefault();

                                                                            <tr>
                                                                                <td></td>
                                                                                <td></td>
                                                                                <td>
                                                                                    @{
                                                                                       Model.SubGroupNameOrLedgerName.Insert(LedgerNo, Ledgers.LedgerNo);
                                                                                     }
                                                                                     @Html.DisplayFor(model => model.SubGroupNameOrLedgerName[LedgerNo])
                                                                                     @Html.HiddenFor(model => model.SubGroupNameOrLedgerName[LedgerNo])
                                                                                </td>
                                                                                <td>@Ledgers.LedgerName</td>
                                                                                <td>
                                                                                    @if (!DelegateEditStatus)
                                                                                    {
                                                                                        <div class="form-group">
                                                                                        @{
                                                                                            Model.BudEstCurrFin.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.BudEstCurrFin.ToString("F")): Convert.ToDecimal(0.00));
                                                                                        }
                                                                                       @*Html.TextBox(@name1+@Ledgers.LedgerNo, Ledgerdetails!=null ? Ledgerdetails.BudEstCurrFin.ToString("F") : " ", new { @class = "form-control", @id = @name1+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                             @Html.ValidationMessage(@name1+@Ledgers.LedgerNo,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                                            @Html.TextBoxFor(model => model.BudEstCurrFin[LedgerNo],new { @class = "form-control", @id = @name1+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.BudEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <div class="form-group">
                                                                                        @{
                                                                                            Model.BudEstCurrFin.Insert(LedgerNo, LedPrevYearApp!=null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F")): Convert.ToDecimal(0.00));
                                                                                        }
                                                                                      @*Html.TextBox(@name1+@Ledgers.LedgerNo, LedPrevYearApp!=null ? LedPrevYearApp.BudEstNextFin.ToString("F")  : " ", new { @class = "form-control", @id = @name1+@Ledgers.LedgerNo, Name=@name1, @readonly = "readonly"})                                                                                       
                                                                                               @Html.ValidationMessage(@name1+@Ledgers.LedgerNo,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                                               @Html.TextBoxFor(model => model.BudEstCurrFin[LedgerNo],new { @class = "form-control", @id = @name1+@Ledgers.LedgerNo, Name=@name1, @readonly = "readonly"})
                                                                                               @Html.ValidationMessageFor(model => model.BudEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    }
                                                                                </td>
                                                                                <td>
                                                                                    @if (User.IsInRole("Admin") || !DelegateEditStatus)
                                                                                    {
                                                                                        <div class="form-group">
                                                                                       @{
                                                                                            Model.ActPrevFin.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.ActPrevFin.ToString("F")) : Convert.ToDecimal(0.00));
                                                                                        }

                                                                                       @*Html.TextBox(@name2+@Ledgers.LedgerNo, Ledgerdetails!=null ? Ledgerdetails.ActPrevFin.ToString("F") : " ", new { @class = "form-control", @id = @name2+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                            @Html.ValidationMessage(@name2+@Ledgers.LedgerNo,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            @Html.TextBoxFor(model => model.ActPrevFin[LedgerNo],new { @class = "form-control", @id = @name2+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.ActPrevFin[LedgerNo]," ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <div class="form-group">
                                                                                        @{
                                                                                            Model.ActPrevFin.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.ActPrevFin.ToString("F")) : Convert.ToDecimal(0.00));
                                                                                        }

                                                                                     @*Html.TextBox(@name2+@Ledgers.LedgerNo, Ledgerdetails!=null ? Ledgerdetails.ActPrevFin.ToString("F") : " ", new { @class = "form-control", @id = @name2+@Ledgers.LedgerNo})
                                                                                            @Html.ValidationMessage(@name2+@Ledgers.LedgerNo,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            @Html.TextBoxFor(model => model.ActPrevFin[LedgerNo],new { @class = "form-control", @id = @name2+@Ledgers.LedgerNo})
                                                                                            @Html.ValidationMessageFor(model => model.ActPrevFin[LedgerNo]," ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    }
                                                                                </td>
                                                                                <td>
                                                                                    @if (User.IsInRole("Admin") || !DelegateEditStatus)
                                                                                    {
                                                                                        <div class="form-group">
                                                                                                @{
                                                                                                    Model.ActCurrFinTillsecondQuart.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ActCurrFinTill2ndQuart.ToString("F")) : Convert.ToDecimal(0.00));
                                                                                                }

                                                                                     @*Html.TextBox(@name3+@Ledgers.LedgerNo, Ledgerdetails!=null ? Ledgerdetails.ActCurrFinTill2ndQuart.ToString("F") : " ", new { @class = "form-control", @id = @name3+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                             @Html.ValidationMessage(@name3+@Ledgers.LedgerNo,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                                            @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[LedgerNo],new { @class = "form-control", @id = @name3+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                                @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <div class="form-group">
                                                                                                @{
                                                                                                    Model.ActCurrFinTillsecondQuart.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ActCurrFinTill2ndQuart.ToString("F")) : Convert.ToDecimal(0.00));
                                                                                                }
                                                                                     @*Html.TextBox(@name3+@Ledgers.LedgerNo, Ledgerdetails!=null ? Ledgerdetails.ActCurrFinTill2ndQuart.ToString("F") : " ", new { @class = "form-control", @id = @name3+@Ledgers.LedgerNo})
                                                                                            @Html.ValidationMessage(@name3+@Ledgers.LedgerNo,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                                            @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[LedgerNo],new { @class = "form-control", @id = @name3+@Ledgers.LedgerNo})
                                                                                                @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    }
                                                                                </td>
                                                                                <td>
                                                                                    @if (User.IsInRole("Admin") && DelegateEditStatus)
                                                                                    {
                                                                                        <div class="form-group">
                                                                                                @{
                                                                                                    Model.RevEstCurrFin.Insert(LedgerNo, LedPrevYearApp!=null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F"))  : Convert.ToDecimal(0.00));
                                                                                                }

                                                                                     @*Html.TextBox(@name4+@Ledgers.LedgerNo, LedPrevYearApp!=null ? LedPrevYearApp.BudEstNextFin.ToString("F") : " ", new { @class = "form-control", @id = @name4+@Ledgers.LedgerNo})
                                                                                             @Html.ValidationMessage(@name4+@Ledgers.LedgerNo,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                                              @Html.TextBoxFor(model => model.RevEstCurrFin[LedgerNo],new { @class = "form-control", @id = @name4+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.RevEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    }
                                                                                   else if (!DelegateEditStatus)
                                                                                    {
                                                                                        <div class="form-group">
                                                                                          @{
                                                                                               Model.RevEstCurrFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.RevEstCurrFin.ToString("F")) : Convert.ToDecimal(0.00));
                                                                                            }

                                                                                    @*Html.TextBox(@name4+@Ledgers.LedgerNo, Ledgerdetails!=null ? Ledgerdetails.RevEstCurrFin.ToString("F") : " ", new { @class = "form-control", @id = @name4+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                            @Html.ValidationMessage(@name4+@Ledgers.LedgerNo,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                                            @Html.TextBoxFor(model => model.RevEstCurrFin[LedgerNo],new { @class = "form-control", @id = @name4+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.RevEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <div class="form-group">
                                                                                                @{
                                                                                                    Model.RevEstCurrFin.Insert(LedgerNo, LedPrevYearApp!=null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F"))  : Convert.ToDecimal(0.00));
                                                                                                }

                                                                                     @*Html.TextBox(@name4+@Ledgers.LedgerNo, LedPrevYearApp!=null ? LedPrevYearApp.BudEstNextFin.ToString("F") : " ", new { @class = "form-control", @id = @name4+@Ledgers.LedgerNo})
                                                                                             @Html.ValidationMessage(@name4+@Ledgers.LedgerNo,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                                              @Html.TextBoxFor(model => model.RevEstCurrFin[LedgerNo],new { @class = "form-control", @id = @name4+@Ledgers.LedgerNo})
                                                                                            @Html.ValidationMessageFor(model => model.RevEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    }
                                                                                </td>
                                                                                </tr>
                                                                         LedgerNo++;
                                                                        }
                                                                    </table>
                                                                    Count = LedgerNo;
                                                                }
                                                                else
                                                                {
                                                                    <table class="table ChildGrid"> 
                                                                        @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                                                                        {
                                                                            <tr>
                                                                                <td></td>
                                                                                <td>@Ledgers.LedgerNo</td>
                                                                                <td>@Ledgers.LedgerName</td>
                                                                            </tr>
                                                                        }
                                                                    </table>
                                                                }
                                                            </div>
                                                            
                                                            }
                                                        </td>
                                                        <td>
                                                            @{
                                                               Model.SubGroupNameOrLedgerName.Insert(Count, Subs.SubGroupNo);
                                                             }
                                                             @Html.DisplayFor(model => model.SubGroupNameOrLedgerName[Count])
                                                             @Html.HiddenFor(model => model.SubGroupNameOrLedgerName[Count])
                                                        </td>
                                                        <td></td>
                                                        <td>
                                                            @Subs.subGroupName
                                                        </td>
                                                        <td>

                                                        @if (@Subs.RequireInput && DelegateEditStatus)
                                                        {
                                                            var LedgerPastYearAppBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();                                                                                                                            
                                                            <div class="form-group">
                                                                @{
                                                                        Model.BudEstCurrFin.Insert(Count, LedgerPastYearAppBudEstCurrFin != null ? Convert.ToDecimal(LedgerPastYearAppBudEstCurrFin.ToString("F")) : Convert.ToDecimal(0.00));
                                                                  }
                                                            @*Html.TextBox(@name1, LedgerPastYearAppBudEstCurrFin!=null ? LedgerPastYearAppBudEstCurrFin.ToString("F") : " ", new { @class = "form-control", @id = @name1, @readonly = "readonly"})
                                                                    @Html.ValidationMessage(@name1,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                    @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @class = "form-control", @id = @name1, @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        else if (@Subs.RequireInput && !DelegateEditStatus)
                                                        {
                                                            var LedgerSumBudEstCurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstCurrFin).Sum();                                                                                                                            
                                                            <div class="form-group">
                                                            @{
                                                                   Model.BudEstCurrFin.Insert(Count, LedgerSumBudEstCurrFin!=null ? Convert.ToDecimal(LedgerSumBudEstCurrFin.ToString("F"))  : Convert.ToDecimal(0.00));
                                                                  }
                                                        @*Html.TextBox(@name1, LedgerSumBudEstCurrFin!=null ? LedgerSumBudEstCurrFin.ToString("F") : " ", new { @class = "form-control", @id = @name1, @readonly = "readonly"})
                                                                 @Html.ValidationMessage(@name1,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                 @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @class = "form-control", @id = @name1, @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        else if (!DelegateEditStatus)
                                                        {
                                                                <div class="form-group">
                                                                @{
                                                                   Model.BudEstCurrFin.Insert(Count, details!=null ? Convert.ToDecimal(details.BudEstCurrFin.ToString("F"))   : Convert.ToDecimal(0.00));
                                                                  }
                                                                @*Html.TextBox(@name1, details!=null ? details.BudEstCurrFin.ToString("F")  : " ", new { @class = "form-control", @id = @name1, @readonly = "readonly"})
                                                                     @Html.ValidationMessage(@name1,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                    @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @class = "form-control", @id = @name1, @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                        }
                                                        else
                                                        {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.BudEstCurrFin.Insert(Count, PrevYearApp!=null ? Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F")) : Convert.ToDecimal(0.00));
                                                                    }
                                                             @*Html.TextBox(@name1, PrevYearApp!=null ? PrevYearApp.BudEstNextFin.ToString("F") : " ", new { @class = "form-control", @id = @name1, Name=@name1, @readonly = "readonly"})
                                                                     @Html.ValidationMessage(@name1,  "*",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                    @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @class = "form-control", @id = @name1, Name=@name1, @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                        }
                                                        </td>
                                                        <td>
                                                            @if (@Subs.RequireInput)
                                                            {
                                                                var LedgerSumActPrevFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActPrevFin).Sum();
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ActPrevFin.Insert(Count, LedgerSumActPrevFin!=null ? Convert.ToDecimal(LedgerSumActPrevFin.ToString("F")): Convert.ToDecimal(0.00));
                                                                    }
                                                             @*Html.TextBox(@name2, LedgerSumActPrevFin!=null ? LedgerSumActPrevFin.ToString("F") : " ", new { @class = "form-control", @id = @name2, @readonly = "readonly"})
                                                                     @Html.ValidationMessage(@name1,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                    @Html.TextBoxFor(model => model.ActPrevFin[Count], new { @class = "form-control", @id = @name2, @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.ActPrevFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            }
                                                            else if (User.IsInRole("Admin") || !DelegateEditStatus)
                                                            {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ActPrevFin.Insert(Count, details!=null ? Convert.ToDecimal(details.ActPrevFin.ToString("F")): Convert.ToDecimal(0.00));
                                                                    }
                                                                    @*Html.TextBox(@name2, details!=null ? details.ActPrevFin.ToString("F"): " ", new { @class = "form-control", @id = @name2, @readonly = "readonly"})
                                                                     @Html.ValidationMessage(@name1,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                    @Html.TextBoxFor(model => model.ActPrevFin[Count], new { @class = "form-control", @id = @name2, @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.ActPrevFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ActPrevFin.Insert(Count, details!=null ? Convert.ToDecimal(details.ActPrevFin.ToString("F")): Convert.ToDecimal(0.00));
                                                                    }
                                                           @*Html.TextBox(@name2, details!=null ? details.ActPrevFin.ToString("F") : " ", new { @class = "form-control", @id = @name2})
                                                                     @Html.ValidationMessage(@name1,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                     @Html.TextBoxFor(model => model.ActPrevFin[Count], new { @class = "form-control", @id = @name2})
                                                                    @Html.ValidationMessageFor(model => model.ActPrevFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            }
                                                        </td>
                                                        <td>
                                                            @if (@Subs.RequireInput)
                                                            {
                                                                var LedgerSumActCurrFinTill2ndQuart = (from a in Model.Detailss where a.GroupNumber.Equals(@Subs.SubGroupNo) select a.ActCurrFinTill2ndQuart).Sum();
                                                                <div class="form-group">
                                                                     @{
                                                                        Model.ActCurrFinTillsecondQuart.Insert(Count, LedgerSumActCurrFinTill2ndQuart!=null ? Convert.ToDecimal(LedgerSumActCurrFinTill2ndQuart.ToString("F")): Convert.ToDecimal(0.00));
                                                                    }
                                                                    @*Html.TextBox(@name3, LedgerSumActCurrFinTill2ndQuart!=null ? LedgerSumActCurrFinTill2ndQuart.ToString("F") : " ", new { @class = "form-control", @id = @name3, @readonly = "readonly"})
                                                                     @Html.ValidationMessage(@name3,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                     @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[Count], new { @class = "form-control", @id = @name3, @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            }
                                                            else if (User.IsInRole("Admin") || !DelegateEditStatus)
                                                            {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ActCurrFinTillsecondQuart.Insert(Count, details != null ? Convert.ToDecimal(details.ActCurrFinTill2ndQuart.ToString("F")) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @*Html.TextBox(@name3, details!=null ? details.ActCurrFinTill2ndQuart.ToString("F") : " ", new { @class = "form-control", @id = @name3, @readonly = "readonly"})
                                                                     @Html.ValidationMessage(@name3,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                    @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[Count], new { @class = "form-control", @id = @name3, @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ActCurrFinTillsecondQuart.Insert(Count, details != null ? Convert.ToDecimal(details.ActCurrFinTill2ndQuart.ToString("F")) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @*Html.TextBox(@name3, details!=null ? details.ActCurrFinTill2ndQuart.ToString("F") : " ", new { @class = "form-control", @id = @name3})
                                                                    @Html.ValidationMessage(@name3,  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                    @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[Count],   new { @class = "form-control", @id = @name3})
                                                                    @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            }
                                                        </td>
                                                    </tr>
                                                    Count++;
                                                    TableCount++;
                                                }
                                                <tr>
                                                    <td>
                                                    </td>
                                                    <td></td>
                                                    <td>
                                                        Sub-Total
                                                    </td>
                                                    <td>
                                                        Sub-Total
                                                    </td>

                                                    <td id="@Sumname1-Total">
                                                        @SumBudEstCurrFin.ToString("F4")
                                                    </td>
                                                    <td id="@Sumname2-Total">
                                                        @SumActPrevFin.ToString("F4")
                                                    </td>
                                                    <td id="@Sumname3-Total">
                                                        @SumActCurrFinTill2ndQuart.ToString("F4")
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                        @*Html.Hidden("SectionName",Model.SectionName, new{@id = @identi+"-SectionName" })
                                        @Html.Hidden("GroupName",Model.GroupName,  new{@id = @identi+"-GroupName" })
                                        @Html.Hidden("SelectedAcademicYear", Model.SelectedAcademicYear,  new{@id = @identi+"-SelectedAcademicYear" })
                                        @Html.Hidden("SelectedDivisionName",Model.SelectedDivisionName,  new{@id = @identi+"-SelectedDivisionName" })*@
                                        @if ((User.IsInRole("Admin") && AdminEditStatus && Model.PreviousYearAdminCount>0) || (!User.IsInRole("Admin") && DelegateEditStatus) && Model.PreviousYearAdminCount > 0)
                                        {
                                            <input id="@Submit" class="Submit" formaction="~/Tabs/Index" type="submit" value="Save Budget" style="align-self:center"/>
                                        }
                                        @*}*@
                             </div>
                           
                        }
                          CounterBody++;
                    }
                </div>
            </div>
          }

           OuterBodyCount++;
       }
 
    </div>
    }
</div>


 

@section Scripts
{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script type="text/javascript" src="~/js/NestedTable.js"></script>
    <script type="text/javascript" src="~/jquery-validate/jquery.validate.min.js"></script>
    <script type="text/javascript" src="~/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

    <script type="text/javascript">
        
      $(document).ready(  
         function() 
         {
               onceDocReady();
              //resumeActiveTab();

                $('body').on('change',"#Division",
                    function (evt) {
                        $("#SelectedDivisionName").val($("#Division option:selected").text().trim());

                        var divisionname = $("#SelectedDivisionName").val();

                        $("#SelectedAcademicYear").val($("#AcademicYear option:selected").text().trim());

                        var academicyear = $("#SelectedAcademicYear").val();

                        var year = academicyear.split('-');
                        //alert(year[0]);
                        var sectionnoid = $('#outerTab li button.active').attr('id');
                        //alert(sectionnoid);
                        var section = sectionnoid.split('-');

                        var groupnoid = $('#' + section[0] + ' ul li button.active').attr('id');
                        //alert(groupnoid);
                        var group = groupnoid.split('-');
                        //alert(group[0]);

                        $.ajax
                            ({
                                type: "Get",
                                url: '@Url.Action("GetDetails","Tabs")',
                                data: { Year: year[0], Division: divisionname },
                                dataType: "html",
                                success: function (data) {
                                    //Whatever result you have got from your controller with html partial view replace with a specific html.
                                    //alert("Inside Ajax");
                                    //alert($("#outerdiv", data).html());

                                    //$("#outerdiv").html(data);

                                    //onceDocReady();

                                    $("#outerdiv").html($("#outerdiv",data).html());
                                    
                                    onceDocReady();
                                 
                                    //alert("Yes");
                                    //var activesectionid = $('#outerTab li button.active').attr('id');
                                    //alert("Not active : "+activesectionid);

                                    //$('#'+activesectionid).removeClass("active");
                                    //$('#'+sectionnoid).addClass("active");
                                    //alert("Active : "+sectionnoid);

                                    //var splitsection = activesectionid.split('-');

                                    //var activegroupnoid = $('#' + splitsection[0] + ' ul li button.active').attr('id');
                                    //$('#'+activegroupnoid).removeClass("active");
                                    //$('#'+groupnoid).addClass("active");
                                },
                                error: function (jqXHR, textStatus, errorThrown) {
                                    alert(errorThrown);
                                }

                            });


                    }

                );

                $('body').on('change',"#AcademicYear",
                    function (evt) {
                        $("#SelectedAcademicYear").val($("#AcademicYear option:selected").text().trim());

                        var academicyear = $("#SelectedAcademicYear").val();

                        $("#SelectedDivisionName").val($("#Division option:selected").text().trim());

                        var divisionname = $("#SelectedDivisionName").val();

                        var year = academicyear.split('-');
                        //alert(year[0]);

                        var sectionnoid = $('#outerTab li button.active').attr('id');

                        var section = sectionnoid.split('-');

                        var groupnoid = $('#' + section[0] + ' ul li button.active').attr('id');
                        //alert(groupnoid);
                        var group = groupnoid.split('-');
                        //alert(group[0]);

                        $.ajax
                            ({
                                type: "Get",
                                url: '@Url.Action("GetDetails","Tabs")',
                                data: { Year: year[0], Division: divisionname },
                                dataType: "html",
                                success: function (data)
                                {
                                    //Whatever result you have got from your controller with html partial view replace with a specific html.
                                    //alert("Inside Ajax");
                                    //alert("Inside Function");
 
                                    //$("#outerdiv").html(data);// HTML DOM replace
                                    
                                    //$("#outerdiv").html(data);
                                    $("#outerdiv").html($("#outerdiv", data).html());
                                    //alert("Function Completed");
                                    
                                    onceDocReady();
                                   
                                    //var activesectionid = $('#outerTab li button.active').attr('id');
                                    //alert("Not active : "+activesectionid);

                                    //$('#'+activesectionid).removeClass("active");
                                    //$('#'+sectionnoid).addClass("active");
                                    //alert("Active : "+sectionnoid);

                                    //var splitsection = activesectionid.split('-');

                                    //var activegroupnoid = $('#' + splitsection[0] + ' ul li button.active').attr('id');
                                    //$('#'+activegroupnoid).removeClass("active");
                                    //$('#'+groupnoid).addClass("active");
                                    //alert("Active : "+groupnoid);
                                  
                                },
                                error: function (jqXHR, textStatus, errorThrown)
                                {
                                    alert("errorThrown");
                                    //alert("Error Thrown");
                                }

                            });
                    }
                );

                $('body').on('click',".Submit",
                    function () {
                       
                             var sectionnoid = $('#outerTab li button.active').attr('id');
                        
                             var section = sectionnoid.split('-');
                        
                             var groupnoid = $('#' + section[0] + ' ul li button.active').attr('id');
                             
                             //alert($(this).val());
                             
                             if($(this).val()=="Delete" || $(this).val()=="Upload")
                             {
                                  
                                     var Ledgerid = $(this).closest('tr').closest('td').closest('tr').children('td').eq(1);
                                  //alert("SubGroupID"+Ledgerid.text());
                             }
                             else
                             {
                                  var Ledgerid = $(this).closest('tr').children('td').eq(1);
                                  //alert("LedgerID"+Ledgerid.text());
                             }
                             $("#SelectedAcademicYear").val($("#AcademicYear option:selected").text().trim());
                             //alert($("#SelectedAcademicYear").val());
                       

                             $("#SelectedDivisionName").val($("#Division option:selected").text().trim());
                             //alert($("#SelectedDivisionName").val());
                        
                             $('#SectionName').val($('#' + sectionnoid).text());
                             //alert($('#SectionName').val());
                        
                             $('#GroupName').val($('#' + groupnoid).text());
                             //alert($('#GroupName').val());

                             $('#SubGroupLedgerName').val(Ledgerid.text().trim());

                             //alert($('#SubGroupLedgerName').val());

                             //validateinput();
                    });

                $('body').on('click',".ViewFile",
                    function () {
                        var sectionnoid = $('#outerTab li button.active').attr('id');
                        
                        var section = sectionnoid.split('-');
                        
                        var groupnoid = $('#' + section[0] + ' ul li button.active').attr('id');
                        //alert($(this).val());
                        
                        var Ledgerid = $(this).closest('tr').closest('td').closest('tr').children('td').eq(1);
                        //alert(Ledgerid.text());
                        
                        $("#SelectedAcademicYear").val($("#AcademicYear option:selected").text().trim());
                        //alert($("#SelectedAcademicYear").val());
                       

                        $("#SelectedDivisionName").val($("#Division option:selected").text().trim());
                        //alert($("#SelectedDivisionName").val());
                        
                        $('#SectionName').val($('#' + sectionnoid).text());
                        //alert($('#SectionName').val());
                        
                        $('#GroupName').val($('#' + groupnoid).text());
                        //alert($('#GroupName').val());

                        $('#SubGroupLedgerName').val(Ledgerid.text().trim());
                        
                    });
                
                $('body').on('click',".FinalSubmit",
                    function () {
                        
                        $("#SelectedDivisionName").val($("#Division option:selected").text().trim());
                        //alert($("#SelectedDivisionName").val());

                        $("#SelectedAcademicYear").val($("#AcademicYear option:selected").text().trim());
                        //alert($("#SelectedAcademicYear").val());
                    });
                
                 
                
         });
        
        function onceDocReady()
        {
                 $("#SelectedAcademicYear").val($("#AcademicYear option:selected").text().trim());
                 var academicyear = $("#SelectedAcademicYear").val();
                 //alert('Inside Doc Ready module');
                 var year = academicyear.split('-');
                 //alert(year[1]);

                 $("#SelectedDivisionName").val($("#Division option:selected").text().trim());

                 $(".CurrentBudgetEstimates").text('Budget Estimates ' + $("#SelectedAcademicYear").val());
                 $(".PreviousActualBudget").text('Actual ' + (Number.parseInt(year[0]) - Number.parseInt(1)) + '-' + Number.parseInt(year[0]));
                 $(".PreviousHalfYearActualBudget").text('Actual upto 30.09.'+Number.parseInt(year[0]));
                 $(".CurrentYearRevisedEstimates").text('Revised Estimates ' + $("#SelectedAcademicYear").val());
                 $(".VariationInRevisedEstimates").text('% Variation in RE over the BE ' + $("#SelectedAcademicYear").val()  );
                 $(".ACBWProposalForRevisedEstimates").text('AC & BW Proposal for RE ' + $("#SelectedAcademicYear").val());
                 $(".BudgetEstimatesNextYear").text('Budget Estimates ' + Number.parseInt(year[1]) + '-' + (Number.parseInt(year[1]) + Number.parseInt(1)));
                 $(".VariationInBudgetEstimates").text('% Variation in BE ' + Number.parseInt(year[1]) + '-' + (Number.parseInt(year[1]) + Number.parseInt(1)) + 'over the RE ' + $("#SelectedAcademicYear").val());
                 $(".ACBWProposalForBudgetEstimates").text('AC & BW Proposal for BE ' + Number.parseInt(year[1]) + '-' + (Number.parseInt(year[1]) + Number.parseInt(1)));
                 $(".Justification").text('Justification');
                 $(".UploadDocuments").text('Upload Documents');


                        
        } 
        
        function resumeActiveTab()
        {
            var SectionName =  $('#SectionName').val();
              alert("Stored Section Name : "+SectionName);
                        
           var GroupName = $('#GroupName').val();
               alert("Stored Group Name :"+ GroupName);
                        
           var activesectionno = $('#outerTab li button.active').attr('id');

            var section = activesectionno.split('-');
                        
            var activegroupno = $('#' + section[0] + ' ul li button.active').attr('id');

              alert("Active Section Name :"+activesectionno);
              alert("Active Group Name :"+activegroupno);

             if(SectionName!=' ' && SectionName!=activesectionno)
             {
                   $('#'+activesectionno).removeClass("active");
                   $('#'+SectionName).addClass("active");
                   alert("Section class updated");
             }
                        
             if(GroupName!=' ' && GroupName!=activegroupno)
             {
                    $('#'+activegroupno).removeClass("active");
                    $('#' + GroupName).addClass("active");
                    alert("Group class updated");
             }
        }
       // function validateinput()
       // {

        //   alert("Inside Validation");
       //    return true;
        //}

    </script>
}

