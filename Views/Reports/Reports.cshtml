@model BudgetPortal.ViewModel.ReportView
@using System.Web;

@using BudgetPortal.ViewModel;
@using Microsoft.AspNetCore.Mvc;

@using Microsoft.AspNetCore.Identity;
@using BudgetPortal.Data;

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Reports";
    int OuterHeaderCount = 0;
    int OuterBodyCount = 0;
    int CountHeader = 0;
    int CounterBody = 0;
    var SumBudEstCurrFin = 0.00;
    var SumActPrevFin= 0.00;
    var SumActCurrFinTill2ndQuart = 0.00;
    var SumRevEstCurrFin = 0.00; 
    var SumBudgEstNexFin= 0.00;
    var ReportName = (from a in Model.ReportNames where a.Selected == true select a.Text).FirstOrDefault();
    var NextAcademicYear = "";
    String[] SplitAcademicYear = new String[1];
}
<br />

<div id="outerdiv">
    <div style="float:left">
        @{
            var SelAcademicYear = (from a in Model.AcademicYears where a.Selected == true select a.Text).FirstOrDefault();
            SplitAcademicYear = SelAcademicYear.Split("-");
            var Rep = (from a in Model.ReportNames where a.Selected == true select a.Text).FirstOrDefault();
            var DivType = (from a in Model.DivisionTypeNames where a.Selected == true select a.Text).FirstOrDefault();
        }  
    @Html.DropDownListFor(m => m.ExportTypes, new SelectList(Enum.GetValues(typeof(Export))), "Select--")
        @Html.ActionLink("Export To PDF","PrintPDF", "Reports", new { Year = SplitAcademicYear[0], DivisionType=DivType , Report= Rep }, null)
    </div>
    <div style="float:right">

        @Html.AntiForgeryToken()

        <table border="0" cellpadding="5" cellspacing="0">
            <tr>
                <td class="w-20">
                    @Html.DropDownListFor(m => m.SelectedReportID, Model.ReportNames,"--Please select any Report--", new { @class = "form-control", @id="Reports" })
                    @Html.HiddenFor(m => m.SelectedReportName, new {id="SelectedReportName"})
                    @Html.ValidationMessageFor(Model => Model.SelectedReportID, "", new { @class = "text-danger" })
                </td>
                <td class="w-20">
                    @Html.DropDownListFor(m => m.SelectedAcademicYearID, Model.AcademicYears,"--Please select any Academic Year--",new { @class = "form-control", @id="AcademicYear" })
                    @Html.HiddenFor(m => m.SelectedAcademicYear, new {id="SelectedAcademicYear"}) 
                    @Html.ValidationMessageFor(Model => Model.SelectedAcademicYearID, "", new { @class = "text-danger" })
                </td>
                
                @if(ReportName != "Headwise Consolidation")
                {
                <td class="w-20">
                    @Html.DropDownListFor(m => m.SelectedDivisionTypeID, Model.DivisionTypeNames,"--Please select any DivisionType Name--",new { @class = "form-control", @id="DivisionType" })
                    @Html.HiddenFor(m => m.SelectedDivisionTypeName, new {id="SelectedDivisionTypeName"})
                    @Html.ValidationMessageFor(Model => Model.SelectedDivisionTypeID, "", new { @class = "text-danger" })
                </td>
                }
            </tr>

        </table>
  
    </div>
    <br />
    <br />

    

    <ul id="outerTab" class="nav nav-pills" role="tablist">
        @foreach (var item in Model.Sectionss)
        {
            var inneridenti = String.Concat("Budget", @item.SectionNo.ToString());

            if (OuterHeaderCount == 0)
            {
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="@inneridenti-nav" data-bs-toggle="tab" data-bs-target="#@inneridenti" type="button" role="tab" aria-controls="@inneridenti" aria-selected="true">@item.SectionName</button>
                </li>
            }
            else
            {

                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="@inneridenti-nav" data-bs-toggle="tab" data-bs-target="#@inneridenti" type="button" role="tab" aria-controls="@inneridenti" aria-selected="false">@item.SectionName</button>
                </li>
            }

            OuterHeaderCount++;
        }
    </ul>

    <div id="outerTabContent" class="tab-content">
        <br />

        @foreach (var inner in Model.Sectionss)
        {
            var inneridenti = String.Concat("Budget", @inner.SectionNo.ToString());
            CountHeader = 0;
            CounterBody = 0;

            var SectionSumBudEstCurrFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.BudEstCurrFin).Sum();
            var SectionSumActPrevFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.ActPrevFin).Sum();
            var SectionSumActCurrFinTill2ndQuart = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.ActCurrFinTill2ndQuart).Sum();
            var SectionSumACAndBWPropRECurrFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.ACAndBWPropRECurrFin).Sum();
            var SectionSumPerVarRevEstOverBudgEstCurrFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.PerVarRevEstOverBudgEstCurrFin).Sum();
            //var SectionSumACAndBWPropRECurrFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.ACAndBWPropRECurrFin).Sum();
            var SectionSumACAndBWPropRENxtFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.ACAndBWPropRENxtFin).Sum();
            var SectionSumPerVarRevEstOverBudgEstNxtFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.PerVarRevEstOverBudgEstNxtFin).Sum();
            /*var SectionSumACAndBWPropRENxtFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.ACAndBWPropRENxtFin).Sum();*/

            if (OuterBodyCount == 0)
            {
                var SelectedDivisionTypeName = (from a in Model.DivisionTypeNames where a.Selected == true select a.Text).FirstOrDefault();

                <div id="@inneridenti" class="tab-pane fade show active" role="tabpanel" aria-labelledby="@inneridenti-tab" aria-selected="true">
                    <ul id="innertab1" class="nav nav-pills nav-justified" role="tablist">
                        @foreach (var item in Model.Groupss.Where(d => d.SectionNo == @inner.SectionNo))
                        {
                            var identi = String.Concat("Budget", Convert.ToInt32((Convert.ToDecimal(@item.GroupNo) * 10)).ToString());

                            if (CountHeader == 0)
                            {
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link active" id="@identi-nav" data-bs-toggle="tab" data-bs-target="#@identi" type="button" role="tab" aria-controls="@identi" aria-selected="true">@item.GroupName</button>
                                </li>
                            }
                            else
                            {
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link" id="@identi-nav" data-bs-toggle="tab" data-bs-target="#@identi" type="button" role="tab" aria-controls="@identi" aria-selected="false">@item.GroupName</button>
                                </li>
                            }

                            CountHeader++;
                        }
                    </ul>

                    <div id="innertabcontent1" class="tab-content">
                        <br />
                        @foreach (var item in Model.Groupss.Where(d => d.SectionNo == @inner.SectionNo))
                        {
                            int TableCount = 0;
                            
                            var identi = String.Concat("Budget", Convert.ToInt32((Convert.ToDecimal(@item.GroupNo) * 10)).ToString());                         

                            var Sumname1 = String.Concat("BudEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname2 = String.Concat("ActPrevFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname3 = String.Concat("ActCurrFinTillsecondQuart", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname4 = String.Concat("RevEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname7 = String.Concat("BudgEstNexFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            //var SelectReportName = (from a in Model.ReportNames where a.Selected == true select a.Text).FirstOrDefault();

                            @if (ReportName!=null && ReportName.Equals("Headwise Consolidation"))
                            {
                                SumBudEstCurrFin = (double)(from a in Model.Detailss 
                                                     where (a.GroupNumber.Equals(@item.GroupNo)) select a.BudEstCurrFin).Sum();
                                SumActPrevFin = (double)(from a in Model.Detailss 
                                                 where (a.GroupNumber.Equals(@item.GroupNo)) select a.ActPrevFin).Sum();
                                SumActCurrFinTill2ndQuart = (double)(from a in Model.Detailss
                                                                     where (a.GroupNumber.Equals(@item.GroupNo)) 
                                                              select a.ActCurrFinTill2ndQuart).Sum();
                                SumRevEstCurrFin = (double)(from a in Model.Detailss 
                                                    where (a.GroupNumber.Equals(@item.GroupNo))
                                                    select a.ACAndBWPropRECurrFin).Sum();
                                SumBudgEstNexFin = (double)(from a in Model.Detailss 
                                                     where (a.GroupNumber.Equals(@item.GroupNo)) 
                                                     select a.ACAndBWPropRENxtFin).Sum();   
                            }
                            else
                            {
                             SumBudEstCurrFin = (double)(from a in Model.Detailss 
                                                     join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                     where (b.DivisionType.Equals(SelectedDivisionTypeName) &&  a.GroupNumber.Equals(@item.GroupNo)) select a.BudEstCurrFin).Sum();
                             SumActPrevFin = (double)(from a in Model.Detailss 
                                                 join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                 where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo)) select a.ActPrevFin).Sum();
                             SumActCurrFinTill2ndQuart = (double)(from a in Model.Detailss 
                                                            join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                              where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo)) 
                                                              select a.ActCurrFinTill2ndQuart).Sum();
                             SumRevEstCurrFin = (double)(from a in Model.Detailss 
                                                    join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                    where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                    select a.ACAndBWPropRECurrFin).Sum();
                             SumBudgEstNexFin = (double)(from a in Model.Detailss 
                                                    join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                     where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo)) 
                                                     select a.ACAndBWPropRENxtFin).Sum();
                           }
                            if (CounterBody == 0)
                            {
                                //var ReportName = (from a in Model.ReportNames where a.Selected == true select a.Text).FirstOrDefault();
                                var SelectedAcademicYear = (from a in Model.AcademicYears where a.Selected == true select a.Text).FirstOrDefault();
                                var Report = (ReportName!=null && @ReportName.Contains("Budget")) ? @ReportName : @ReportName + " "+@SelectedAcademicYear;
                                if(SelectedAcademicYear!=null)
                                {
                                   SplitAcademicYear = SelectedAcademicYear.Split("-");
                                 
                                   NextAcademicYear = SplitAcademicYear[1]+"-"+(Convert.ToInt32(SplitAcademicYear[1])+Convert.ToInt32(1));
                                 }
                                var SumGroupReport = 0.00;
                             
                                if (ReportName!=null && ReportName.Equals("Actual"))
                                {
                                    //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo) ) select a.ActPrevFin).Sum();
                                    SumGroupReport = (Double)(from a in Model.Detailss
                                                              join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                              where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                              select a.ActPrevFin).Sum();
                                }
                                else if(ReportName!=null && ReportName.Equals("Actual Half Year"))
                                {
                                    //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo)) select a.ActCurrFinTill2ndQuart).Sum();
                                    SumGroupReport = (Double)(from a in Model.Detailss
                                                              join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                              where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                              select a.ActCurrFinTill2ndQuart).Sum();
                                
                                }
                                else if(ReportName!=null && ReportName.Equals("Revised Estimates"))
                                {
                                    //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo)) select a.ACAndBWPropRECurrFin).Sum();
                                    SumGroupReport = (Double)(from a in Model.Detailss
                                                              join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                              where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                              select a.ACAndBWPropRECurrFin).Sum();
                                }
                                /*else if (ReportName.Equals("Budget Estimates "+@SelectedAcademicYear))
                                {
                                    //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo)) select a.ACAndBWPropRENxtFin).Sum();
                                    SumGroupReport = (Double)(from a in Model.Detailss
                                                              join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                              where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                              select a.BudEstCurrFin).Sum();
                                
                                }*/
                                else if (ReportName!=null && ReportName.Equals("Budget Estimates "+@NextAcademicYear))
                                {
                                    //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo)) select a.ACAndBWPropRENxtFin).Sum();
                                    SumGroupReport = (Double)(from a in Model.Detailss
                                                              join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                              where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                              select a.ACAndBWPropRENxtFin).Sum();
                                
                                }

                                <div id="@identi" class="tab-pane fade show active" role="tabpanel" aria-labelledby="@identi-tab" style="width: 1750px;">

                                    @if (ReportName!=null && ReportName.Equals("Headwise Consolidation"))
                                    {

                                        <table id="@identi-outertable" class="table table-responsive table-hover">
                                            
                                                <thead>
                                                <tr class="text-center"  style="color:chocolate;border-bottom:hidden;"><th colspan="100">CENTRAL BOARD OF SECONDARY EDUCATION</th></tr>
                                                <tr class="text-center" style="color:chocolate;border-bottom:hidden;">
                                                    <th colspan="100">Shiksha Kendra 2, Community Centre, Preet Vihar, Delhi - 110 092</th>
                                                </tr>
                                                <tr class="text-center" style="color:green;border-bottom:hidden;">
                                                    <th colspan="100">@Report</th>
                                                </tr>
                                                <tr class="text-center" style="color:red;border-bottom:hidden;">
                                                    <th colspan="100">(*FIGURES IN CRORES)</th>
                                                </tr>
                                                    <tr>
                                                        <th class="w-5">HEAD NO.</th>
                                                        <th class="w-5">
                                                            SUB HEAD NO.
                                                        </th>
                                                        <th class="w-5">
                                                            HEAD NAME
                                                        </th>
                                                        <th class="CurrentBudgetEstimates w-20">

                                                        </th>
                                                        <th class="PreviousActualBudget w-20">

                                                        </th>
                                                        <th class="PreviousHalfYearActualBudget w-20">

                                                        </th>
                                                        <th class="CurrentYearRevisedEstimates w-20">

                                                        </th>
                                                       
                                                        <th class="BudgetEstimatesNextYear w-20">

                                                        </th>
                                                    </tr>
                                                </thead>
                                                <tbody>

                                                    @foreach (var Subs in Model.SubGroupss.Where(d => d.GroupNo.Equals(@item.GroupNo)))
                                                    {
                                                        //var BudEstCurrFinSum = (from a in Model.Detailss 
                                                       //                     join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                       //                     where (b.DivisionType.Equals(SelectedDivisionTypeName) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) 
                                                       //                     select a.BudEstCurrFin).Sum();
                                                    var BudEstCurrFinSum = (from a in Model.Detailss 
                                                                            where (a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                            select a.BudEstCurrFin).Sum();
                                                    //var ActPrevFinSum = (from a in Model.Detailss 
                                                    //                     join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                    //                     where (b.DivisionType.Equals(SelectedDivisionTypeName) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) 
                                                    //                     select a.ActPrevFin).Sum();
                                                    var ActPrevFinSum = (from a in Model.Detailss
                                                                         where (a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                         select a.ActPrevFin).Sum();
                                                    //var ActCurrFinTill2ndQuartSum = (from a in Model.Detailss 
                                                    //                                 join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                    //                                 where (b.DivisionType.Equals(SelectedDivisionTypeName) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) 
                                                    //                                 select a.ActCurrFinTill2ndQuart).Sum();
                                                    var ActCurrFinTill2ndQuartSum = (from a in Model.Detailss 
                                                                                     where (a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                                     select a.ActCurrFinTill2ndQuart).Sum();
                                                    //var RevEstCurrFinSum = (from a in Model.Detailss 
                                                    //                        join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                    //                        where (b.DivisionType.Equals(SelectedDivisionTypeName) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) 
                                                    //                        select a.ACAndBWPropRECurrFin).Sum();
                                                    var RevEstCurrFinSum = (from a in Model.Detailss 
                                                                            where (a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                            select a.ACAndBWPropRECurrFin).Sum();
                                                    //var BudgEstNexFinSum = (from a in Model.Detailss 
                                                    //                        join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                    //                        where (b.DivisionType.Equals(SelectedDivisionTypeName) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) 
                                                    //                        select a.ACAndBWPropRENxtFin).Sum();
                                                    var BudgEstNexFinSum = (from a in Model.Detailss 
                                                                            where (a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                            select a.ACAndBWPropRENxtFin).Sum();

                                                        var name1 = String.Concat("BudEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                        var name2 = String.Concat("ActPrevFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                        var name3 = String.Concat("ActCurrFinTillsecondQuart", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                        var name4 = String.Concat("RevEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                        var name7 = String.Concat("BudgEstNexFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                        
                                                        var LedgerCount = (from a in Model.Ledgerss where a.SubGroupNo.Equals(@Subs.SubGroupNo) select a.LedgerNo).Count();
                                                        
                                                        <tr>
                                                            <td>
                                                            @Subs.SubGroupNo
                                                            </td>
                                                            <td>
                                                                
                                                            </td>
                                                            <td>
                                                                @Subs.subGroupName
                                                            </td>
                                                        <td>
                                                            @Html.Label("BudEstCurrFinHeadwiseConsolidation" ,BudEstCurrFinSum!=null ? Convert.ToDecimal(BudEstCurrFinSum).ToString("F") : "-")
                                                        </td>
                                                        <td>
                                                            @Html.Label("ActPrevFinHeadwiseConsolidation" ,ActPrevFinSum!=null ? Convert.ToDecimal(ActPrevFinSum).ToString("F") : "-")
                                                        </td>
                                                        <td>
                                                            @Html.Label("ActCurrFinTill2ndQuartHeadwiseConsolidation" ,ActCurrFinTill2ndQuartSum!=null ? Convert.ToDecimal(ActCurrFinTill2ndQuartSum).ToString("F") : "-")
                                                        </td>
                                                        <td>
                                                            @Html.Label("RevEstCurrFinHeadwiseConsolidation" ,RevEstCurrFinSum!=null ? Convert.ToDecimal(RevEstCurrFinSum).ToString("F") : "-")
                                                        </td>
                                                        <td>
                                                            @Html.Label("BudgEstNexFinHeadwiseConsolidation" ,BudgEstNexFinSum!=null ? Convert.ToDecimal(BudgEstNexFinSum).ToString("F") : "-")
                                                        </td>
                                                            
                                                        </tr>

                                                    @if (LedgerCount > 0)
                                                    {
                                                        @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                                                        {
                                                            var BudEstCurrFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.BudEstCurrFin).Sum();
                                                            var ActPrevFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ActPrevFin).Sum();
                                                            var ActCurrFinTill2ndQuartLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ActCurrFinTill2ndQuart).Sum();
                                                            var RevEstCurrFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ACAndBWPropRECurrFin).Sum();
                                                            var BudgEstNexFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ACAndBWPropRENxtFin).Sum();


                                                            <tr>
                                                                <td></td>
                                                                <td>
                                                                    @Ledgers.LedgerNo
                                                                </td>
                                                                <td>@Ledgers.LedgerName</td>
                                                                <td>
                                                                    @Html.Label("BudEstCurrFinLedgerHeadwiseConsolidation" ,BudEstCurrFinLedgerSum!=null ? Convert.ToDecimal(BudEstCurrFinLedgerSum).ToString("F") : "-")
                                                                </td>
                                                                <td>
                                                                    @Html.Label("ActPrevFinLedgerHeadwiseConsolidation" ,ActPrevFinLedgerSum!=null ? Convert.ToDecimal(ActPrevFinLedgerSum).ToString("F") : "-")
                                                                </td>
                                                                <td>
                                                                    @Html.Label("ActCurrFinTill2ndQuartLedgerHeadwiseConsolidation" ,ActCurrFinTill2ndQuartLedgerSum!=null ? Convert.ToDecimal(ActCurrFinTill2ndQuartLedgerSum).ToString("F") : "-")
                                                                </td>
                                                                <td>
                                                                    @Html.Label("RevEstCurrFinLedgerHeadwiseConsolidation" ,RevEstCurrFinLedgerSum!=null ? Convert.ToDecimal(RevEstCurrFinLedgerSum).ToString("F") : "-")
                                                                </td>
                                                                <td>
                                                                    @Html.Label("BudgEstNexFinLedgerHeadwiseConsolidation" ,BudgEstNexFinLedgerSum!=null ? Convert.ToDecimal(BudgEstNexFinLedgerSum).ToString("F") : "-")
                                                                </td>
                                                            </tr>
                                                        }
                                                    }
                                                    TableCount++;
                                                    }
                                                    <tr>
                                                        <td>
                                                        </td>
                                                        <td>
                                                            Total
                                                        </td>
                                                        <td>
                                                            Total
                                                        </td>

                                                        <td id="@Sumname1-Total">
                                                            @SumBudEstCurrFin.ToString("F")
                                                        </td>
                                                        <td id="@Sumname2-Total">
                                                            @SumActPrevFin.ToString("F")
                                                        </td>
                                                        <td id="@Sumname3-Total">
                                                            @SumActCurrFinTill2ndQuart.ToString("F")
                                                        </td>
                                                        <td id="@Sumname4-Total">
                                                            @SumRevEstCurrFin.ToString("F")
                                                        </td>
                                                        
                                                        <td id="@Sumname7-Total">
                                                            @SumBudgEstNexFin.ToString("F")
                                                        </td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                    }
                                    else
                                    {
                                        <table id="@identi-outertable" class="table table-responsive table-hover">
                                            
                                            <thead>
                                                <tr class="text-center" style="color:chocolate;border-bottom:hidden;"><th colspan="100">CENTRAL BOARD OF SECONDARY EDUCATION</th></tr>
                                                <tr class="text-center" style="color:chocolate;border-bottom:hidden;">
                                                    <th colspan="100">Shiksha Kendra 2, Community Centre, Preet Vihar, Delhi - 110 092</th>
                                                </tr>
                                                <tr class="text-center" style="color:green;border-bottom:hidden;">
                                                    <th colspan="100"> Consolidated @Report</th>
                                                </tr>
                                                <tr class="text-center" style="color:red;border-bottom:hidden;">
                                                    <th colspan="100">*(FIGURES IN CRORES)</th>
                                                </tr>
                                                <tr>
                                                    <th class="w-5">
                                                       HEAD NO.
                                                    </th>
                                                    <th class="w-5">
                                                        SUB HEAD NO.
                                                    </th>
                                                    <th class="w-5">
                                                        NAME OF THE HEAD
                                                    </th>
                                                    <th class="w-5">
                                                       @Report
                                                    </th>
                                                    @foreach (var Regions in Model.Divisionss.Where(d => d.DivisionType.Equals(SelectedDivisionTypeName)))
                                                    {
                                                       <th class="w-5"> @Html.Label("RegionDivisionNames-"+Regions.DivisionID,Regions.DivisionName)</th>
                                                    }
                                                </tr>
                                            </thead>
                                            <tbody>

                                                @foreach (var Subs in Model.SubGroupss.Where(d => d.GroupNo.Equals(@item.GroupNo)))
                                                {
                                                    var details = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a).FirstOrDefault();
                                                    //var SelectedAcademicYear = (from a in Model.AcademicYears where a.Selected == true select a.Text).FirstOrDefault();
                                                    //var SplitAcademicYear = SelectedAcademicYear.Split("-");
                                                    //var NextAcademicYear = SplitAcademicYear[1]+"-"+(Convert.ToInt32(SplitAcademicYear[1])+Convert.ToInt32(1));
                                                    var SumSubGroupReport = 0.00;
                             
                                                            if (ReportName!=null && ReportName.Equals("Actual"))
                                                            {
                                                                 //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActPrevFin).Sum();
                                                                 SumSubGroupReport = (Double)(from a in Model.Detailss
                                                                              join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                              where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                                 select a.ActPrevFin).Sum();
                                                            
                                                            }
                                                            else if(ReportName!=null && ReportName.Equals("Actual Half Year"))
                                                            {
                                                                 //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActCurrFinTill2ndQuart).Sum();
                                                                   SumSubGroupReport = (Double)(from a in Model.Detailss
                                                                                 join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                                 where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                                 select a.ActCurrFinTill2ndQuart).Sum();
                                                            }
                                                            else if(ReportName!=null && ReportName.Equals("Revised Estimates"))
                                                            {
                                                                //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRECurrFin).Sum();
                                                                SumSubGroupReport = (Double)(from a in Model.Detailss
                                                                                 join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                                 where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                                 select a.ACAndBWPropRECurrFin).Sum();
                                                            }
                                                            else if (ReportName!=null && ReportName.Equals("Budget Estimates "+@NextAcademicYear))
                                                            {
                                                                 //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRENxtFin).Sum();
                                                                 SumSubGroupReport = (Double)(from a in Model.Detailss
                                                                                 join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                                 where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                                 select a.ACAndBWPropRENxtFin).Sum();
                                                            }
                                                           /* else if (ReportName.Equals("Budget Estimates "+@SelectedAcademicYear))
                                                            {
                                                                 //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRENxtFin).Sum();
                                                                 SumSubGroupReport = (Double)(from a in Model.Detailss
                                                                                 join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                                 where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                                 select a.BudEstCurrFin).Sum();
                                                            }*/
                                                    var LedgerCount = (from a in Model.Ledgerss where a.SubGroupNo.Equals(@Subs.SubGroupNo) select a.LedgerNo).Count();
                                                    
                                                    <tr>
                                                       
                                                        <td>
                                                            @Subs.SubGroupNo
                                                        </td>
                                                        <td></td>
                                                        <td>
                                                            @Subs.subGroupName
                                                        </td>
                                                        <td>
                                                              @Html.Label("SumSubGroupReport"+@Subs.SubGroupNo,@SumSubGroupReport!=0.00 ? @SumSubGroupReport.ToString("F") : "-")
                                                        </td>
                                                        @foreach (var Regions in Model.Divisionss.Where(d => d.DivisionType.Equals(SelectedDivisionTypeName)))
                                                        {
                                                            var result = (from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a).FirstOrDefault();

                                                             if (ReportName!=null && ReportName.Equals("Actual"))
                                                            {
                                                                
                                                                if(Subs.RequireInput)
                                                                {
                                                                  var LedgersSum =(Double) (from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a.ActPrevFin).Sum();
                                                                  <td align="right">
                                                                    @Html.Label("Actual" + Regions.DivisionName,@LedgersSum!= 0.00 ? Convert.ToDecimal(LedgersSum).ToString("F") : "-")
                                                                  </td>
                                                                }
                                                                else
                                                                {
                                                                   <td align="right">
                                                                     @Html.Label("Actual" + Regions.DivisionName,result!=null ? Convert.ToDecimal(result.ActPrevFin).ToString("F") : "-")
                                                                   </td>
                                                                }
                                                            }
                                                            else if(ReportName!=null && ReportName.Equals("Actual Half Year"))
                                                            {
                                                                if(Subs.RequireInput)
                                                                {
                                                                var LedgersSum = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a.ActCurrFinTill2ndQuart).Sum();
                                                                  
                                                                  <td align="right">
                                                                    @Html.Label("Actual Half Year" + Regions.DivisionName, LedgersSum!=0.00 ? Convert.ToDecimal(LedgersSum).ToString("F") : "-")
                                                                  </td>
                                                                }
                                                                else
                                                                {
                                                                  <td align="right">
                                                                    @Html.Label("Actual Half Year" + Regions.DivisionName, result!=null ? Convert.ToDecimal(result.ActCurrFinTill2ndQuart).ToString("F") : "-")
                                                                  </td>
                                                                }
                                                            }
                                                            else if(ReportName!=null && ReportName.Equals("Revised Estimates"))
                                                            {
                                                                if(Subs.RequireInput)
                                                                {
                                                                var LedgersSum = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a.ACAndBWPropRECurrFin).Sum();
                                                                  
                                                                  <td align="right">
                                                                    @Html.Label("Revised Estimates" + Regions.DivisionName, LedgersSum!=0.00 ? Convert.ToDecimal(LedgersSum).ToString("F") : "-")
                                                                  </td>
                                                                }
                                                                else
                                                                {
                                                                  <td align="right">
                                                                     @Html.Label("Revised Estimates" + Regions.DivisionName, result!=null ? Convert.ToDecimal(result.ACAndBWPropRECurrFin).ToString("F") : "-")
                                                                  </td>
                                                                }
                                                            }
                                                            else if (ReportName!=null && ReportName.Equals("Budget Estimates "+@NextAcademicYear))
                                                            {
                                                                if(Subs.RequireInput)
                                                                {
                                                                var LedgersSum = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a.ACAndBWPropRENxtFin).Sum();
                                                                  
                                                                  <td align="right">
                                                                    @Html.Label("Budget Estimates" +@NextAcademicYear+ Regions.DivisionName, LedgersSum!=0.00 ? Convert.ToDecimal(LedgersSum).ToString("F") : "-")
                                                                  </td>
                                                                }
                                                                else
                                                                {
                                                                   <td align="right">
                                                                      @Html.Label("Budget Estimates"+@NextAcademicYear+ Regions.DivisionName, result!=null ? Convert.ToDecimal(result.ACAndBWPropRENxtFin).ToString("F") : "-")
                                                                   </td>
                                                                }
                                                            }
                                                            /*else if (ReportName.Equals("Budget Estimates "+@SelectedAcademicYear))
                                                            {
                                                                if(Subs.RequireInput)
                                                                {
                                                                var LedgersSum = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a.BudEstCurrFin).Sum();
                                                                  
                                                                  <td align="right" class="w-20">
                                                                    @Html.Label("Budget Estimates "+@SelectedAcademicYear+ Regions.DivisionName, LedgersSum!=0.00 ? Convert.ToDecimal(LedgersSum).ToString("F") : "-")
                                                                  </td>
                                                                }
                                                                else
                                                                {
                                                                   <td align="right" class="w-20">
                                                                      @Html.Label("Budget Estimates "+@SelectedAcademicYear+ Regions.DivisionName, result!=null ? Convert.ToDecimal(result.BudEstCurrFin).ToString("F") : "-")
                                                                   </td>
                                                                }
                                                            }*/
                                                        }
                                                    </tr>

                                                    @if(LedgerCount >0)
                                                    {
                                                        @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                                                        {
                                                                        <tr>
                                                                            <td></td>
                                                                            <td>@Ledgers.LedgerNo</td>
                                                                            <td>@Ledgers.LedgerName</td>
                                                                            <td>
                                                                                @Html.Label("SumSubGroupReport"+@Subs.SubGroupNo,@SumSubGroupReport!=0.00 ? @SumSubGroupReport.ToString("F") : "-")
                                                                            </td>
                                                                            @foreach (var Regions in Model.Divisionss.Where(d => d.DivisionType.Equals(SelectedDivisionTypeName)))
                                                                            {
                                                                               var result = (from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.LedgerNumber.Equals(@Ledgers.LedgerNo))) select a).FirstOrDefault();

                                                                               if (ReportName!=null && ReportName.Equals("Actual"))
                                                                               {
                                                                                  <td align="right">
                                                                                      @Html.Label("Actual" + Regions.DivisionName,result!=null ? Convert.ToDecimal(result.ActPrevFin).ToString("F") : "-")
                                                                                  </td>
                                                                               }
                                                                               else if(ReportName!=null && ReportName.Equals("Actual Half Year"))
                                                                               {
                                                                                    <td align="right">
                                                                                         @Html.Label("Actual Half Year" + Regions.DivisionName, result!=null ? Convert.ToDecimal(result.ActCurrFinTill2ndQuart).ToString("F") : "-")
                                                                                    </td>
                                                                               }
                                                                               else if(ReportName!=null && ReportName.Equals("Revised Estimates"))
                                                                               {
                                                                
                                                                                     <td align="right">
                                                                                        @Html.Label("Revised Estimates" + Regions.DivisionName, result!=null ? Convert.ToDecimal(result.ACAndBWPropRECurrFin).ToString("F") : "-")
                                                                                     </td>
                                                                               }
                                                                               else if (ReportName!=null && ReportName.Equals("Budget Estimates "+@NextAcademicYear))
                                                                               {
                                                                
                                                                                      <td align="right">
                                                                                          @Html.Label("Budget Estimates"+@NextAcademicYear+ Regions.DivisionName, result!=null ? Convert.ToDecimal(result.ACAndBWPropRENxtFin).ToString("F") : "-")
                                                                                      </td>
                                                                               }
                                                            
                                                                            }
                                                                        </tr>
                                                         }
                                                                
                                                    }

                                                    TableCount++;
                                                }
                                            <tr>
                                                <td>
                                                </td>
                                                <td>
                                                    Total
                                                </td>
                                                <td>
                                                    Total
                                                </td>
                                                <td>
                                                    @Html.Label("SumGroupReport"+@item.GroupNo,@SumGroupReport!=0.00 ? @SumGroupReport.ToString("F") : "-")
                                                </td>
                                                @foreach (var Regions in Model.Divisionss.Where(d => d.DivisionType.Equals(SelectedDivisionTypeName)))
                                                {
                                                    if (ReportName!=null && ReportName.Equals("Actual"))
                                                    {
                                                        var result = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID)&&(item.GroupNo.Equals(a.GroupNumber))) select a.ActPrevFin).Sum();
                                                        <td align="right">
                                                            @Html.Label("ActualSum" + Regions.DivisionName,result!=0.00 ? Convert.ToDecimal(result).ToString("F") : "-")
                                                        </td>
                                                    }
                                                    else if (ReportName!=null && ReportName.Equals("Actual Half Year"))
                                                    {
                                                        var result = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (item.GroupNo.Equals(a.GroupNumber))) select a.ActCurrFinTill2ndQuart).Sum();
                                                        <td align="right">
                                                            @Html.Label("Actual Half Year Sum" + Regions.DivisionName, result!=0.00 ? Convert.ToDecimal(result).ToString("F") : "-")
                                                        </td>
                                                    }
                                                    else if (ReportName!=null && ReportName.Equals("Revised Estimates"))
                                                    {
                                                        var result = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (item.GroupNo.Equals(a.GroupNumber))) select a.ACAndBWPropRECurrFin).Sum();
                                                        <td align="right">
                                                            @Html.Label("Revised Estimates Sum" + Regions.DivisionName, result!=0.00 ? Convert.ToDecimal(result).ToString("F") : "-")

                                                        </td>
                                                    }
                                                    else if (ReportName!=null && ReportName.Equals("Budget Estimates "+@NextAcademicYear))
                                                    {
                                                        var result = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (item.GroupNo.Equals(a.GroupNumber))) select a.ACAndBWPropRENxtFin).Sum();
                                                        <td align="right">
                                                            @Html.Label("Budget Estimates Sum "+@NextAcademicYear+ Regions.DivisionName, result!=0.00 ? Convert.ToDecimal(result).ToString("F") : "-")
                                                        </td>
                                                    }
                                                  /*  else if (ReportName.Equals("Budget Estimates "+@SelectedAcademicYear))
                                                    {
                                                        var result = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (item.GroupNo.Equals(a.GroupNumber))) select a.BudEstCurrFin).Sum();
                                                        <td align="right" class="w-20">
                                                            @Html.Label("Budget Estimates Sum "+@SelectedAcademicYear+ Regions.DivisionName, result!=0.00 ? Convert.ToDecimal(result).ToString("F") : "-")
                                                        </td>
                                                    } */
                                                }
                                            </tr>
                                            </tbody>
                                        </table>
                                    }
                                </div>

                            }
                            else
                            {
                                //var SelectedDivisionTypeName = (from a in Model.DivisionTypeNames where a.Selected == true select a.Text).FirstOrDefault();
                                //var ReportName = (from a in Model.ReportNames where a.Selected == true select a.Text).FirstOrDefault();
                                var SelectedAcademicYear = (from a in Model.AcademicYears where a.Selected == true select a.Text).FirstOrDefault();
                                @if (SelectedAcademicYear is not null)
                                {
                                   SplitAcademicYear = SelectedAcademicYear.Split("-");
                                
                                    NextAcademicYear = SplitAcademicYear[1]+"-"+(Convert.ToInt32(SplitAcademicYear[1])+Convert.ToInt32(1));
                                }
                                var Report = ReportName != null && @ReportName.Contains("Budget") ? @ReportName : @ReportName + " " + @SelectedAcademicYear;

                                var SumGroupReport = 0.00;

                                if (ReportName!=null && ReportName.Equals("Actual"))
                                {
                                    //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo) ) select a.ActPrevFin).Sum();
                                    SumGroupReport = (Double)(from a in Model.Detailss
                                                              join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                              where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                              select a.ActPrevFin).Sum();
                                }
                                else if (ReportName!=null && ReportName.Equals("Actual Half Year"))
                                {
                                    //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo)) select a.ActCurrFinTill2ndQuart).Sum();
                                    SumGroupReport = (Double)(from a in Model.Detailss
                                                              join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                              where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                              select a.ActCurrFinTill2ndQuart).Sum();

                                }
                                else if (ReportName!=null && ReportName.Equals("Revised Estimates"))
                                {
                                    //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo)) select a.ACAndBWPropRECurrFin).Sum();
                                    SumGroupReport = (Double)(from a in Model.Detailss
                                                              join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                              where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                              select a.ACAndBWPropRECurrFin).Sum();
                                }
                                /*else if (ReportName.Equals("Budget Estimates "+@SelectedAcademicYear))
                                {
                                    //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo)) select a.ACAndBWPropRENxtFin).Sum();
                                    SumGroupReport = (Double)(from a in Model.Detailss
                                                              join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                              where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                              select a.BudEstCurrFin).Sum();

                                }*/
                                else if (ReportName!=null && ReportName.Equals("Budget Estimates "+@NextAcademicYear))
                                {
                                    //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo)) select a.ACAndBWPropRENxtFin).Sum();
                                    SumGroupReport = (Double)(from a in Model.Detailss
                                                              join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                              where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                              select a.ACAndBWPropRENxtFin).Sum();
                                
                                }
                                <div id="@identi" class="tab-pane fade" role="tabpanel" aria-labelledby="@identi-tab" style="width: 1750px;">
                                    <br />
                                    @if (ReportName!=null && ReportName.Equals("Headwise Consolidation"))
                                    {
                                      <table id="@identi-outertable" class="table table-responsive table-hover">
                                            <thead>
                                                <tr class="text-center" style="color:chocolate;border-bottom:hidden;">
                                                    <th colspan="100">CENTRAL BOARD OF SECONDARY EDUCATION</th>
                                                </tr>
                                                <tr class="text-center" style="color:chocolate;border-bottom:hidden;">
                                                    <th colspan="100">Shiksha Kendra 2, Community Centre, Preet Vihar, Delhi - 110 092</th>
                                                </tr>
                                                <tr class="text-center" style="color:green;border-bottom:hidden;">
                                                    <th colspan="100">@Report</th>
                                                </tr>
                                                <tr class="text-center" style="color:red;border-bottom:hidden;">
                                                    <th colspan="100">*(FIGURES IN CRORES)</th>
                                                </tr>
                                                    <tr>
                                                        <th>HEAD NO.</th>
                                                        <th>
                                                            SUB HEAD NO.
                                                        </th>
                                                        <th>
                                                            SUB HEAD NAME
                                                        </th>
                                                        <th class="CurrentBudgetEstimates w-20">

                                                        </th>
                                                        <th class="PreviousActualBudget w-20">

                                                        </th>
                                                        <th class="PreviousHalfYearActualBudget w-20">

                                                        </th>
                                                        <th class="CurrentYearRevisedEstimates w-20">

                                                        </th>
                                                       
                                                        <th class="BudgetEstimatesNextYear w-20">

                                                        </th>
                                                    </tr>
                                                </thead>
                                                <tbody>

                                                    @foreach (var Subs in Model.SubGroupss.Where(d => d.GroupNo.Equals(@item.GroupNo)))
                                                    {
                                                    //var BudEstCurrFinSum = (from a in Model.Detailss 
                                                       //                     join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                       //                     where (b.DivisionType.Equals(SelectedDivisionTypeName) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) 
                                                       //                     select a.BudEstCurrFin).Sum();
                                                    var BudEstCurrFinSum = (from a in Model.Detailss 
                                                                            where (a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                            select a.BudEstCurrFin).Sum();
                                                    //var ActPrevFinSum = (from a in Model.Detailss 
                                                    //                     join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                    //                     where (b.DivisionType.Equals(SelectedDivisionTypeName) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) 
                                                    //                     select a.ActPrevFin).Sum();
                                                    var ActPrevFinSum = (from a in Model.Detailss
                                                                         where (a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                         select a.ActPrevFin).Sum();
                                                    //var ActCurrFinTill2ndQuartSum = (from a in Model.Detailss 
                                                    //                                 join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                    //                                 where (b.DivisionType.Equals(SelectedDivisionTypeName) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) 
                                                    //                                 select a.ActCurrFinTill2ndQuart).Sum();
                                                    var ActCurrFinTill2ndQuartSum = (from a in Model.Detailss 
                                                                                     where (a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                                     select a.ActCurrFinTill2ndQuart).Sum();
                                                    //var RevEstCurrFinSum = (from a in Model.Detailss 
                                                    //                        join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                    //                        where (b.DivisionType.Equals(SelectedDivisionTypeName) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) 
                                                    //                        select a.ACAndBWPropRECurrFin).Sum();
                                                    var RevEstCurrFinSum = (from a in Model.Detailss 
                                                                            where (a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                            select a.ACAndBWPropRECurrFin).Sum();
                                                    //var BudgEstNexFinSum = (from a in Model.Detailss 
                                                    //                        join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                    //                        where (b.DivisionType.Equals(SelectedDivisionTypeName) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) 
                                                    //                        select a.ACAndBWPropRENxtFin).Sum();
                                                    var BudgEstNexFinSum = (from a in Model.Detailss 
                                                                            where (a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                            select a.ACAndBWPropRENxtFin).Sum();

                                                        var name1 = String.Concat("BudEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                        var name2 = String.Concat("ActPrevFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                        var name3 = String.Concat("ActCurrFinTillsecondQuart", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                        var name4 = String.Concat("RevEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                        var name7 = String.Concat("BudgEstNexFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                        
                                                        var LedgerCount = (from a in Model.Ledgerss where a.SubGroupNo.Equals(@Subs.SubGroupNo) select a.LedgerNo).Count();
                                                        
                                                        <tr>
                                                            <td>
                                                               @Subs.SubGroupNo
                                                            </td>
                                                            <td>
                                                                
                                                            </td>
                                                            <td>
                                                                @Subs.subGroupName
                                                            </td>
                                                        <td>
                                                            @Html.Label("BudEstCurrFinHeadwiseConsolidation" ,BudEstCurrFinSum!=null ? Convert.ToDecimal(BudEstCurrFinSum).ToString("F") : "-")
                                                        </td>
                                                        <td>
                                                            @Html.Label("ActPrevFinHeadwiseConsolidation" ,ActPrevFinSum!=null ? Convert.ToDecimal(ActPrevFinSum).ToString("F") : "-")
                                                        </td>
                                                        <td>
                                                            @Html.Label("ActCurrFinTill2ndQuartHeadwiseConsolidation" ,ActCurrFinTill2ndQuartSum!=null ? Convert.ToDecimal(ActCurrFinTill2ndQuartSum).ToString("F") : "-")
                                                        </td>
                                                        <td>
                                                            @Html.Label("RevEstCurrFinHeadwiseConsolidation" ,RevEstCurrFinSum!=null ? Convert.ToDecimal(RevEstCurrFinSum).ToString("F") : "-")
                                                        </td>
                                                        <td>
                                                            @Html.Label("BudgEstNexFinHeadwiseConsolidation" ,BudgEstNexFinSum!=null ? Convert.ToDecimal(BudgEstNexFinSum).ToString("F") : "-")
                                                        </td>
                                                            
                                                        </tr>

                                                    @if (LedgerCount > 0)
                                                    {

                                                        @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                                                        {
                                                            var BudEstCurrFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.BudEstCurrFin).Sum();
                                                            var ActPrevFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ActPrevFin).Sum();
                                                            var ActCurrFinTill2ndQuartLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ActCurrFinTill2ndQuart).Sum();
                                                            var RevEstCurrFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ACAndBWPropRECurrFin).Sum();
                                                            var BudgEstNexFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ACAndBWPropRENxtFin).Sum();


                                                            <tr>
                                                                <td></td>
                                                                <td>
                                                                    @Ledgers.LedgerNo
                                                                </td>
                                                                <td>@Ledgers.LedgerName</td>
                                                                <td>
                                                                    @Html.Label("BudEstCurrFinLedgerHeadwiseConsolidation" ,BudEstCurrFinLedgerSum!=null ? Convert.ToDecimal(BudEstCurrFinLedgerSum).ToString("F") : "-")
                                                                </td>
                                                                <td>
                                                                    @Html.Label("ActPrevFinLedgerHeadwiseConsolidation" ,ActPrevFinLedgerSum!=null ? Convert.ToDecimal(ActPrevFinLedgerSum).ToString("F") : "-")
                                                                </td>
                                                                <td>
                                                                    @Html.Label("ActCurrFinTill2ndQuartLedgerHeadwiseConsolidation" ,ActCurrFinTill2ndQuartLedgerSum!=null ? Convert.ToDecimal(ActCurrFinTill2ndQuartLedgerSum).ToString("F") : "-")
                                                                </td>
                                                                <td>
                                                                    @Html.Label("RevEstCurrFinLedgerHeadwiseConsolidation" ,RevEstCurrFinLedgerSum!=null ? Convert.ToDecimal(RevEstCurrFinLedgerSum).ToString("F") : "-")
                                                                </td>
                                                                <td>
                                                                    @Html.Label("BudgEstNexFinLedgerHeadwiseConsolidation" ,BudgEstNexFinLedgerSum!=null ? Convert.ToDecimal(BudgEstNexFinLedgerSum).ToString("F") : "-")
                                                                </td>
                                                            </tr>
                                                        }

                                                    }
                                                        TableCount++;
                                                    }
                                                    <tr>
                                                        <td>
                                                        </td>
                                                        <td>
                                                            Total
                                                        </td>
                                                        <td>
                                                            Total
                                                        </td>

                                                        <td id="@Sumname1-Total">
                                                            @SumBudEstCurrFin.ToString("F")
                                                        </td>
                                                        <td id="@Sumname2-Total">
                                                            @SumActPrevFin.ToString("F")
                                                        </td>
                                                        <td id="@Sumname3-Total">
                                                            @SumActCurrFinTill2ndQuart.ToString("F")
                                                        </td>
                                                        <td id="@Sumname4-Total">
                                                            @SumRevEstCurrFin.ToString("F")
                                                        </td>
                                                        
                                                        <td id="@Sumname7-Total">
                                                            @SumBudgEstNexFin.ToString("F")
                                                        </td>
                                                    </tr>
                                                </tbody>
                                            </table>  
                                    }
                                    else
                                    {
                                        <table id="@identi-outertable" class="table table-responsive table-hover ">
                                            <thead>
                                                <tr class="text-center" style="color:chocolate;border-bottom:hidden;">
                                                    <th colspan="100">CENTRAL BOARD OF SECONDARY EDUCATION</th>
                                                </tr>
                                                <tr class="text-center" style="color:chocolate;border-bottom:hidden;">
                                                    <th colspan="100">Shiksha Kendra 2, Community Centre, Preet Vihar, Delhi - 110 092</th>
                                                </tr>
                                                <tr class="text-center" style="color:green;border-bottom:hidden;">
                                                    <th colspan="100">Consolidated @Report </th>
                                                </tr>
                                                <tr class="text-center" style="color:red;border-bottom:hidden;">
                                                    <th colspan="100">*(FIGURES IN CRORES)</th>
                                                </tr>
                                                <tr>
                                                    <th>HEAD NO.</th>
                                                    <th >
                                                        SUB HEAD NO.
                                                    </th>
                                                    <th >
                                                        HEAD NAME
                                                    </th>
                                                    <th >
                                                    @Report
                                                    </th>
                                                    @foreach (var Regions in Model.Divisionss.Where(d => d.DivisionType.Equals(SelectedDivisionTypeName)))
                                                    {
                                                    <th> @Html.Label("RegionDivisionNames-"+Regions.DivisionID,Regions.DivisionName)</th>
                                                    }
                                                </tr>
                                            </thead>
                                            <tbody>

                                                @foreach (var Subs in Model.SubGroupss.Where(d => d.GroupNo.Equals(@item.GroupNo)))
                                                {
                                                    var details = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a).FirstOrDefault();

                                                var SumSubGroupReport = 0.00;

                                                if (ReportName!=null && ReportName.Equals("Actual"))
                                                {
                                                    //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActPrevFin).Sum();
                                                    SumSubGroupReport = (Double)(from a in Model.Detailss
                                                                                 join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                                 where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                                 select a.ActPrevFin).Sum();

                                                }
                                                else if (ReportName!=null && ReportName.Equals("Actual Half Year"))
                                                {
                                                    //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActCurrFinTill2ndQuart).Sum();
                                                    SumSubGroupReport = (Double)(from a in Model.Detailss
                                                                                 join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                                 where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                                 select a.ActCurrFinTill2ndQuart).Sum();
                                                }
                                                else if (ReportName!=null && ReportName.Equals("Revised Estimates"))
                                                {
                                                    //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRECurrFin).Sum();
                                                    SumSubGroupReport = (Double)(from a in Model.Detailss
                                                                                 join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                                 where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                                 select a.ACAndBWPropRECurrFin).Sum();
                                                }
                                               /* else if (ReportName.Equals("Budget Estimates "+@SelectedAcademicYear))
                                                {
                                                    //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRENxtFin).Sum();
                                                    SumSubGroupReport = (Double)(from a in Model.Detailss
                                                                                 join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                                 where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                                 select a.BudEstCurrFin).Sum();
                                                }*/
                                                else if (ReportName!=null && ReportName.Equals("Budget Estimates "+@NextAcademicYear))
                                                {
                                                    //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRENxtFin).Sum();
                                                    SumSubGroupReport = (Double)(from a in Model.Detailss
                                                                                 join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                                 where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                                 select a.ACAndBWPropRENxtFin).Sum();
                                                }
                                                    
                                                 var LedgerCount = (from a in Model.Ledgerss where a.SubGroupNo.Equals(@Subs.SubGroupNo) select a.LedgerNo).Count();   
                                                    
                                                 <tr>
                                                        <td>
                                                            @Subs.SubGroupNo
                                                        </td>
                                                        <td>
                                                            
                                                        </td>
                                                        <td>
                                                            @Subs.subGroupName
                                                        </td>
                                                        <td>
                                                        @Html.Label("SumSubGroupReport"+@Subs.SubGroupNo,@SumSubGroupReport!=0.00 ? @SumSubGroupReport.ToString("F") : "-")
                                                        </td>
                                                    @foreach (var Regions in Model.Divisionss.Where(d => d.DivisionType.Equals(SelectedDivisionTypeName)))
                                                    {
                                                        var result = (from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a).FirstOrDefault();

                                                        if (ReportName!=null && ReportName.Equals("Actual"))
                                                        {

                                                            if (Subs.RequireInput)
                                                            {
                                                                var LedgersSum = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a.ActPrevFin).Sum();
                                                                <td align="right">
                                                                    @Html.Label("Actual" + Regions.DivisionName,@LedgersSum!= 0.00 ? Convert.ToDecimal(LedgersSum).ToString("F") : "-")
                                                                </td>
                                                            }
                                                            else
                                                            {
                                                                <td align="right">
                                                                    @Html.Label("Actual" + Regions.DivisionName,result!=null ? Convert.ToDecimal(result.ActPrevFin).ToString("F") : "-")
                                                                </td>
                                                            }
                                                        }
                                                        else if (ReportName!=null && ReportName.Equals("Actual Half Year"))
                                                        {
                                                            if (Subs.RequireInput)
                                                            {
                                                                var LedgersSum = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a.ActCurrFinTill2ndQuart).Sum();

                                                                <td align="right">
                                                                    @Html.Label("Actual Half Year" + Regions.DivisionName, LedgersSum!=0.00 ? Convert.ToDecimal(LedgersSum).ToString("F") : "-")
                                                                </td>
                                                            }
                                                            else
                                                            {
                                                                <td align="right">
                                                                    @Html.Label("Actual Half Year" + Regions.DivisionName, result!=null ? Convert.ToDecimal(result.ActCurrFinTill2ndQuart).ToString("F") : "-")
                                                                </td>
                                                            }
                                                        }
                                                        else if (ReportName!=null && ReportName.Equals("Revised Estimates"))
                                                        {
                                                            if (Subs.RequireInput)
                                                            {
                                                                var LedgersSum = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a.ACAndBWPropRECurrFin).Sum();

                                                                <td align="right">
                                                                    @Html.Label("Revised Estimates" + Regions.DivisionName, LedgersSum!=0.00 ? Convert.ToDecimal(LedgersSum).ToString("F") : "-")
                                                                </td>
                                                            }
                                                            else
                                                            {
                                                                <td align="right">
                                                                    @Html.Label("Revised Estimates" + Regions.DivisionName, result!=null ? Convert.ToDecimal(result.ACAndBWPropRECurrFin).ToString("F") : "-")
                                                                </td>
                                                            }
                                                        }
                                                        else if (ReportName!=null && ReportName.Equals("Budget Estimates "+@NextAcademicYear))
                                                        {
                                                            if (Subs.RequireInput)
                                                            {
                                                                var LedgersSum = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a.ACAndBWPropRENxtFin).Sum();

                                                                <td align="right">
                                                                    @Html.Label("Budget Estimates " +@NextAcademicYear + Regions.DivisionName, LedgersSum!=0.00 ? Convert.ToDecimal(LedgersSum).ToString("F") : "-")
                                                                </td>
                                                            }
                                                            else
                                                            {
                                                                <td align="right">
                                                                    @Html.Label("Budget Estimates "+@NextAcademicYear+ Regions.DivisionName, result!=null ? Convert.ToDecimal(result.ACAndBWPropRENxtFin).ToString("F") : "-")
                                                                </td>
                                                            }
                                                        }
                                                       /* else if (ReportName.Equals("Budget Estimates "+@SelectedAcademicYear))
                                                        {
                                                            if (Subs.RequireInput)
                                                            {
                                                                var LedgersSum = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a.BudEstCurrFin).Sum();

                                                                <td align="right" class="w-20">
                                                                    @Html.Label("Budget Estimates " +@SelectedAcademicYear + Regions.DivisionName, LedgersSum!=0.00 ? Convert.ToDecimal(LedgersSum).ToString("F") : "-")
                                                                </td>
                                                            }
                                                            else
                                                            {
                                                                <td align="right" class="w-20">
                                                                    @Html.Label("Budget Estimates "+@SelectedAcademicYear+ Regions.DivisionName, result!=null ? Convert.ToDecimal(result.BudEstCurrFin).ToString("F") : "-")
                                                                </td>
                                                            }
                                                        } */
                                                    }
                                                    </tr>

                                                    @if (LedgerCount > 0)
                                                    {
                                                         @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                                                                    {
                                                                        var BudEstCurrFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.BudEstCurrFin).Sum();
                                                                        var ActPrevFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ActPrevFin).Sum();
                                                                        var ActCurrFinTill2ndQuartLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ActCurrFinTill2ndQuart).Sum();
                                                                        var RevEstCurrFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ACAndBWPropRECurrFin).Sum();
                                                                        var BudgEstNexFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ACAndBWPropRENxtFin).Sum();


                                                                        <tr>
                                                                            <td></td>
                                                                            <td>
                                                                                @Ledgers.LedgerNo
                                                                            </td>
                                                                            <td>@Ledgers.LedgerName</td>
                                                                            <td>
                                                                                @Html.Label("SumSubGroupReport"+@Ledgers.LedgerNo,@SumSubGroupReport!=0.00 ? @SumSubGroupReport.ToString("F") : "-")
                                                                            </td>
                                                                            @foreach (var Regions in Model.Divisionss.Where(d => d.DivisionType.Equals(SelectedDivisionTypeName)))
                                                                            {
                                                                                var result = (from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.LedgerNumber.Equals(@Ledgers.LedgerNo))) select a).FirstOrDefault();

                                                                                if (ReportName != null && ReportName.Equals("Actual"))
                                                                                {
                                                                                    <td align="right">
                                                                                        @Html.Label("Actual" + Regions.DivisionName,result!=null ? Convert.ToDecimal(result.ActPrevFin).ToString("F") : "-")
                                                                                    </td>
                                                                                }
                                                                                else if (ReportName != null && ReportName.Equals("Actual Half Year"))
                                                                                {

                                                                                    <td align="right">
                                                                                        @Html.Label("Actual Half Year" + Regions.DivisionName, result!=null ? Convert.ToDecimal(result.ActCurrFinTill2ndQuart).ToString("F") : "-")
                                                                                    </td>
                                                                                }
                                                                                else if (ReportName != null && ReportName.Equals("Revised Estimates"))
                                                                                {

                                                                                    <td align="right">
                                                                                        @Html.Label("Revised Estimates" + Regions.DivisionName, result!=null ? Convert.ToDecimal(result.ACAndBWPropRECurrFin).ToString("F") : "-")
                                                                                    </td>
                                                                                }
                                                                                else if (ReportName != null && ReportName.Equals("Budget Estimates " + @NextAcademicYear))
                                                                                {

                                                                                    <td align="right">
                                                                                        @Html.Label("Budget Estimates"+@NextAcademicYear+ Regions.DivisionName, result!=null ? Convert.ToDecimal(result.ACAndBWPropRENxtFin).ToString("F") : "-")
                                                                                    </td>
                                                                                }

                                                                            }
                                                                        </tr>
                                                                    }
                                                    }
                                                    TableCount++;
                                                }
                                            <tr>
                                                <td>
                                                </td>
                                                <td>
                                                    Total
                                                </td>
                                                <td>
                                                    Total
                                                </td>

                                                <td>
                                                    @Html.Label("SumGroupReport"+@item.GroupNo,@SumGroupReport!=0.00 ? @SumGroupReport.ToString("F") : "-")
                                                </td>
                                                @foreach (var Regions in Model.Divisionss.Where(d => d.DivisionType.Equals(SelectedDivisionTypeName)))
                                                {
                                                    if (ReportName!=null && ReportName.Equals("Actual"))
                                                    {
                                                        var result = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (item.GroupNo.Equals(a.GroupNumber))) select a.ActPrevFin).Sum();
                                                        <td align="right">
                                                            @Html.Label("ActualSum" + Regions.DivisionName,result!=0.00 ? Convert.ToDecimal(result).ToString("F") : "-")
                                                        </td>
                                                    }
                                                    else if (ReportName!=null && ReportName.Equals("Actual Half Year"))
                                                    {
                                                        var result = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (item.GroupNo.Equals(a.GroupNumber))) select a.ActCurrFinTill2ndQuart).Sum();
                                                        <td align="right">
                                                            @Html.Label("Actual Half Year Sum" + Regions.DivisionName, result!=0.00 ? Convert.ToDecimal(result).ToString("F") : "-")
                                                        </td>
                                                    }
                                                    else if (ReportName!=null && ReportName.Equals("Revised Estimates"))
                                                    {
                                                        var result = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (item.GroupNo.Equals(a.GroupNumber))) select a.ACAndBWPropRECurrFin).Sum();
                                                        <td align="right">
                                                            @Html.Label("Revised Estimates Sum" + Regions.DivisionName, result!=0.00 ? Convert.ToDecimal(result).ToString("F") : "-")

                                                        </td>
                                                    }
                                                    else if (ReportName!=null && ReportName.Equals("Budget Estimates "+@NextAcademicYear))
                                                    {
                                                        var result = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (item.GroupNo.Equals(a.GroupNumber))) select a.ACAndBWPropRENxtFin).Sum();
                                                        <td align="right">
                                                            @Html.Label("Budget Estimates Sum "+@NextAcademicYear+ Regions.DivisionName, result!=0.00 ? Convert.ToDecimal(result).ToString("F") : "-")
                                                        </td>
                                                    }
                                                   /* else if (ReportName.Equals("Budget Estimates "+@SelectedAcademicYear))
                                                    {
                                                        var result = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (item.GroupNo.Equals(a.GroupNumber))) select a.BudEstCurrFin).Sum();
                                                        <td align="right" class="w-20">
                                                            @Html.Label("Budget Estimates Sum "+@SelectedAcademicYear+ Regions.DivisionName, result!=0.00 ? Convert.ToDecimal(result).ToString("F") : "-")
                                                        </td>
                                                    } */
                                                }
                                            </tr>
                                            </tbody>
                                        </table>
                                    }
                                        @*Html.Hidden("SectionName",Model.SectionName, new{@id = @identi+"-SectionName" })
                                        @Html.Hidden("GroupName",Model.GroupName, new{@id = @identi+"-GroupName" })
                                        @Html.Hidden("SelectedAcademicYear", Model.SelectedAcademicYear,  new{@id = @identi+"-SelectedAcademicYear" })
                                        @Html.Hidden("SelectedDivisionName",Model.SelectedDivisionName,  new{@id = @identi+"-SelectedDivisionName" })*@
                                        
                                </div>

                            }
                            CounterBody++;
                        }

                    </div>
                </div>
            }

            else
            {
                <div id="@inneridenti" class="tab-pane fade" role="tabpanel" aria-labelledby="@inneridenti-tab" aria-selected="false">

                    <ul id="innertab2" class="nav nav-tabs nav-pills nav-justified" role="tablist">
                        @foreach (var item in Model.Groupss.Where(d => d.SectionNo == @inner.SectionNo))
                        {
                            var identi = String.Concat("Budget", Convert.ToInt32((Convert.ToDecimal(@item.GroupNo) * 10)).ToString());

                            if (CountHeader == 0)
                            {
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link active" id="@identi-nav" data-bs-toggle="tab" data-bs-target="#@identi" type="button" role="tab" aria-controls="@identi" aria-selected="true">@item.GroupName</button>
                                </li>
                            }
                            else
                            {
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link" id="@identi-nav" data-bs-toggle="tab" data-bs-target="#@identi" type="button" role="tab" aria-controls="@identi" aria-selected="false">@item.GroupName</button>
                                </li>
                            }

                            CountHeader++;
                        }
                    </ul>

                    <div id="innertabcontent1" class="tab-content">
                        <br />
                        @foreach (var item in Model.Groupss.Where(d => d.SectionNo == @inner.SectionNo))
                        {
                            int TableCount = 0;
                            
                            var identi = String.Concat("Budget", Convert.ToInt32((Convert.ToDecimal(@item.GroupNo) * 10)).ToString());
                            var SelectedDivisionTypeName = (from a in Model.DivisionTypeNames where a.Selected == true select a.Text).FirstOrDefault();

                            var Sumname1 = String.Concat("BudEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname2 = String.Concat("ActPrevFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname3 = String.Concat("ActCurrFinTillsecondQuart", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname4 = String.Concat("RevEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname7 = String.Concat("BudgEstNexFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            //var SelectReportName = (from a in Model.ReportNames where a.Selected == true select a.Text).FirstOrDefault();

                            @if (ReportName!=null && ReportName.Equals("Headwise Consolidation"))
                            {
                                SumBudEstCurrFin = (double)(from a in Model.Detailss 
                                                     where (a.GroupNumber.Equals(@item.GroupNo)) select a.BudEstCurrFin).Sum();
                                SumActPrevFin = (double)(from a in Model.Detailss 
                                                 where (a.GroupNumber.Equals(@item.GroupNo)) select a.ActPrevFin).Sum();
                                SumActCurrFinTill2ndQuart = (double)(from a in Model.Detailss 
                                                              where (a.GroupNumber.Equals(@item.GroupNo)) 
                                                              select a.ActCurrFinTill2ndQuart).Sum();
                                SumRevEstCurrFin = (double)(from a in Model.Detailss 
                                                    where (a.GroupNumber.Equals(@item.GroupNo))
                                                    select a.ACAndBWPropRECurrFin).Sum();
                                SumBudgEstNexFin = (double)(from a in Model.Detailss 
                                                     where (a.GroupNumber.Equals(@item.GroupNo)) 
                                                     select a.ACAndBWPropRENxtFin).Sum();   
                            }
                            else
                            {
                             SumBudEstCurrFin = (double)(from a in Model.Detailss
                                                    join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                    where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                    select a.BudEstCurrFin).Sum();
                             SumActPrevFin = (double)(from a in Model.Detailss
                                                 join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                 where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                 select a.ActPrevFin).Sum();
                             SumActCurrFinTill2ndQuart = (double)(from a in Model.Detailss
                                                             join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                             where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                             select a.ActCurrFinTill2ndQuart).Sum();
                             SumRevEstCurrFin = (double)(from a in Model.Detailss
                                                    join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                    where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                    select a.ACAndBWPropRECurrFin).Sum();
                             SumBudgEstNexFin = (double)(from a in Model.Detailss
                                                    join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                    where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                    select a.ACAndBWPropRENxtFin).Sum();
                            }

                            if (CounterBody == 0)
                            {
                                
                                //var ReportName = (from a in Model.ReportNames where a.Selected == true select a.Text).FirstOrDefault();
                                var SelectedAcademicYear = (from a in Model.AcademicYears where a.Selected == true select a.Text).FirstOrDefault();
                                @if (SelectedAcademicYear is not null)
                                {
                                    SplitAcademicYear = SelectedAcademicYear.Split("-");
                                
                                    NextAcademicYear = SplitAcademicYear[1]+"-"+(Convert.ToInt32(SplitAcademicYear[1])+Convert.ToInt32(1));
                                }
                                var Report = ReportName!=null && @ReportName.Contains("Budget") ? @ReportName : @ReportName + " " + @SelectedAcademicYear;

                                var SumGroupReport = 0.00;

                                if (ReportName!=null && ReportName.Equals("Actual"))
                                {
                                    //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo) ) select a.ActPrevFin).Sum();
                                    SumGroupReport = (Double)(from a in Model.Detailss
                                                              join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                              where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                              select a.ActPrevFin).Sum();
                                }
                                else if (ReportName!=null && ReportName.Equals("Actual Half Year"))
                                {
                                    //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo)) select a.ActCurrFinTill2ndQuart).Sum();
                                    SumGroupReport = (Double)(from a in Model.Detailss
                                                              join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                              where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                              select a.ActCurrFinTill2ndQuart).Sum();

                                }
                                else if (ReportName!=null && ReportName.Equals("Revised Estimates"))
                                {
                                    //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo)) select a.ACAndBWPropRECurrFin).Sum();
                                    SumGroupReport = (Double)(from a in Model.Detailss
                                                              join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                              where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                              select a.ACAndBWPropRECurrFin).Sum();
                                }
                                /*else if (ReportName.Equals("Budget Estimates "+@SelectedAcademicYear))
                                {
                                    //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo)) select a.ACAndBWPropRENxtFin).Sum();
                                    SumGroupReport = (Double)(from a in Model.Detailss
                                                              join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                              where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                              select a.BudEstCurrFin).Sum();

                                } */
                                else if (ReportName!=null && ReportName.Equals("Budget Estimates "+@NextAcademicYear))
                                {
                                    //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo)) select a.ACAndBWPropRENxtFin).Sum();
                                    SumGroupReport = (Double)(from a in Model.Detailss
                                                              join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                              where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                              select a.ACAndBWPropRENxtFin).Sum();
                                
                                }
                                <div id="@identi" class="tab-pane fade show active" role="tabpanel" aria-labelledby="@identi-tab" style="width: 1750px;">
                                    @if (ReportName!=null && ReportName.Equals("Headwise Consolidation"))
                                    {
                                        <table id="@identi-outertable" class="table table-responsive table-hover">
                                            
                                            <thead>
                                                <tr class="text-center" style="color:chocolate;border-bottom:hidden;"><th colspan="100">CENTRAL BOARD OF SECONDARY EDUCATION</th></tr>
                                                <tr class="text-center" style="color:chocolate;border-bottom:hidden;">
                                                    <th colspan="100" >Shiksha Kendra 2, Community Centre, Preet Vihar, Delhi - 110 092</th>
                                                </tr>
                                                <tr class="text-center" style="color:green;border-bottom:hidden;">
                                                    <th colspan="100">@Report</th>
                                                </tr>
                                                <tr class="text-center" style="color:red;border-bottom:hidden;">
                                                    <th colspan="100">*(FIGURES IN CRORES)</th>
                                                </tr>
                                            <tr>
                                                    <th>HEAD NO.</th>
                                                    <th>
                                                       SUB HEAD NO. 
                                                    </th>
                                                    <th>
                                                        SUB HEAD NAME
                                                    </th>
                                                    <th class="CurrentBudgetEstimates w-20">

                                                    </th>
                                                    <th class="PreviousActualBudget w-20">

                                                    </th>
                                                    <th class="PreviousHalfYearActualBudget w-20">

                                                    </th>
                                                    <th class="CurrentYearRevisedEstimates w-20">

                                                    </th>

                                                    <th class="BudgetEstimatesNextYear w-20">

                                                    </th>
                                                </tr>
                                            </thead>
                                            <tbody>

                                                @foreach (var Subs in Model.SubGroupss.Where(d => d.GroupNo.Equals(@item.GroupNo)))
                                                {
                                                    //var BudEstCurrFinSum = (from a in Model.Detailss
                                                    //                     join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                    //                     where (b.DivisionType.Equals(SelectedDivisionTypeName) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo)))
                                                    //                     select a.BudEstCurrFin).Sum();
                                                    var BudEstCurrFinSum = (from a in Model.Detailss
                                                                            where (a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                            select a.BudEstCurrFin).Sum();
                                                    //var ActPrevFinSum = (from a in Model.Detailss
                                                    //                     join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                    //                     where (b.DivisionType.Equals(SelectedDivisionTypeName) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo)))
                                                    //                     select a.ActPrevFin).Sum();
                                                    var ActPrevFinSum = (from a in Model.Detailss
                                                                         where (a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                         select a.ActPrevFin).Sum();
                                                    //var ActCurrFinTill2ndQuartSum = (from a in Model.Detailss
                                                    //                                 join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                    //                                 where (b.DivisionType.Equals(SelectedDivisionTypeName) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo)))
                                                    //                                 select a.ActCurrFinTill2ndQuart).Sum();
                                                    var ActCurrFinTill2ndQuartSum = (from a in Model.Detailss
                                                                                     where (a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                                     select a.ActCurrFinTill2ndQuart).Sum();
                                                    //var RevEstCurrFinSum = (from a in Model.Detailss
                                                    //                        join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                    //                        where (b.DivisionType.Equals(SelectedDivisionTypeName) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo)))
                                                    //                        select a.ACAndBWPropRECurrFin).Sum();
                                                    var RevEstCurrFinSum = (from a in Model.Detailss
                                                                            where (a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                            select a.ACAndBWPropRECurrFin).Sum();
                                                    //var BudgEstNexFinSum = (from a in Model.Detailss
                                                    //                        join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                    //                        where (b.DivisionType.Equals(SelectedDivisionTypeName) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo)))
                                                    //                        select a.ACAndBWPropRENxtFin).Sum();
                                                    var BudgEstNexFinSum = (from a in Model.Detailss
                                                                            where (a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                            select a.ACAndBWPropRENxtFin).Sum();

                                                    var name1 = String.Concat("BudEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name2 = String.Concat("ActPrevFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name3 = String.Concat("ActCurrFinTillsecondQuart", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name4 = String.Concat("RevEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name7 = String.Concat("BudgEstNexFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);

                                                    var LedgerCount = (from a in Model.Ledgerss where a.SubGroupNo.Equals(@Subs.SubGroupNo) select a.LedgerNo).Count();
                                                    
                                                    <tr>
                                                        <td>
                                                            @Subs.SubGroupNo
                                                        </td>
                                                        <td>
                                                            
                                                        </td>
                                                        <td>
                                                            @Subs.subGroupName
                                                        </td>
                                                        <td>
                                                            @Html.Label("BudEstCurrFinHeadwiseConsolidation" ,BudEstCurrFinSum!=null ? Convert.ToDecimal(BudEstCurrFinSum).ToString("F") : "-")
                                                        </td>
                                                        <td>
                                                            @Html.Label("ActPrevFinHeadwiseConsolidation" ,ActPrevFinSum!=null ? Convert.ToDecimal(ActPrevFinSum).ToString("F") : "-")
                                                        </td>
                                                        <td>
                                                            @Html.Label("ActCurrFinTill2ndQuartHeadwiseConsolidation" ,ActCurrFinTill2ndQuartSum!=null ? Convert.ToDecimal(ActCurrFinTill2ndQuartSum).ToString("F") : "-")
                                                        </td>
                                                        <td>
                                                            @Html.Label("RevEstCurrFinHeadwiseConsolidation" ,RevEstCurrFinSum!=null ? Convert.ToDecimal(RevEstCurrFinSum).ToString("F") : "-")
                                                        </td>
                                                        <td>
                                                            @Html.Label("BudgEstNexFinHeadwiseConsolidation" ,BudgEstNexFinSum!=null ? Convert.ToDecimal(BudgEstNexFinSum).ToString("F") : "-")
                                                        </td>

                                                    </tr>

                                                        @if (LedgerCount > 0)
                                                        {
                                                             @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                                                                        {
                                                                            var BudEstCurrFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.BudEstCurrFin).Sum();
                                                                            var ActPrevFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ActPrevFin).Sum();
                                                                            var ActCurrFinTill2ndQuartLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ActCurrFinTill2ndQuart).Sum();
                                                                            var RevEstCurrFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ACAndBWPropRECurrFin).Sum();
                                                                            var BudgEstNexFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ACAndBWPropRENxtFin).Sum();


                                                                            <tr>
                                                                                <td></td>
                                                                                <td>
                                                                                    @Ledgers.LedgerNo
                                                                                </td>
                                                                                <td>@Ledgers.LedgerName</td>
                                                                                <td>
                                                                                    @Html.Label("BudEstCurrFinLedgerHeadwiseConsolidation" ,BudEstCurrFinLedgerSum!=null ? Convert.ToDecimal(BudEstCurrFinLedgerSum).ToString("F") : "-")
                                                                                </td>
                                                                                <td>
                                                                                    @Html.Label("ActPrevFinLedgerHeadwiseConsolidation" ,ActPrevFinLedgerSum!=null ? Convert.ToDecimal(ActPrevFinLedgerSum).ToString("F") : "-")
                                                                                </td>
                                                                                <td>
                                                                                    @Html.Label("ActCurrFinTill2ndQuartLedgerHeadwiseConsolidation" ,ActCurrFinTill2ndQuartLedgerSum!=null ? Convert.ToDecimal(ActCurrFinTill2ndQuartLedgerSum).ToString("F") : "-")
                                                                                </td>
                                                                                <td>
                                                                                    @Html.Label("RevEstCurrFinLedgerHeadwiseConsolidation" ,RevEstCurrFinLedgerSum!=null ? Convert.ToDecimal(RevEstCurrFinLedgerSum).ToString("F") : "-")
                                                                                </td>
                                                                                <td>
                                                                                    @Html.Label("BudgEstNexFinLedgerHeadwiseConsolidation" ,BudgEstNexFinLedgerSum!=null ? Convert.ToDecimal(BudgEstNexFinLedgerSum).ToString("F") : "-")
                                                                                </td>
                                                                            </tr>
                                                                        }
                                                        }
                                                    
                                                    TableCount++;
                                                }
                                                <tr>
                                                    <td>
                                                    </td>
                                                    <td>
                                                        Total
                                                    </td>
                                                    <td>
                                                        Total
                                                    </td>

                                                    <td id="@Sumname1-Total">
                                                        @SumBudEstCurrFin.ToString("F")
                                                    </td>
                                                    <td id="@Sumname2-Total">
                                                        @SumActPrevFin.ToString("F")
                                                    </td>
                                                    <td id="@Sumname3-Total">
                                                        @SumActCurrFinTill2ndQuart.ToString("F")
                                                    </td>
                                                    <td id="@Sumname4-Total">
                                                        @SumRevEstCurrFin.ToString("F")
                                                    </td>

                                                    <td id="@Sumname7-Total">
                                                        @SumBudgEstNexFin.ToString("F")
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    }
                                    else
                                    {
                                        <table id="@identi-outertable" class="table table-responsive table-hover">
                                            
                                            <thead>
                                                <tr class="text-center" style="color:chocolate;border-bottom:hidden;"><th colspan="100">CENTRAL BOARD OF SECONDARY EDUCATION</th></tr>
                                                <tr class="text-center" style="color:chocolate;border-bottom:hidden;">
                                                    <th colspan="100">Shiksha Kendra 2, Community Centre, Preet Vihar, Delhi - 110 092</th>
                                                </tr>
                                                <tr class="text-center" style="color:green;border-bottom:hidden;">
                                                    <th colspan="100">Consolidated @Report</th>
                                                </tr>
                                                <tr class="text-center" style="color:red">
                                                    <th colspan="100">*(FIGURES IN CRORES)</th>
                                                </tr>
                                                <tr>
                                                    <th>HEAD NO.</th>
                                                    <th >
                                                        SUB HEAD NO.
                                                    </th>
                                                    <th >
                                                        HEAD NAME
                                                    </th>
                                                <th >
                                                    @Report
                                                    </th>
                                                    @foreach (var Regions in Model.Divisionss.Where(d => d.DivisionType.Equals(SelectedDivisionTypeName)))
                                                    {
                                                        <th> @Html.Label("RegionDivisionNames-"+Regions.DivisionID,Regions.DivisionName)</th>
                                                    }
                                                </tr>
                                            </thead>
                                            <tbody>

                                                @foreach (var Subs in Model.SubGroupss.Where(d => d.GroupNo.Equals(@item.GroupNo)))
                                                {
                                                    var details = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a).FirstOrDefault();

                                                var SumSubGroupReport = 0.00;

                                                if (ReportName!=null && ReportName.Equals("Actual"))
                                                {
                                                    //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActPrevFin).Sum();
                                                    SumSubGroupReport = (Double)(from a in Model.Detailss
                                                                                 join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                                 where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                                 select a.ActPrevFin).Sum();

                                                }
                                                else if (ReportName!=null && ReportName.Equals("Actual Half Year"))
                                                {
                                                    //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActCurrFinTill2ndQuart).Sum();
                                                    SumSubGroupReport = (Double)(from a in Model.Detailss
                                                                                 join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                                 where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                                 select a.ActCurrFinTill2ndQuart).Sum();
                                                }
                                                else if (ReportName!=null && ReportName.Equals("Revised Estimates"))
                                                {
                                                    //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRECurrFin).Sum();
                                                    SumSubGroupReport = (Double)(from a in Model.Detailss
                                                                                 join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                                 where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                                 select a.ACAndBWPropRECurrFin).Sum();
                                                }
                                                /*else if (ReportName.Equals("Budget Estimates "+@SelectedAcademicYear))
                                                {
                                                    //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRENxtFin).Sum();
                                                    SumSubGroupReport = (Double)(from a in Model.Detailss
                                                                                 join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                                 where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                                 select a.BudEstCurrFin).Sum();
                                                }*/
                                                else if (ReportName!=null && ReportName.Equals("Budget Estimates "+@NextAcademicYear))
                                                {
                                                    //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRENxtFin).Sum();
                                                    SumSubGroupReport = (Double)(from a in Model.Detailss
                                                                                 join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                                 where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                                 select a.ACAndBWPropRENxtFin).Sum();
                                                }
                                                    var LedgerCount = (from a in Model.Ledgerss where a.SubGroupNo.Equals(@Subs.SubGroupNo) select a.LedgerNo).Count();
                                                    <tr>
                                                        <td>
                                                            @Subs.SubGroupNo
                                                        </td>
                                                        <td>
                                                           
                                                        </td>
                                                        <td>
                                                            @Subs.subGroupName
                                                        </td>
                                                        <td>
                                                        @Html.Label("SumSubGroupReport"+@Subs.SubGroupNo,@SumSubGroupReport!=0.00 ? @SumSubGroupReport.ToString("F") : "-")
                                                        </td>
                                                    @foreach (var Regions in Model.Divisionss.Where(d => d.DivisionType.Equals(SelectedDivisionTypeName)))
                                                    {
                                                        var result = (from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a).FirstOrDefault();

                                                        if (ReportName!=null &&  ReportName.Equals("Actual"))
                                                        {

                                                            if (Subs.RequireInput)
                                                            {
                                                                var LedgersSum = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a.ActPrevFin).Sum();
                                                                <td align="right">
                                                                    @Html.Label("Actual" + Regions.DivisionName,@LedgersSum!= 0.00 ? Convert.ToDecimal(LedgersSum).ToString("F") : "-")
                                                                </td>
                                                            }
                                                            else
                                                            {
                                                                <td align="right">
                                                                    @Html.Label("Actual" + Regions.DivisionName,result!=null ? Convert.ToDecimal(result.ActPrevFin).ToString("F") : "-")
                                                                </td>
                                                            }
                                                        }
                                                        else if (ReportName!=null && ReportName.Equals("Actual Half Year"))
                                                        {
                                                            if (Subs.RequireInput)
                                                            {
                                                                var LedgersSum = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a.ActCurrFinTill2ndQuart).Sum();

                                                                <td align="right">
                                                                    @Html.Label("Actual Half Year" + Regions.DivisionName, LedgersSum!=0.00 ? Convert.ToDecimal(LedgersSum).ToString("F") : "-")
                                                                </td>
                                                            }
                                                            else
                                                            {
                                                                <td align="right">
                                                                    @Html.Label("Actual Half Year" + Regions.DivisionName, result!=null ? Convert.ToDecimal(result.ActCurrFinTill2ndQuart).ToString("F") : "-")
                                                                </td>
                                                            }
                                                        }
                                                        else if (ReportName!=null && ReportName.Equals("Revised Estimates"))
                                                        {
                                                            if (Subs.RequireInput)
                                                            {
                                                                var LedgersSum = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a.ACAndBWPropRECurrFin).Sum();

                                                                <td align="right">
                                                                    @Html.Label("Revised Estimates" + Regions.DivisionName, LedgersSum!=0.00 ? Convert.ToDecimal(LedgersSum).ToString("F") : "-")
                                                                </td>
                                                            }
                                                            else
                                                            {
                                                                <td align="right">
                                                                    @Html.Label("Revised Estimates" + Regions.DivisionName, result!=null ? Convert.ToDecimal(result.ACAndBWPropRECurrFin).ToString("F") : "-")
                                                                </td>
                                                            }
                                                        }
                                                        else if (ReportName!=null && ReportName.Equals("Budget Estimates "+@NextAcademicYear))
                                                        {
                                                            if (Subs.RequireInput)
                                                            {
                                                                var LedgersSum = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a.ACAndBWPropRENxtFin).Sum();

                                                                <td align="right">
                                                                    @Html.Label("Budget Estimates "+@NextAcademicYear + Regions.DivisionName, LedgersSum!=0.00 ? Convert.ToDecimal(LedgersSum).ToString("F") : "-")
                                                                </td>
                                                            }
                                                            else
                                                            {
                                                                <td align="right">
                                                                    @Html.Label("Budget Estimates "+@NextAcademicYear+ Regions.DivisionName, result!=null ? Convert.ToDecimal(result.ACAndBWPropRENxtFin).ToString("F") : "-")
                                                                </td>
                                                            }
                                                        }
                                                       
                                                    }
                                                    </tr>

                                                    @if (LedgerCount > 0)
                                                    {
                                                        @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                                                        {
                                                            var BudEstCurrFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.BudEstCurrFin).Sum();
                                                            var ActPrevFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ActPrevFin).Sum();
                                                            var ActCurrFinTill2ndQuartLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ActCurrFinTill2ndQuart).Sum();
                                                            var RevEstCurrFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ACAndBWPropRECurrFin).Sum();
                                                            var BudgEstNexFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ACAndBWPropRENxtFin).Sum();


                                                            <tr>
                                                                <td></td>
                                                                <td>
                                                                    @Ledgers.LedgerNo
                                                                </td>
                                                                <td>@Ledgers.LedgerName</td>
                                                                <td>
                                                                    @Html.Label("SumSubGroupReport"+@Ledgers.LedgerNo,@SumSubGroupReport!=0.00 ? @SumSubGroupReport.ToString("F") : "-")
                                                                </td>
                                                                @foreach (var Regions in Model.Divisionss.Where(d => d.DivisionType.Equals(SelectedDivisionTypeName)))
                                                                {
                                                                    var result = (from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.LedgerNumber.Equals(@Ledgers.LedgerNo))) select a).FirstOrDefault();

                                                                    if (ReportName != null && ReportName.Equals("Actual"))
                                                                    {
                                                                        <td align="right">
                                                                            @Html.Label("Actual" + Regions.DivisionName,result!=null ? Convert.ToDecimal(result.ActPrevFin).ToString("F") : "-")
                                                                        </td>
                                                                    }
                                                                    else if (ReportName != null && ReportName.Equals("Actual Half Year"))
                                                                    {

                                                                        <td align="right">
                                                                            @Html.Label("Actual Half Year" + Regions.DivisionName, result!=null ? Convert.ToDecimal(result.ActCurrFinTill2ndQuart).ToString("F") : "-")
                                                                        </td>
                                                                    }
                                                                    else if (ReportName != null && ReportName.Equals("Revised Estimates"))
                                                                    {

                                                                        <td align="right">
                                                                            @Html.Label("Revised Estimates" + Regions.DivisionName, result!=null ? Convert.ToDecimal(result.ACAndBWPropRECurrFin).ToString("F") : "-")
                                                                        </td>
                                                                    }
                                                                    else if (ReportName != null && ReportName.Equals("Budget Estimates " + @NextAcademicYear))
                                                                    {

                                                                        <td align="right">
                                                                            @Html.Label("Budget Estimates"+@NextAcademicYear+ Regions.DivisionName, result!=null ? Convert.ToDecimal(result.ACAndBWPropRENxtFin).ToString("F") : "-")
                                                                        </td>
                                                                    }

                                                                }
                                                            </tr>
                                                        }
                                                    }
                                                    TableCount++;
                                                }
                                            <tr>
                                                <td>
                                                </td>
                                                <td>
                                                    Total
                                                </td>
                                                <td>
                                                    Total
                                                </td>

                                                <td>
                                                    @Html.Label("SumGroupReport"+item.GroupNo,@SumGroupReport!=0.00? @SumGroupReport.ToString("F") : "-")
                                                </td>
                                                @foreach (var Regions in Model.Divisionss.Where(d => d.DivisionType.Equals(SelectedDivisionTypeName)))
                                                {
                                                    if (ReportName!=null && ReportName.Equals("Actual"))
                                                    {
                                                        var result = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (item.GroupNo.Equals(a.GroupNumber))) select a.ActPrevFin).Sum();
                                                        <td align="right">
                                                            @Html.Label("ActualSum" + Regions.DivisionName,result!=0.00 ? Convert.ToDecimal(result).ToString("F") : "-")
                                                        </td>
                                                    }
                                                    else if (ReportName!=null && ReportName.Equals("Actual Half Year"))
                                                    {
                                                        var result = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (item.GroupNo.Equals(a.GroupNumber))) select a.ActCurrFinTill2ndQuart).Sum();
                                                        <td align="right">
                                                            @Html.Label("Actual Half Year Sum" + Regions.DivisionName, result!=0.00 ? Convert.ToDecimal(result).ToString("F") : "-")
                                                        </td>
                                                    }
                                                    else if (ReportName!=null && ReportName.Equals("Revised Estimates"))
                                                    {
                                                        var result = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (item.GroupNo.Equals(a.GroupNumber))) select a.ACAndBWPropRECurrFin).Sum();
                                                        <td align="right">
                                                            @Html.Label("Revised Estimates Sum" + Regions.DivisionName, result!=0.00 ? Convert.ToDecimal(result).ToString("F") : "-")

                                                        </td>
                                                    }
                                                    else if (ReportName!=null && ReportName.Equals("Budget Estimates "+@NextAcademicYear))
                                                    {
                                                        var result = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (item.GroupNo.Equals(a.GroupNumber))) select a.ACAndBWPropRENxtFin).Sum();
                                                        <td align="right">
                                                            @Html.Label("Budget Estimates Sum "+@NextAcademicYear+ Regions.DivisionName, result!=0.00 ? Convert.ToDecimal(result).ToString("F") : "-")
                                                        </td>
                                                    }
                                                    /*else if (ReportName.Equals("Budget Estimates "+@SelectedAcademicYear))
                                                    {
                                                        var result = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (item.GroupNo.Equals(a.GroupNumber))) select a.BudEstCurrFin).Sum();
                                                        <td align="right" class="w-20">
                                                            @Html.Label("Budget Estimates Sum "+@SelectedAcademicYear+ Regions.DivisionName, result!=0.00 ? Convert.ToDecimal(result).ToString("F") : "-")
                                                        </td>
                                                    }*/
                                                }
                                            </tr>
                                            </tbody>
                                        </table>
                                    }
                                </div>

                            }
                            else
                            {
                                //var SelectedDivisionTypeName = (from a in Model.DivisionTypeNames where a.Selected == true select a.Text).FirstOrDefault();
                                //var ReportName = (from a in Model.ReportNames where a.Selected == true select a.Text).FirstOrDefault();
                                var SelectedAcademicYear = (from a in Model.AcademicYears where a.Selected == true select a.Text).FirstOrDefault();
                                @if(SelectedAcademicYear is not null)
                                {
                                    SplitAcademicYear = SelectedAcademicYear.Split("-");
                                }
                                    NextAcademicYear = SplitAcademicYear[1]+"-"+(Convert.ToInt32(SplitAcademicYear[1])+Convert.ToInt32(1));
                                
                                var Report = ReportName != null && @ReportName.Contains("Budget") ? @ReportName : @ReportName + " " + @SelectedAcademicYear;

                                var SumGroupReport = 0.00;

                                if (ReportName!=null && ReportName.Equals("Actual"))
                                {
                                    //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo) ) select a.ActPrevFin).Sum();
                                    SumGroupReport = (Double)(from a in Model.Detailss
                                                              join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                              where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                              select a.ActPrevFin).Sum();
                                }
                                else if (ReportName!=null && ReportName.Equals("Actual Half Year"))
                                {
                                    //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo)) select a.ActCurrFinTill2ndQuart).Sum();
                                    SumGroupReport = (Double)(from a in Model.Detailss
                                                              join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                              where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                              select a.ActCurrFinTill2ndQuart).Sum();

                                }
                                else if (ReportName!=null && ReportName.Equals("Revised Estimates"))
                                {
                                    //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo)) select a.ACAndBWPropRECurrFin).Sum();
                                    SumGroupReport = (Double)(from a in Model.Detailss
                                                              join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                              where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                              select a.ACAndBWPropRECurrFin).Sum();
                                }
                               /* else if (ReportName.Equals("Budget Estimates "+@SelectedAcademicYear))
                                {
                                    //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo)) select a.ACAndBWPropRENxtFin).Sum();
                                    SumGroupReport = (Double)(from a in Model.Detailss
                                                              join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                              where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                              select a.BudEstCurrFin).Sum();

                                } */
                                else if (ReportName!=null && ReportName.Equals("Budget Estimates "+@NextAcademicYear))
                                {
                                    //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo)) select a.ACAndBWPropRENxtFin).Sum();
                                    SumGroupReport = (Double)(from a in Model.Detailss
                                                              join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                              where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                              select a.ACAndBWPropRENxtFin).Sum();
                                
                                }

                                <div id="@identi" class="tab-pane fade" role="tabpanel" aria-labelledby="@identi-tab" style="width: 1750px;">
                                    <br />
                                     @if (ReportName!=null && ReportName.Equals("Headwise Consolidation"))
                                    {
                                        <table id="@identi-outertable" class="table table-responsive table-hover">
                                            <thead>
                                                <tr class="text-center" style="color:chocolate;border-bottom:hidden;" ><th colspan="100">CENTRAL BOARD OF SECONDARY EDUCATION</th></tr>
                                                <tr class="text-center" style="color:chocolate;border-bottom:hidden;">
                                                    <th colspan="100">Shiksha Kendra 2, Community Centre, Preet Vihar, Delhi - 110 092</th>
                                                </tr>
                                                <tr class="text-center" style="color:green;border-bottom:hidden;">
                                                    <th colspan="100">@Report</th>
                                                </tr>
                                                <tr class="text-center" style="color:red;border-bottom:hidden;">
                                                    <th colspan="100">*(FIGURES IN CRORES)</th>
                                                </tr>
                                                <tr>
                                                    <th class="w-5">HEAD NO.</th>
                                                    <th class="w-5">
                                                        SUB HEAD NO.
                                                    </th>
                                                    <th class="w-5">
                                                        HEAD NAME
                                                    </th>
                                                    <th class="CurrentBudgetEstimates w-20">

                                                    </th>
                                                    <th class="PreviousActualBudget w-20">

                                                    </th>
                                                    <th class="PreviousHalfYearActualBudget w-20">

                                                    </th>
                                                    <th class="CurrentYearRevisedEstimates w-20">

                                                    </th>

                                                    <th class="BudgetEstimatesNextYear w-20">

                                                    </th>
                                                </tr>
                                            </thead>
                                            <tbody>

                                                @foreach (var Subs in Model.SubGroupss.Where(d => d.GroupNo.Equals(@item.GroupNo)))
                                                {
                                                    //var BudEstCurrFinSum = (from a in Model.Detailss
                                                    //                     join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                    //                     where (b.DivisionType.Equals(SelectedDivisionTypeName) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo)))
                                                    //                     select a.BudEstCurrFin).Sum();
                                                    var BudEstCurrFinSum = (from a in Model.Detailss
                                                                            where (a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                            select a.BudEstCurrFin).Sum();
                                                    //var ActPrevFinSum = (from a in Model.Detailss
                                                    //                     join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                    //                     where (b.DivisionType.Equals(SelectedDivisionTypeName) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo)))
                                                    //                     select a.ActPrevFin).Sum();
                                                    var ActPrevFinSum = (from a in Model.Detailss
                                                                         where (a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                         select a.ActPrevFin).Sum();
                                                    //var ActCurrFinTill2ndQuartSum = (from a in Model.Detailss
                                                    //                                 join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                    //                                 where (b.DivisionType.Equals(SelectedDivisionTypeName) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo)))
                                                    //                                 select a.ActCurrFinTill2ndQuart).Sum();
                                                    var ActCurrFinTill2ndQuartSum = (from a in Model.Detailss
                                                                                     where (a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                                     select a.ActCurrFinTill2ndQuart).Sum();
                                                    //var RevEstCurrFinSum = (from a in Model.Detailss
                                                    //                        join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                    //                        where (b.DivisionType.Equals(SelectedDivisionTypeName) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo)))
                                                    //                        select a.ACAndBWPropRECurrFin).Sum();
                                                    var RevEstCurrFinSum = (from a in Model.Detailss
                                                                            where (a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                            select a.ACAndBWPropRECurrFin).Sum();
                                                    //var BudgEstNexFinSum = (from a in Model.Detailss
                                                    //                        join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                    //                        where (b.DivisionType.Equals(SelectedDivisionTypeName) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo)))
                                                    //                        select a.ACAndBWPropRENxtFin).Sum();
                                                    var BudgEstNexFinSum = (from a in Model.Detailss
                                                                            where (a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                            select a.ACAndBWPropRENxtFin).Sum();

                                                    var name1 = String.Concat("BudEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name2 = String.Concat("ActPrevFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name3 = String.Concat("ActCurrFinTillsecondQuart", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name4 = String.Concat("RevEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name7 = String.Concat("BudgEstNexFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);

                                                    var LedgerCount = (from a in Model.Ledgerss where a.SubGroupNo.Equals(@Subs.SubGroupNo) select a.LedgerNo).Count();

                                                    
                                                    <tr>
                                                        <td>
                                                           @Subs.SubGroupNo
                                                        </td>
                                                        <td>
                                                            
                                                        </td>
                                                        <td>
                                                            @Subs.subGroupName
                                                        </td>
                                                        <td>
                                                            @Html.Label("BudEstCurrFinHeadwiseConsolidation" ,BudEstCurrFinSum!=null ? Convert.ToDecimal(BudEstCurrFinSum).ToString("F") : "-")
                                                        </td>
                                                        <td>
                                                            @Html.Label("ActPrevFinHeadwiseConsolidation" ,ActPrevFinSum!=null ? Convert.ToDecimal(ActPrevFinSum).ToString("F") : "-")
                                                        </td>
                                                        <td>
                                                            @Html.Label("ActCurrFinTill2ndQuartHeadwiseConsolidation" ,ActCurrFinTill2ndQuartSum!=null ? Convert.ToDecimal(ActCurrFinTill2ndQuartSum).ToString("F") : "-")
                                                        </td>
                                                        <td>
                                                            @Html.Label("RevEstCurrFinHeadwiseConsolidation" ,RevEstCurrFinSum!=null ? Convert.ToDecimal(RevEstCurrFinSum).ToString("F") : "-")
                                                        </td>
                                                        <td>
                                                            @Html.Label("BudgEstNexFinHeadwiseConsolidation" ,BudgEstNexFinSum!=null ? Convert.ToDecimal(BudgEstNexFinSum).ToString("F") : "-")
                                                        </td>

                                                    </tr>

                                                    @if (LedgerCount > 0)
                                                    {
                                                            
                                                        @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                                                                    {
                                                                        var BudEstCurrFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.BudEstCurrFin).Sum();
                                                                        var ActPrevFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ActPrevFin).Sum();
                                                                        var ActCurrFinTill2ndQuartLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ActCurrFinTill2ndQuart).Sum();
                                                                        var RevEstCurrFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ACAndBWPropRECurrFin).Sum();
                                                                        var BudgEstNexFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ACAndBWPropRENxtFin).Sum();


                                                                        <tr>
                                                                            <td></td>
                                                                            <td>
                                                                                @Ledgers.LedgerNo
                                                                            </td>
                                                                            <td>@Ledgers.LedgerName</td>
                                                                            <td>
                                                                                @Html.Label("BudEstCurrFinLedgerHeadwiseConsolidation" ,BudEstCurrFinLedgerSum!=null ? Convert.ToDecimal(BudEstCurrFinLedgerSum).ToString("F") : "-")
                                                                            </td>
                                                                            <td>
                                                                                @Html.Label("ActPrevFinLedgerHeadwiseConsolidation" ,ActPrevFinLedgerSum!=null ? Convert.ToDecimal(ActPrevFinLedgerSum).ToString("F") : "-")
                                                                            </td>
                                                                            <td>
                                                                                @Html.Label("ActCurrFinTill2ndQuartLedgerHeadwiseConsolidation" ,ActCurrFinTill2ndQuartLedgerSum!=null ? Convert.ToDecimal(ActCurrFinTill2ndQuartLedgerSum).ToString("F") : "-")
                                                                            </td>
                                                                            <td>
                                                                                @Html.Label("RevEstCurrFinLedgerHeadwiseConsolidation" ,RevEstCurrFinLedgerSum!=null ? Convert.ToDecimal(RevEstCurrFinLedgerSum).ToString("F") : "-")
                                                                            </td>
                                                                            <td>
                                                                                @Html.Label("BudgEstNexFinLedgerHeadwiseConsolidation" ,BudgEstNexFinLedgerSum!=null ? Convert.ToDecimal(BudgEstNexFinLedgerSum).ToString("F") : "-")
                                                                            </td>
                                                                        </tr>
                                                                    }
                                                    }
                                                    TableCount++;
                                                }
                                                <tr>
                                                    <td>
                                                    </td>
                                                    <td>
                                                        Total
                                                    </td>
                                                    <td>
                                                        Total
                                                    </td>

                                                    <td id="@Sumname1-Total">
                                                        @SumBudEstCurrFin.ToString("F")
                                                    </td>
                                                    <td id="@Sumname2-Total">
                                                        @SumActPrevFin.ToString("F")
                                                    </td>
                                                    <td id="@Sumname3-Total">
                                                        @SumActCurrFinTill2ndQuart.ToString("F")
                                                    </td>
                                                    <td id="@Sumname4-Total">
                                                        @SumRevEstCurrFin.ToString("F")
                                                    </td>

                                                    <td id="@Sumname7-Total">
                                                        @SumBudgEstNexFin.ToString("F")
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    }
                                    else
                                    {
                                        <table id="@identi-outertable" class="table table-responsive table-hover">
                                            <thead>
                                                <tr class="text-center" style="color:chocolate;border-bottom:hidden;"><th colspan="100">CENTRAL BOARD OF SECONDARY EDUCATION</th></tr>
                                                <tr class="text-center" style="color:chocolate;border-bottom:hidden;">
                                                    <th colspan="100">Shiksha Kendra 2, Community Centre, Preet Vihar, Delhi - 110 092</th>
                                                </tr>
                                                <tr class="text-center" style="color:green;border-bottom:hidden;">
                                                    <th colspan="100">Consolidated @Report</th>
                                                </tr>
                                                <tr class="text-center" style="color:red;border-bottom:hidden;">
                                                    <th colspan="100">*(FIGURES IN CRORES)</th>
                                                </tr>
                                                <tr>
                                                    <th>HEAD NO.</th>
                                                    <th >
                                                        SUB HEAD NO.
                                                    </th>
                                                    <th >
                                                        HEAD NAME
                                                    </th>
                                                    <th >
                                                        @Report
                                                    </th>
                                                    @foreach (var Regions in Model.Divisionss.Where(d => d.DivisionType.Equals(SelectedDivisionTypeName)))
                                                    {
                                                        <th> @Html.Label("RegionDivisionNames-"+Regions.DivisionID,Regions.DivisionName)</th>
                                                    }
                                                </tr>
                                            </thead>
                                            <tbody>

                                                @foreach (var Subs in Model.SubGroupss.Where(d => d.GroupNo.Equals(@item.GroupNo)))
                                                {
                                                    var details = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a).FirstOrDefault();

                                                    var SumSubGroupReport = 0.00;

                                                    if (ReportName!=null && ReportName.Equals("Actual"))
                                                    {
                                                        //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActPrevFin).Sum();
                                                        SumSubGroupReport = (Double)(from a in Model.Detailss
                                                                                     join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                                     where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                                     select a.ActPrevFin).Sum();

                                                    }
                                                    else if (ReportName!=null && ReportName.Equals("Actual Half Year"))
                                                    {
                                                        //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActCurrFinTill2ndQuart).Sum();
                                                        SumSubGroupReport = (Double)(from a in Model.Detailss
                                                                                     join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                                     where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                                     select a.ActCurrFinTill2ndQuart).Sum();
                                                    }
                                                    else if (ReportName!=null && ReportName.Equals("Revised Estimates"))
                                                    {
                                                        //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRECurrFin).Sum();
                                                        SumSubGroupReport = (Double)(from a in Model.Detailss
                                                                                     join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                                     where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                                     select a.ACAndBWPropRECurrFin).Sum();
                                                    }
                                                    /*else if (ReportName.Equals("Budget Estimates "+@SelectedAcademicYear))
                                                    {
                                                        //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRENxtFin).Sum();
                                                        SumSubGroupReport = (Double)(from a in Model.Detailss
                                                                                     join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                                     where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                                     select a.BudEstCurrFin).Sum();
                                                    }*/
                                                    else if (ReportName!=null && ReportName.Equals("Budget Estimates " + @NextAcademicYear))
                                                    {
                                                        //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRENxtFin).Sum();
                                                        SumSubGroupReport = (Double)(from a in Model.Detailss
                                                                                     join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                                     where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                                     select a.ACAndBWPropRENxtFin).Sum();
                                                    }
                                                    var LedgerCount = (from a in Model.Ledgerss where a.SubGroupNo.Equals(@Subs.SubGroupNo) select a.LedgerNo).Count();
                                                    <tr>
                                                        <td>
                                                           @Subs.SubGroupNo 
                                                        </td>
                                                        <td>
                                                            
                                                        </td>
                                                        <td>
                                                            @Subs.subGroupName
                                                        </td>
                                                        <td>
                                                            @Html.Label("SumSubGroupReport"+@Subs.SubGroupNo,@SumSubGroupReport!=0.00 ? @SumSubGroupReport.ToString("F") : "-")
                                                        </td>
                                                        @foreach (var Regions in Model.Divisionss.Where(d => d.DivisionType.Equals(SelectedDivisionTypeName)))
                                                        {
                                                            var result = (from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a).FirstOrDefault();

                                                            if (ReportName!=null && ReportName.Equals("Actual"))
                                                            {

                                                                if (Subs.RequireInput)
                                                                {
                                                                    var LedgersSum = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a.ActPrevFin).Sum();
                                                                    <td align="right">
                                                                        @Html.Label("Actual" + Regions.DivisionName,@LedgersSum!= 0.00 ? Convert.ToDecimal(LedgersSum).ToString("F") : "-")
                                                                    </td>
                                                                }
                                                                else
                                                                {
                                                                    <td align="right">
                                                                        @Html.Label("Actual" + Regions.DivisionName,result!=null ? Convert.ToDecimal(result.ActPrevFin).ToString("F") : "-")
                                                                    </td>
                                                                }
                                                            }
                                                            else if (ReportName!=null && ReportName.Equals("Actual Half Year"))
                                                            {
                                                                if (Subs.RequireInput)
                                                                {
                                                                    var LedgersSum = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a.ActCurrFinTill2ndQuart).Sum();

                                                                    <td align="right">
                                                                        @Html.Label("Actual Half Year" + Regions.DivisionName, LedgersSum!=0.00 ? Convert.ToDecimal(LedgersSum).ToString("F") : "-")
                                                                    </td>
                                                                }
                                                                else
                                                                {
                                                                    <td align="right">
                                                                        @Html.Label("Actual Half Year" + Regions.DivisionName, result!=null ? Convert.ToDecimal(result.ActCurrFinTill2ndQuart).ToString("F") : "-")
                                                                    </td>
                                                                }
                                                            }
                                                            else if (ReportName!=null && ReportName.Equals("Revised Estimates"))
                                                            {
                                                                if (Subs.RequireInput)
                                                                {
                                                                    var LedgersSum = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a.ACAndBWPropRECurrFin).Sum();

                                                                    <td align="right">
                                                                        @Html.Label("Revised Estimates" + Regions.DivisionName, LedgersSum!=0.00 ? Convert.ToDecimal(LedgersSum).ToString("F") : "-")
                                                                    </td>
                                                                }
                                                                else
                                                                {
                                                                    <td align="right">
                                                                        @Html.Label("Revised Estimates" + Regions.DivisionName, result!=null ? Convert.ToDecimal(result.ACAndBWPropRECurrFin).ToString("F") : "-")
                                                                    </td>
                                                                }
                                                            }
                                                            else if (ReportName!=null && ReportName.Equals("Budget Estimates " + @NextAcademicYear))
                                                            {
                                                                if (Subs.RequireInput)
                                                                {
                                                                    var LedgersSum = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a.ACAndBWPropRENxtFin).Sum();

                                                                    <td align="right">
                                                                        @Html.Label("Budget Estimates " +@NextAcademicYear+ Regions.DivisionName, LedgersSum!=0.00 ? Convert.ToDecimal(LedgersSum).ToString("F") : "-")
                                                                    </td>
                                                                }
                                                                else
                                                                {
                                                                    <td align="right">
                                                                        @Html.Label("Budget Estimates "+@NextAcademicYear+ Regions.DivisionName, result!=null ? Convert.ToDecimal(result.ACAndBWPropRENxtFin).ToString("F") : "-")
                                                                    </td>
                                                                }
                                                            }
                                                            /*  else if (ReportName.Equals("Budget Estimates "+@SelectedAcademicYear))
                                                              {
                                                                  if (Subs.RequireInput)
                                                                  {
                                                                      var LedgersSum = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a.BudEstCurrFin).Sum();

                                                                      <td align="right" class="w-20">
                                                                          @Html.Label("Budget Estimates " +@SelectedAcademicYear+ Regions.DivisionName, LedgersSum!=0.00 ? Convert.ToDecimal(LedgersSum).ToString("F") : "-")
                                                                      </td>
                                                                  }
                                                                  else
                                                                  {
                                                                      <td align="right" class="w-20">
                                                                          @Html.Label("Budget Estimates "+@SelectedAcademicYear+ Regions.DivisionName, result!=null ? Convert.ToDecimal(result.BudEstCurrFin).ToString("F") : "-")
                                                                      </td>
                                                                  }
                                                              } */
                                                        }
                                                    </tr>


                                                    @if (LedgerCount > 0)
                                                    {
                                                        @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                                                        {
                                                            var BudEstCurrFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.BudEstCurrFin).Sum();
                                                            var ActPrevFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ActPrevFin).Sum();
                                                            var ActCurrFinTill2ndQuartLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ActCurrFinTill2ndQuart).Sum();
                                                            var RevEstCurrFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ACAndBWPropRECurrFin).Sum();
                                                            var BudgEstNexFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ACAndBWPropRENxtFin).Sum();


                                                            <tr>
                                                                <td></td>
                                                                <td>
                                                                    @Ledgers.LedgerNo
                                                                </td>
                                                                <td>@Ledgers.LedgerName</td>
                                                                <td>
                                                                    @Html.Label("SumSubGroupReport"+@Ledgers.LedgerNo,@SumSubGroupReport!=0.00 ? @SumSubGroupReport.ToString("F") : "-")
                                                                </td>
                                                                @foreach (var Regions in Model.Divisionss.Where(d => d.DivisionType.Equals(SelectedDivisionTypeName)))
                                                                {
                                                                    var result = (from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.LedgerNumber.Equals(@Ledgers.LedgerNo))) select a).FirstOrDefault();

                                                                    if (ReportName != null && ReportName.Equals("Actual"))
                                                                    {
                                                                        <td align="right">
                                                                            @Html.Label("Actual" + Regions.DivisionName,result!=null ? Convert.ToDecimal(result.ActPrevFin).ToString("F") : "-")
                                                                        </td>
                                                                    }
                                                                    else if (ReportName != null && ReportName.Equals("Actual Half Year"))
                                                                    {

                                                                        <td align="right">
                                                                            @Html.Label("Actual Half Year" + Regions.DivisionName, result!=null ? Convert.ToDecimal(result.ActCurrFinTill2ndQuart).ToString("F") : "-")
                                                                        </td>
                                                                    }
                                                                    else if (ReportName != null && ReportName.Equals("Revised Estimates"))
                                                                    {

                                                                        <td align="right">
                                                                            @Html.Label("Revised Estimates" + Regions.DivisionName, result!=null ? Convert.ToDecimal(result.ACAndBWPropRECurrFin).ToString("F") : "-")
                                                                        </td>
                                                                    }
                                                                    else if (ReportName != null && ReportName.Equals("Budget Estimates " + @NextAcademicYear))
                                                                    {

                                                                        <td align="right">
                                                                            @Html.Label("Budget Estimates"+@NextAcademicYear+ Regions.DivisionName, result!=null ? Convert.ToDecimal(result.ACAndBWPropRENxtFin).ToString("F") : "-")
                                                                        </td>
                                                                    }

                                                                }
                                                            </tr>
                                                        }
                                                     
                                                    }
                                                    TableCount++;
                                                }
                                                <tr>
                                                    <td>
                                                    </td>
                                                    <td>
                                                        Total
                                                    </td>
                                                    <td>
                                                        Total
                                                    </td>

                                                    <td>
                                                        @Html.Label("SumGroupReport"+@item.GroupNo,@SumGroupReport!=0.00 ? @SumGroupReport.ToString("F") : "-")
                                                    </td>
                                                    @foreach (var Regions in Model.Divisionss.Where(d => d.DivisionType.Equals(SelectedDivisionTypeName)))
                                                    {
                                                        if (ReportName!=null && ReportName.Equals("Actual"))
                                                        {
                                                            var result = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (item.GroupNo.Equals(a.GroupNumber))) select a.ActPrevFin).Sum();
                                                            <td align="right">
                                                                @Html.Label("ActualSum" + Regions.DivisionName,result!=0.00 ? Convert.ToDecimal(result).ToString("F") : "-")
                                                            </td>
                                                        }
                                                        else if (ReportName!=null && ReportName.Equals("Actual Half Year"))
                                                        {
                                                            var result = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (item.GroupNo.Equals(a.GroupNumber))) select a.ActCurrFinTill2ndQuart).Sum();
                                                            <td align="right">
                                                                @Html.Label("Actual Half Year Sum" + Regions.DivisionName, result!=0.00 ? Convert.ToDecimal(result).ToString("F") : "-")
                                                            </td>
                                                        }
                                                        else if (ReportName!=null && ReportName.Equals("Revised Estimates"))
                                                        {
                                                            var result = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (item.GroupNo.Equals(a.GroupNumber))) select a.ACAndBWPropRECurrFin).Sum();
                                                            <td align="right">
                                                                @Html.Label("Revised Estimates Sum" + Regions.DivisionName, result!=0.00 ? Convert.ToDecimal(result).ToString("F") : "-")

                                                            </td>
                                                        }
                                                        else if (ReportName!=null && ReportName.Equals("Budget Estimates " + @NextAcademicYear))
                                                        {
                                                            var result = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (item.GroupNo.Equals(a.GroupNumber))) select a.ACAndBWPropRENxtFin).Sum();
                                                            <td align="right">
                                                                @Html.Label("Budget Estimates Sum "+@NextAcademicYear+ Regions.DivisionName, result!=0.00 ? Convert.ToDecimal(result).ToString("F") : "-")
                                                            </td>
                                                        }
                                                        /*  else if (ReportName.Equals("Budget Estimates "+@SelectedAcademicYear))
                                                          {
                                                              var result = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (item.GroupNo.Equals(a.GroupNumber))) select a.BudEstCurrFin).Sum();
                                                              <td align="right" class="w-20">
                                                                  @Html.Label("Budget Estimates Sum "+@SelectedAcademicYear+ Regions.DivisionName, result!=0.00 ? Convert.ToDecimal(result).ToString("F") : "-")
                                                              </td>
                                                          } */
                                                    }
                                                </tr>
                                            </tbody>
                                        </table>
                                    }
                                    @*Html.Hidden("SectionName",Model.SectionName, new{@id = @identi+"-SectionName" })
                                        @Html.Hidden("GroupName",Model.GroupName, new{@id = @identi+"-GroupName" })
                                        @Html.Hidden("SelectedAcademicYear", Model.SelectedAcademicYear,  new{@id = @identi+"-SelectedAcademicYear" })
                                        @Html.Hidden("SelectedDivisionName",Model.SelectedDivisionName,  new{@id = @identi+"-SelectedDivisionName" })*@

                                 
                                </div>

                            }
                            CounterBody++;
                        }

                    </div>
                </div>
            }

            OuterBodyCount++;
        }
    </div>
</div>

<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script src="~/js/nestedtable.js"></script>
@section Scripts
    {
    <script type="text/javascript">

        $(document).ready(
            function () {
                onceDocReady();
                
                $('body').on('change', "#DivisionType",
                    function (evt) 
                    {
                        dropdownchange();
                    });

                $('body').on('change', "#Reports",
                    function (evt) {
                       
                        dropdownchange();
                    });

                $('body').on('change', "#AcademicYear",
                    function (evt) {
                        //$("#Reports").val(1);
                        alert("Index of Budget Estimates: "+$("#Reports option:selected").text().trim().indexOf("Budget Estimates"));
                        if($("#Reports option:selected").text().trim().indexOf("Budget Estimates") >=0 )
                        {
                            reportNamesChange();
                            $("#Reports option:selected").removeAttr("selected");
                            $("#Reports").find($("option[value ^= '6']")).attr("selected",true);
                            alert($("#Reports option:selected").text().trim());
                            dropdownchange(); 
                        }
                        else
                        {
                            reportNamesChange();
                            dropdownchange();
                        }
                    }
                );

            });
        function reportNamesChange()
        {
            $("#SelectedAcademicYear").val($("#AcademicYear option:selected").text().trim());
            var academicyear = $("#SelectedAcademicYear").val();
            var year = academicyear.split('-');
           // $("#Reports").find($("option[value^='4']")).html("Budget Estimates "+year[0]+"-"+year[1]);
            $("#Reports").find($("option[value^='6']")).html("Budget Estimates " + year[1] + "-" + (parseInt(year[1]) + parseInt(1)));
        }
        function onceDocReady() {
            $("#SelectedAcademicYear").val($("#AcademicYear option:selected").text().trim());
            //alert($("#SelectedAcademicYear").val());
            $("#SelectedDivisionTypeName").val($("#DivisionType option:selected").text().trim());
            //alert($("#SelectedDivisionTypeName").val());
            $("#SelectedReportName").val($("#Reports option:selected").text().trim());
            //alert($("#SelectedReportName").val());

            var academicyear = $("#SelectedAcademicYear").val();
            var DivisionTypeName = $("#SelectedDivisionTypeName").val();
            //alert(DivisionTypeName);
            var ReportName = $("#SelectedReportName").val();
            var year = academicyear.split('-');
            //alert(year[1]);
           
            $(".CurrentBudgetEstimates").text('Budget Estimates ' + $("#SelectedAcademicYear").val());
            $(".PreviousActualBudget").text('Actual ' + (Number.parseInt(year[0]) - Number.parseInt(1)) + '-' + Number.parseInt(year[0]));
            $(".PreviousHalfYearActualBudget").text('Actual upto 30.09.' + Number.parseInt(year[0]));
            $(".CurrentYearRevisedEstimates").text('Revised Estimates ' + $("#SelectedAcademicYear").val());
            $(".BudgetEstimatesNextYear").text('Budget Estimates ' + Number.parseInt(year[1]) + '-' + (Number.parseInt(year[1]) + Number.parseInt(1)));
           
        }

        function dropdownchange()
        {
            $("#SelectedReportName").val($("#Reports option:selected").text().trim());
            var SelectedReport = $("#SelectedReportName").val();
            //alert("Selected Report : " + SelectedReport);

            $("#SelectedAcademicYear").val($("#AcademicYear option:selected").text().trim());
            var academicyear = $("#SelectedAcademicYear").val();
            //alert("Selected Academic Year : " + academicyear);
            
            $("#SelectedDivisionTypeName").val($("#DivisionType option:selected").text().trim());
            var SelectedDiv = $("#SelectedDivisionTypeName").val();
            //alert("Selected DivisionType Name : " + SelectedDiv);
            
           // if(!academicyear.Equals("--Please select any Academic Year--"))
           // {
              var year = academicyear.split('-');
              //alert(year[0]);
           // }
           // else
           // {
           //    var year = 0;
          //  }
            var sectionnoid = $('#outerTab li button.active').attr('id');

            var section = sectionnoid.split('-');

            var groupnoid = $('#' + section[0] + ' ul li button.active').attr('id');
            //alert(groupnoid);
            var group = groupnoid.split('-');
            //alert(group[0]);

            $.ajax
                ({
                    type: "Get",
                    url: '@Url.Action("GetDetails","Reports")',
                    data: { Year: year[0], DivisionType: SelectedDiv, Report: SelectedReport },
                    dataType: "html",
                    success: function (data) {
                        //Whatever result you have got from your controller with html partial view replace with a specific html.
                        //alert("Inside Ajax");
                        //alert($("#outerdiv", data).html());

                        //$("#outerdiv").html(data);// HTML DOM replace

                        //$("#outerdiv").html(data);
                        $("#outerdiv").html($("#outerdiv", data).html());
                        onceDocReady();
                        var activesectionid = $('#outerTab li button.active').attr('id');
                        //alert("Not active : "+activesectionid);

                        $('#'+activesectionid).removeClass("active");
                        $('#'+activesectionid).removeClass("show");
                        //$('#'+sectionnoid).Click();
                        $('#'+sectionnoid).addClass("active");
                        $('#'+sectionnoid).addClass("show");
                        
                        //alert("Active : "+sectionnoid);

                        var splitsection = activesectionid.split('-');

                        var activegroupnoid = $('#' + splitsection[0] + ' ul li button.active').attr('id');
                        $('#'+activegroupnoid).removeClass("active");
                        $('#' + activegroupnoid).removeClass("show");
                        //$('#'+groupnoid).Click();
                        $('#'+groupnoid).addClass("active");
                        $('#'+groupnoid).addClass("show");

                        var activenavigationid = $('#' + activegroupnoid).attr('data-bs-target');
                        //alert(activenavigationid);
                        $(activenavigationid).removeClass("active");
                        $(activenavigationid).removeClass("show");

                        var navigationid = $('#'+groupnoid).attr('data-bs-target');

                        $(navigationid).addClass("active");
                        $(navigationid).addClass("show");

                        //var splitnavigationid = navigationid.split('#');
                        //alert("Active Content : " + splitnavigationid[0]+"Active Content :"+ splitnavigationid[1]);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert("Error Thrown" + errorThrown);
                    }

                });
        }
    </script>
}