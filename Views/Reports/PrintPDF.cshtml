@model BudgetPortal.ViewModel.ReportView
@using System.Web;

@using BudgetPortal.ViewModel;
@using Microsoft.AspNetCore.Mvc;

@using Microsoft.AspNetCore.Identity;
@using BudgetPortal.Data;

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    //Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Reports";
    int OuterHeaderCount = 0;
    int OuterBodyCount = 0;
    int CountHeader = 0;
    int CounterBody = 0;
    var SumBudEstCurrFin = 0.00;
    var SumActPrevFin= 0.00;
    var SumActCurrFinTill2ndQuart = 0.00;
    var SumRevEstCurrFin = 0.00; 
    var SumBudgEstNexFin= 0.00;
    var SelectedAcademicYear = (from a in Model.AcademicYears where a.Selected == true select a.Text).FirstOrDefault();
    var ReportName = (from a in Model.ReportNames where a.Selected == true select a.Text).FirstOrDefault();
    var SelectedDivisionTypeName = (from a in Model.DivisionTypeNames where a.Selected == true select a.Text).FirstOrDefault();
    var Report = (ReportName != null && @ReportName.Contains("Budget")) ? ("Consolidated " + @ReportName) : (ReportName != null && (@ReportName.Contains("Consolidated")||@ReportName.Contains("Headwise Consolidation"))) ? @ReportName + " " + @SelectedAcademicYear : "Consolidated " + @ReportName + " " + @SelectedAcademicYear+ "(" + @SelectedDivisionTypeName + ")";
    var NextAcademicYear = "";
    var PreviousAcademicYear = "";
    String[] SplitAcademicYear = new String[1];
}
<br />

<table class="table" style="align-content:center">
    <tr>Report Generated on : @DateTime.Now</tr>
<thead>
        <tr class="text-center" style="color:green;">
            <th colspan="100" style="border-left-style:hidden;border-right-style:hidden;border-top-style:hidden;border-bottom-style:hidden;font-weight:bold;"><h1><bold>@Report</bold></h1></th>
        </tr>
        <tr class="text-center" style="color:chocolate;">
            <th colspan="100" style="border-left-style:hidden;border-right-style:hidden;border-top-style:hidden;border-bottom-style:hidden;font-weight:bold;">CENTRAL BOARD OF SECONDARY EDUCATION</th>
        </tr>
        <tr class="text-center" style="color:chocolate;">
            <th colspan="100" style="border-left-style:hidden;border-right-style:hidden;border-top-style:hidden;border-bottom-style:hidden;font-weight:bold;">Shiksha Kendra 2, Community Centre, Preet Vihar, Delhi - 110 092</th>
        </tr>
        <tr class="text-center" style="color:red;">
            <th colspan="100" style="border-left-style:hidden;border-right-style:hidden;border-top-style:hidden;border-bottom-style:hidden;font-weight:bold;">(*FIGURES IN CRORES)</th>
        </tr>
</thead>
</table>

@foreach (var inner in Model.Sectionss)
{
    var inneridenti = String.Concat("Budget", @inner.SectionNo.ToString());
    CountHeader = 0;
    CounterBody = 0;

    var SectionSumBudEstCurrFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.BudEstCurrFin).Sum();
    var SectionSumActPrevFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.ActPrevFin).Sum();
    var SectionSumActCurrFinTill2ndQuart = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.ActCurrFinTill2ndQuart).Sum();
    var SectionSumACAndBWPropRECurrFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.ACAndBWPropRECurrFin).Sum();
    var SectionSumPerVarRevEstOverBudgEstCurrFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.PerVarRevEstOverBudgEstCurrFin).Sum();
    //var SectionSumACAndBWPropRECurrFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.ACAndBWPropRECurrFin).Sum();
    var SectionSumACAndBWPropRENxtFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.ACAndBWPropRENxtFin).Sum();
    var SectionSumPerVarRevEstOverBudgEstNxtFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.PerVarRevEstOverBudgEstNxtFin).Sum();
    /*var SectionSumACAndBWPropRENxtFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.ACAndBWPropRENxtFin).Sum();*/

    
        //var SelectedDivisionTypeName = (from a in Model.DivisionTypeNames where a.Selected == true select a.Text).FirstOrDefault();
            
                <br />
                 @foreach (var item in Model.Groupss.Where(d => d.SectionNo == @inner.SectionNo))
                {
                    int TableCount = 0;

                    var identi = String.Concat("Budget", Convert.ToInt32((Convert.ToDecimal(@item.GroupNo) * 10)).ToString());

                    var Sumname1 = String.Concat("BudEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                    var Sumname2 = String.Concat("ActPrevFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                    var Sumname3 = String.Concat("ActCurrFinTillsecondQuart", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                    var Sumname4 = String.Concat("RevEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                    var Sumname7 = String.Concat("BudgEstNexFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                    //var SelectReportName = (from a in Model.ReportNames where a.Selected == true select a.Text).FirstOrDefault();

                    @if (ReportName != null && ReportName.Equals("Headwise Consolidation"))
                    {
                        SumBudEstCurrFin = (double)(from a in Model.Detailss
                                                    where (a.GroupNumber.Equals(@item.GroupNo))
                                                    select a.BudEstCurrFin).Sum();
                        SumActPrevFin = (double)(from a in Model.Detailss
                                                 where (a.GroupNumber.Equals(@item.GroupNo))
                                                 select a.ActPrevFin).Sum();
                        SumActCurrFinTill2ndQuart = (double)(from a in Model.Detailss
                                                             where (a.GroupNumber.Equals(@item.GroupNo))
                                                             select a.ActCurrFinTill2ndQuart).Sum();
                        SumRevEstCurrFin = (double)(from a in Model.Detailss
                                                    where (a.GroupNumber.Equals(@item.GroupNo))
                                                    select a.ACAndBWPropRECurrFin).Sum();
                        SumBudgEstNexFin = (double)(from a in Model.Detailss
                                                    where (a.GroupNumber.Equals(@item.GroupNo))
                                                    select a.ACAndBWPropRENxtFin).Sum();
                    }
                    else
                    {
                        SumBudEstCurrFin = (double)(from a in Model.Detailss
                                                    join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                    where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                    select a.BudEstCurrFin).Sum();
                        SumActPrevFin = (double)(from a in Model.Detailss
                                                 join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                 where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                 select a.ActPrevFin).Sum();
                        SumActCurrFinTill2ndQuart = (double)(from a in Model.Detailss
                                                             join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                             where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                             select a.ActCurrFinTill2ndQuart).Sum();
                        SumRevEstCurrFin = (double)(from a in Model.Detailss
                                                    join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                    where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                    select a.ACAndBWPropRECurrFin).Sum();
                        SumBudgEstNexFin = (double)(from a in Model.Detailss
                                                    join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                    where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                    select a.ACAndBWPropRENxtFin).Sum();
        }

        //var ReportName = (from a in Model.ReportNames where a.Selected == true select a.Text).FirstOrDefault();
        SelectedAcademicYear = (from a in Model.AcademicYears where a.Selected == true select a.Text).FirstOrDefault();

        if (SelectedAcademicYear != null)
        {
            SplitAcademicYear = SelectedAcademicYear.Split("-");

            NextAcademicYear = SplitAcademicYear[1] + "-" + (Convert.ToInt32(SplitAcademicYear[1]) + Convert.ToInt32(1));

            PreviousAcademicYear = (Convert.ToInt32(SplitAcademicYear[0]) - Convert.ToInt32(1)) + "-" + SplitAcademicYear[0];
        }
                        var SumGroupReport = 0.00;
                        var HQSumGroupReport = 0.00;
                        var ROSumGroupReport = 0.00;
                        var COESumGroupReport = 0.00;
                        var UnitSumGroupReport = 0.00;
     //Calculating values in prior
                        if (ReportName != null && ReportName.Equals("Actual"))
                        {
                            //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo) ) select a.ActPrevFin).Sum();
                            SumGroupReport = (Double)(from a in Model.Detailss
                                                      join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                      where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                      select a.ActPrevFin).Sum();
                        }
                        else if (ReportName != null && ReportName.Equals("Actual Half Year"))
                        {
                            //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo)) select a.ActCurrFinTill2ndQuart).Sum();
                            SumGroupReport = (Double)(from a in Model.Detailss
                                                      join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                      where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                      select a.ActCurrFinTill2ndQuart).Sum();

                        }
                        else if (ReportName != null && ReportName.Equals("Revised Estimates"))
                        {
                            //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo)) select a.ACAndBWPropRECurrFin).Sum();
                            SumGroupReport = (Double)(from a in Model.Detailss
                                                      join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                      where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                      select a.ACAndBWPropRECurrFin).Sum();
                        }
                        /*else if (ReportName.Equals("Budget Estimates "+@SelectedAcademicYear))
                        {
                        //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo)) select a.ACAndBWPropRENxtFin).Sum();
                        SumGroupReport = (Double)(from a in Model.Detailss
                        join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                        where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                        select a.BudEstCurrFin).Sum();

                        }*/
                        else if (ReportName != null && ReportName.Equals("Budget Estimates " + @NextAcademicYear))
                        {
                            //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo)) select a.ACAndBWPropRENxtFin).Sum();
                            SumGroupReport = (Double)(from a in Model.Detailss
                                                      join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                      where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                      select a.ACAndBWPropRENxtFin).Sum();

                        }

        if (ReportName != null && ReportName.Equals("Consolidated Actual"))
        {
            //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo) ) select a.ActPrevFin).Sum();
            SumGroupReport = (Double)(from a in Model.Detailss
                                      where a.GroupNumber.Equals(@item.GroupNo)
                                      select a.ActPrevFin).Sum();
            HQSumGroupReport = (Double)(from a in Model.Detailss
                                        join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                        where (b.DivisionType.Equals("HeadQuarters") && a.GroupNumber.Equals(@item.GroupNo))
                                        select a.ActPrevFin).Sum();
            ROSumGroupReport = (Double)(from a in Model.Detailss
                                        join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                        where (b.DivisionType.Equals("Regional Office") && a.GroupNumber.Equals(@item.GroupNo))
                                        select a.ActPrevFin).Sum();
            COESumGroupReport = (Double)(from a in Model.Detailss
                                         join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                         where (b.DivisionType.Equals("Centre of Excellence") && a.GroupNumber.Equals(@item.GroupNo))
                                         select a.ActPrevFin).Sum();


        }
        else if (ReportName != null && ReportName.Equals("Consolidated Actual Half Year"))
        {
            //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo)) select a.ActCurrFinTill2ndQuart).Sum();
            SumGroupReport = (Double)(from a in Model.Detailss
                                      where a.GroupNumber.Equals(@item.GroupNo)
                                      select a.ActCurrFinTill2ndQuart).Sum();
            HQSumGroupReport = (Double)(from a in Model.Detailss
                                        join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                        where (b.DivisionType.Equals("HeadQuarters") && a.GroupNumber.Equals(@item.GroupNo))
                                        select a.ActCurrFinTill2ndQuart).Sum();
            ROSumGroupReport = (Double)(from a in Model.Detailss
                                        join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                        where (b.DivisionType.Equals("Regional Office") && a.GroupNumber.Equals(@item.GroupNo))
                                        select a.ActCurrFinTill2ndQuart).Sum();
            COESumGroupReport = (Double)(from a in Model.Detailss
                                         join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                         where (b.DivisionType.Equals("Centre of Excellence") && a.GroupNumber.Equals(@item.GroupNo))
                                         select a.ActCurrFinTill2ndQuart).Sum();
        }
        else if (ReportName != null && ReportName.Equals("Consolidated Revised Estimates"))
        {
            //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo)) select a.ACAndBWPropRECurrFin).Sum();
            SumGroupReport = (Double)(from a in Model.Detailss
                                      where a.GroupNumber.Equals(@item.GroupNo)
                                      select a.ACAndBWPropRECurrFin).Sum();
            HQSumGroupReport = (Double)(from a in Model.Detailss
                                        join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                        where (b.DivisionType.Equals("HeadQuarters") && a.GroupNumber.Equals(@item.GroupNo))
                                        select a.ACAndBWPropRECurrFin).Sum();
            ROSumGroupReport = (Double)(from a in Model.Detailss
                                        join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                        where (b.DivisionType.Equals("Regional Office") && a.GroupNumber.Equals(@item.GroupNo))
                                        select a.ACAndBWPropRECurrFin).Sum();
            COESumGroupReport = (Double)(from a in Model.Detailss
                                         join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                         where (b.DivisionType.Equals("Centre of Excellence") && a.GroupNumber.Equals(@item.GroupNo))
                                         select a.ACAndBWPropRECurrFin).Sum();
        }
        else if (ReportName != null && ReportName.Equals("Consolidated Budget Estimates " + @NextAcademicYear))
        {
            //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo)) select a.ACAndBWPropRENxtFin).Sum();
            SumGroupReport = (Double)(from a in Model.Detailss
                                      where a.GroupNumber.Equals(@item.GroupNo)
                                      select a.ACAndBWPropRENxtFin).Sum();
            HQSumGroupReport = (Double)(from a in Model.Detailss
                                        join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                        where (b.DivisionType.Equals("HeadQuarters") && a.GroupNumber.Equals(@item.GroupNo))
                                        select a.ACAndBWPropRENxtFin).Sum();
            ROSumGroupReport = (Double)(from a in Model.Detailss
                                        join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                        where (b.DivisionType.Equals("Regional Office") && a.GroupNumber.Equals(@item.GroupNo))
                                        select a.ACAndBWPropRENxtFin).Sum();
            COESumGroupReport = (Double)(from a in Model.Detailss
                                         join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                         where (b.DivisionType.Equals("Centre of Excellence") && a.GroupNumber.Equals(@item.GroupNo))
                                         select a.ACAndBWPropRENxtFin).Sum();
        }


        //Reports
                            @if (ReportName != null && ReportName.Equals("Headwise Consolidation"))
                            {
                                 @*<div class="row" style="background-color:darkkhaki">@item.GroupName</div> *@
                                <table id="@identi-outertable" class="table table-responsive table-hover">
                                    <tr><th colspan="4" style="background-color:darkkhaki">@item.GroupName</th></tr>
                                    <thead>
                                          
                                        <tr>
                                            <th class="w-5">HEAD NO.</th>
                                            <th class="w-5">
                                              SUB HEAD NO.  
                                            </th>
                                            <th class="w-5">
                                                HEAD NAME
                                            </th>
                                            <th class="CurrentBudgetEstimates w-20">
                                                Budget Estimates @SelectedAcademicYear
                                            </th>
                                            <th class="PreviousActualBudget w-20">
                                                Actual @PreviousAcademicYear
                                            </th>
                                            <th class="PreviousHalfYearActualBudget w-20">
                                                Actual upto 30.09.@SplitAcademicYear[0]
                                            </th>
                                            <th class="CurrentYearRevisedEstimates w-20">
                                                 Revised Estimates @SelectedAcademicYear
                                            </th>

                                            <th class="BudgetEstimatesNextYear w-20">
                                                 Budget Estimates @NextAcademicYear
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody>

                                        @foreach (var Subs in Model.SubGroupss.Where(d => d.GroupNo.Equals(@item.GroupNo)))
                                        {
                                            //var BudEstCurrFinSum = (from a in Model.Detailss
                                            //                     join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                            //                     where (b.DivisionType.Equals(SelectedDivisionTypeName) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo)))
                                            //                     select a.BudEstCurrFin).Sum();
                                            var BudEstCurrFinSum = (from a in Model.Detailss
                                                                    where (a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                    select a.BudEstCurrFin).Sum();
                                            //var ActPrevFinSum = (from a in Model.Detailss
                                            //                     join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                            //                     where (b.DivisionType.Equals(SelectedDivisionTypeName) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo)))
                                            //                     select a.ActPrevFin).Sum();
                                            var ActPrevFinSum = (from a in Model.Detailss
                                                                 where (a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                 select a.ActPrevFin).Sum();
                                            //var ActCurrFinTill2ndQuartSum = (from a in Model.Detailss
                                            //                                 join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                            //                                 where (b.DivisionType.Equals(SelectedDivisionTypeName) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo)))
                                            //                                 select a.ActCurrFinTill2ndQuart).Sum();
                                            var ActCurrFinTill2ndQuartSum = (from a in Model.Detailss
                                                                             where (a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                             select a.ActCurrFinTill2ndQuart).Sum();
                                            //var RevEstCurrFinSum = (from a in Model.Detailss
                                            //                        join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                            //                        where (b.DivisionType.Equals(SelectedDivisionTypeName) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo)))
                                            //                        select a.ACAndBWPropRECurrFin).Sum();
                                            var RevEstCurrFinSum = (from a in Model.Detailss
                                                                    where (a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                    select a.ACAndBWPropRECurrFin).Sum();
                                            //var BudgEstNexFinSum = (from a in Model.Detailss
                                            //                        join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                            //                        where (b.DivisionType.Equals(SelectedDivisionTypeName) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo)))
                                            //                        select a.ACAndBWPropRENxtFin).Sum();
                                            var BudgEstNexFinSum = (from a in Model.Detailss
                                                                    where (a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                    select a.ACAndBWPropRENxtFin).Sum();

                                            var name1 = String.Concat("BudEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                            var name2 = String.Concat("ActPrevFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                            var name3 = String.Concat("ActCurrFinTillsecondQuart", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                            var name4 = String.Concat("RevEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                            var name7 = String.Concat("BudgEstNexFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);

                                            var LedgerCount = (from a in Model.Ledgerss where a.SubGroupNo.Equals(@Subs.SubGroupNo) select a.LedgerNo).Count();

                                            <tr>
                                                <td>
                                                  @Subs.SubGroupNo
                                                </td>
                                                <td>
                                                    
                                                </td>
                                                <td>
                                                    @Subs.subGroupName
                                                </td>
                                                <td>
                                                    @Html.Label("BudEstCurrFinHeadwiseConsolidation" ,BudEstCurrFinSum!=null ? Convert.ToDecimal(BudEstCurrFinSum).ToString("F4") : "-")
                                                </td>
                                                <td>
                                                    @Html.Label("ActPrevFinHeadwiseConsolidation" ,ActPrevFinSum!=null ? Convert.ToDecimal(ActPrevFinSum).ToString("F4") : "-")
                                                </td>
                                                <td>
                                                    @Html.Label("ActCurrFinTill2ndQuartHeadwiseConsolidation" ,ActCurrFinTill2ndQuartSum!=null ? Convert.ToDecimal(ActCurrFinTill2ndQuartSum).ToString("F4") : "-")
                                                </td>
                                                <td>
                                                    @Html.Label("RevEstCurrFinHeadwiseConsolidation" ,RevEstCurrFinSum!=null ? Convert.ToDecimal(RevEstCurrFinSum).ToString("F4") : "-")
                                                </td>
                                                <td>
                                                    @Html.Label("BudgEstNexFinHeadwiseConsolidation" ,BudgEstNexFinSum!=null ? Convert.ToDecimal(BudgEstNexFinSum).ToString("F4") : "-")
                                                </td>

                                            </tr>

                                    @if (LedgerCount > 0)
                                    {
                                         @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                            {
                                var BudEstCurrFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.BudEstCurrFin).Sum();
                                var ActPrevFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ActPrevFin).Sum();
                                var ActCurrFinTill2ndQuartLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ActCurrFinTill2ndQuart).Sum();
                                var RevEstCurrFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ACAndBWPropRECurrFin).Sum();
                                var BudgEstNexFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ACAndBWPropRENxtFin).Sum();


                                <tr>
                                    <td></td>
                                    <td>
                                        @Ledgers.LedgerNo
                                    </td>
                                    <td>@Ledgers.LedgerName</td>
                                    <td>
                                        @Html.Label("BudEstCurrFinLedgerHeadwiseConsolidation" ,BudEstCurrFinLedgerSum!=null ? Convert.ToDecimal(BudEstCurrFinLedgerSum).ToString("F4") : "-")
                                    </td>
                                    <td>
                                        @Html.Label("ActPrevFinLedgerHeadwiseConsolidation" ,ActPrevFinLedgerSum!=null ? Convert.ToDecimal(ActPrevFinLedgerSum).ToString("F4") : "-")
                                    </td>
                                    <td>
                                        @Html.Label("ActCurrFinTill2ndQuartLedgerHeadwiseConsolidation" ,ActCurrFinTill2ndQuartLedgerSum!=null ? Convert.ToDecimal(ActCurrFinTill2ndQuartLedgerSum).ToString("F4") : "-")
                                    </td>
                                    <td>
                                        @Html.Label("RevEstCurrFinLedgerHeadwiseConsolidation" ,RevEstCurrFinLedgerSum!=null ? Convert.ToDecimal(RevEstCurrFinLedgerSum).ToString("F4") : "-")
                                    </td>
                                    <td>
                                        @Html.Label("BudgEstNexFinLedgerHeadwiseConsolidation" ,BudgEstNexFinLedgerSum!=null ? Convert.ToDecimal(BudgEstNexFinLedgerSum).ToString("F4") : "-")
                                    </td>
                                </tr>
                            }
                                    }
                                            TableCount++;
                                        }
                                        <tr>
                                            <td>
                                            </td>
                                            <td>
                                                Total
                                            </td>
                                            <td>
                                                Total
                                            </td>

                                            <td id="@Sumname1-Total">
                                                @SumBudEstCurrFin.ToString("F4")
                                            </td>
                                            <td id="@Sumname2-Total">
                                                @SumActPrevFin.ToString("F4")
                                            </td>
                                            <td id="@Sumname3-Total">
                                                @SumActCurrFinTill2ndQuart.ToString("F4")
                                            </td>
                                            <td id="@Sumname4-Total">
                                                @SumRevEstCurrFin.ToString("F4")
                                            </td>

                                            <td id="@Sumname7-Total">
                                                @SumBudgEstNexFin.ToString("F4")
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            }
                            else if (ReportName != null && ReportName.Contains("Consolidated"))
                            {
            <table id="@identi-outertable" class="table table-responsive table-hover table-bordered">

                <thead>
                    <tr><th colspan="4" style="background-color:darkkhaki">@item.GroupName</th></tr>
                    <tr>
                        <th class="w-5">
                            HEAD NO.
                        </th>
                        <th class="w-5">
                            SUB HEAD NO.
                        </th>
                        <th class="w-5">
                            NAME OF THE HEAD
                        </th>
                        <th class="w-5">
                            @Report
                        </th>
                        <th class="w-5">
                            HEADQUARTERS
                        </th>
                        <th class="w-5">
                            ALL REGIONAL OFFICES
                        </th>
                        <th class="w-5">
                            ALL COEs
                        </th>
                        @foreach (var Regions in Model.Divisionss.Where(d => d.DivisionType.Equals("Unit")))
                        {
                            <th class="w-5"> @Html.Label("UnitNames-"+Regions.DivisionID,Regions.DivisionName)</th>
                        }
                    </tr>
                </thead>
                <tbody>

                    @foreach (var Subs in Model.SubGroupss.Where(d => d.GroupNo.Equals(@item.GroupNo)))
                    {
                        var details = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a).FirstOrDefault();
                        //var SelectedAcademicYear = (from a in Model.AcademicYears where a.Selected == true select a.Text).FirstOrDefault();
                        //var SplitAcademicYear = SelectedAcademicYear.Split("-");
                        //var NextAcademicYear = SplitAcademicYear[1]+"-"+(Convert.ToInt32(SplitAcademicYear[1])+Convert.ToInt32(1));
                        var SumSubGroupReport = 0.00;
                        var HQSumSubGroupReport = 0.00;
                        var ROSumSubGroupReport = 0.00;
                        var COESumSubGroupReport = 0.00;
                        var UnitSumSubGroupReport = 0.00;

                        if (ReportName != null && ReportName.Equals("Consolidated Actual"))
                        {
                            //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActPrevFin).Sum();
                            SumSubGroupReport = (Double)(from a in Model.Detailss
                                                         where a.SubGroupNumber.Equals(@Subs.SubGroupNo)
                                                         select a.ActPrevFin).Sum();
                            HQSumSubGroupReport = (Double)(from a in Model.Detailss
                                                           join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                           where (b.DivisionType.Equals("HeadQuarters") && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                           select a.ActPrevFin).Sum();
                            ROSumSubGroupReport = (Double)(from a in Model.Detailss
                                                           join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                           where (b.DivisionType.Equals("Regional Office") && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                           select a.ActPrevFin).Sum();
                            COESumSubGroupReport = (Double)(from a in Model.Detailss
                                                            join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                            where (b.DivisionType.Equals("Centre of Excellence") && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                            select a.ActPrevFin).Sum();
                        }
                        else if (ReportName != null && ReportName.Equals("Consolidated Actual Half Year"))
                        {
                            //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActCurrFinTill2ndQuart).Sum();
                            SumSubGroupReport = (Double)(from a in Model.Detailss
                                                         where a.SubGroupNumber.Equals(@Subs.SubGroupNo)
                                                         select a.ActCurrFinTill2ndQuart).Sum();
                            HQSumSubGroupReport = (Double)(from a in Model.Detailss
                                                           join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                           where (b.DivisionType.Equals("HeadQuarters") && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                           select a.ActCurrFinTill2ndQuart).Sum();
                            ROSumSubGroupReport = (Double)(from a in Model.Detailss
                                                           join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                           where (b.DivisionType.Equals("Regional Office") && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                           select a.ActCurrFinTill2ndQuart).Sum();
                            COESumSubGroupReport = (Double)(from a in Model.Detailss
                                                            join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                            where (b.DivisionType.Equals("Centre of Excellence") && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                            select a.ActCurrFinTill2ndQuart).Sum();
                        }
                        else if (ReportName != null && ReportName.Equals("Consolidated Revised Estimates"))
                        {
                            //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRECurrFin).Sum();
                            SumSubGroupReport = (Double)(from a in Model.Detailss
                                                         where a.SubGroupNumber.Equals(@Subs.SubGroupNo)
                                                         select a.ACAndBWPropRECurrFin).Sum();
                            HQSumSubGroupReport = (Double)(from a in Model.Detailss
                                                           join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                           where (b.DivisionType.Equals("HeadQuarters") && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                           select a.ACAndBWPropRECurrFin).Sum();
                            ROSumSubGroupReport = (Double)(from a in Model.Detailss
                                                           join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                           where (b.DivisionType.Equals("Regional Office") && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                           select a.ACAndBWPropRECurrFin).Sum();
                            COESumSubGroupReport = (Double)(from a in Model.Detailss
                                                            join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                            where (b.DivisionType.Equals("Centre of Excellence") && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                            select a.ACAndBWPropRECurrFin).Sum();
                        }
                        else if (ReportName != null && ReportName.Equals("Consolidated Budget Estimates " + @NextAcademicYear))
                        {
                            //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRENxtFin).Sum();
                            SumSubGroupReport = (Double)(from a in Model.Detailss
                                                         where a.SubGroupNumber.Equals(@Subs.SubGroupNo)
                                                         select a.ACAndBWPropRENxtFin).Sum();
                            HQSumSubGroupReport = (Double)(from a in Model.Detailss
                                                           join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                           where (b.DivisionType.Equals("HeadQuarters") && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                           select a.ACAndBWPropRENxtFin).Sum();
                            ROSumSubGroupReport = (Double)(from a in Model.Detailss
                                                           join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                           where (b.DivisionType.Equals("Regional Office") && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                           select a.ACAndBWPropRENxtFin).Sum();
                            COESumSubGroupReport = (Double)(from a in Model.Detailss
                                                            join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                            where (b.DivisionType.Equals("Centre of Excellence") && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                            select a.ACAndBWPropRENxtFin).Sum();
                        }

                        var LedgerCount = (from a in Model.Ledgerss where a.SubGroupNo.Equals(@Subs.SubGroupNo) select a.LedgerNo).Count();

                        <tr>

                            <td>
                                @Subs.SubGroupNo
                            </td>
                            <td></td>
                            <td>
                                @Subs.subGroupName
                            </td>

                            <td align="right">
                                @Html.Label("SumSubGroupReport"+@Subs.SubGroupNo,@SumSubGroupReport!=0.00 ? @SumSubGroupReport.ToString("F4") : "-")
                            </td>
                            <td align="right">
                                @Html.Label("HQSumSubGroupReport"+@Subs.SubGroupNo,@HQSumSubGroupReport!=0.00 ? @HQSumSubGroupReport.ToString("F4") : "-")
                            </td>
                            <td align="right">
                                @Html.Label("ROSumSubGroupReport"+@Subs.SubGroupNo,@ROSumSubGroupReport!=0.00 ? @ROSumSubGroupReport.ToString("F4") : "-")
                            </td>
                            <td align="right">
                                @Html.Label("COESumSubGroupReport"+@Subs.SubGroupNo,@COESumSubGroupReport!=0.00 ? @COESumSubGroupReport.ToString("F4") : "-")
                            </td>

                            @foreach (var Regions in Model.Divisionss.Where(d => d.DivisionType.Equals("Unit")))
                            {
                                if (ReportName != null && ReportName.Equals("Consolidated Actual"))
                                {
                                    UnitSumSubGroupReport = (Double)(from a in Model.Detailss
                                                                     join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                     where (b.DivisionType.Equals(Regions.DivisionName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                     select a.ACAndBWPropRENxtFin).Sum();

                                    <td align="right">
                                        @Html.Label("UnitSumSubGroupReport"+@Subs.SubGroupNo,@UnitSumSubGroupReport!=0.00 ? @UnitSumSubGroupReport.ToString("F4") : "-")
                                    </td>
                                }
                                else if (ReportName != null && ReportName.Equals("Consolidated Actual Half Year"))
                                {
                                    UnitSumSubGroupReport = (Double)(from a in Model.Detailss
                                                                     join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                     where (b.DivisionType.Equals(Regions.DivisionName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                     select a.ActCurrFinTill2ndQuart).Sum();

                                    <td align="right">
                                        @Html.Label("UnitSumSubGroupReport"+@Subs.SubGroupNo,@UnitSumSubGroupReport!=0.00 ? @UnitSumSubGroupReport.ToString("F4") : "-")
                                    </td>
                                }
                                else if (ReportName != null && ReportName.Equals("Consolidated Revised Estimates"))
                                {
                                    UnitSumSubGroupReport = (Double)(from a in Model.Detailss
                                                                     join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                     where (b.DivisionType.Equals(Regions.DivisionName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                     select a.ACAndBWPropRECurrFin).Sum();

                                    <td align="right">
                                        @Html.Label("UnitSumSubGroupReport"+@Subs.SubGroupNo,@UnitSumSubGroupReport!=0.00 ? @UnitSumSubGroupReport.ToString("F4") : "-")
                                    </td>
                                }
                                else if (ReportName != null && ReportName.Equals("Consolidated Budget Estimates " + @NextAcademicYear))
                                {
                                    UnitSumSubGroupReport = (Double)(from a in Model.Detailss
                                                                     join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                     where (b.DivisionType.Equals(Regions.DivisionName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                     select a.ACAndBWPropRENxtFin).Sum();

                                    <td align="right">
                                        @Html.Label("UnitSumSubGroupReport"+@Subs.SubGroupNo,@UnitSumSubGroupReport!=0.00 ? @UnitSumSubGroupReport.ToString("F4") : "-")
                                    </td>
                                }

                            }
                        </tr>

                        @if (LedgerCount > 0)
                        {
                            @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                            {
                                var LedgerSumSubGroupReport = 0.00;
                                var LedgerHQSumSubGroupReport = 0.00;
                                var LedgerROSumSubGroupReport = 0.00;
                                var LedgerCOESumSubGroupReport = 0.00;
                                var LedgerUnitSumSubGroupReport = 0.00;

                                if (ReportName != null && ReportName.Equals("Consolidated Actual"))
                                {
                                    //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActPrevFin).Sum();
                                    LedgerSumSubGroupReport = (Double)(from a in Model.Detailss
                                                                       where (a.LedgerNumber.Equals(@Ledgers.LedgerNo) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                       select a.ActPrevFin).Sum();
                                    LedgerHQSumSubGroupReport = (Double)(from a in Model.Detailss
                                                                         join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                         where (b.DivisionType.Equals("HeadQuarters") && a.LedgerNumber.Equals(@Ledgers.LedgerNo) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                         select a.ActPrevFin).Sum();
                                    LedgerROSumSubGroupReport = (Double)(from a in Model.Detailss
                                                                         join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                         where (b.DivisionType.Equals("Regional Office") && a.LedgerNumber.Equals(@Ledgers.LedgerNo) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                         select a.ActPrevFin).Sum();
                                    LedgerCOESumSubGroupReport = (Double)(from a in Model.Detailss
                                                                          join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                          where (b.DivisionType.Equals("Centre of Excellence") && a.LedgerNumber.Equals(@Ledgers.LedgerNo) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                          select a.ActPrevFin).Sum();
                                }
                                else if (ReportName != null && ReportName.Equals("Consolidated Actual Half Year"))
                                {
                                    //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActCurrFinTill2ndQuart).Sum();
                                    LedgerSumSubGroupReport = (Double)(from a in Model.Detailss
                                                                       where (a.LedgerNumber.Equals(@Ledgers.LedgerNo) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                       select a.ActCurrFinTill2ndQuart).Sum();
                                    LedgerHQSumSubGroupReport = (Double)(from a in Model.Detailss
                                                                         join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                         where (b.DivisionType.Equals("HeadQuarters") && a.LedgerNumber.Equals(@Ledgers.LedgerNo) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                         select a.ActCurrFinTill2ndQuart).Sum();
                                    LedgerROSumSubGroupReport = (Double)(from a in Model.Detailss
                                                                         join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                         where (b.DivisionType.Equals("Regional Office") && a.LedgerNumber.Equals(@Ledgers.LedgerNo) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                         select a.ActCurrFinTill2ndQuart).Sum();
                                    LedgerCOESumSubGroupReport = (Double)(from a in Model.Detailss
                                                                          join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                          where (b.DivisionType.Equals("Centre of Excellence") && a.LedgerNumber.Equals(@Ledgers.LedgerNo) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                          select a.ActCurrFinTill2ndQuart).Sum();
                                }
                                else if (ReportName != null && ReportName.Equals("Consolidated Revised Estimates"))
                                {
                                    //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRECurrFin).Sum();
                                    LedgerSumSubGroupReport = (Double)(from a in Model.Detailss
                                                                       where a.LedgerNumber.Equals(@Ledgers.LedgerNo)
                                                                       select a.ACAndBWPropRECurrFin).Sum();
                                    LedgerHQSumSubGroupReport = (Double)(from a in Model.Detailss
                                                                         join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                         where (b.DivisionType.Equals("HeadQuarters") && a.LedgerNumber.Equals(@Ledgers.LedgerNo) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                         select a.ACAndBWPropRECurrFin).Sum();
                                    LedgerROSumSubGroupReport = (Double)(from a in Model.Detailss
                                                                         join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                         where (b.DivisionType.Equals("Regional Office") && a.LedgerNumber.Equals(@Ledgers.LedgerNo) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                         select a.ACAndBWPropRECurrFin).Sum();
                                    LedgerCOESumSubGroupReport = (Double)(from a in Model.Detailss
                                                                          join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                          where (b.DivisionType.Equals("Centre of Excellence") && a.LedgerNumber.Equals(@Ledgers.LedgerNo) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                          select a.ACAndBWPropRECurrFin).Sum();
                                }
                                else if (ReportName != null && ReportName.Equals("Consolidated Budget Estimates " + @NextAcademicYear))
                                {
                                    //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRENxtFin).Sum();
                                    LedgerSumSubGroupReport = (Double)(from a in Model.Detailss
                                                                       where (a.LedgerNumber.Equals(@Ledgers.LedgerNo) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                       select a.ACAndBWPropRENxtFin).Sum();
                                    LedgerHQSumSubGroupReport = (Double)(from a in Model.Detailss
                                                                         join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                         where (b.DivisionType.Equals("HeadQuarters") && a.LedgerNumber.Equals(@Ledgers.LedgerNo) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                         select a.ACAndBWPropRECurrFin).Sum();
                                    LedgerROSumSubGroupReport = (Double)(from a in Model.Detailss
                                                                         join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                         where (b.DivisionType.Equals("Regional Office") && a.LedgerNumber.Equals(@Ledgers.LedgerNo) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                         select a.ACAndBWPropRECurrFin).Sum();
                                    LedgerCOESumSubGroupReport = (Double)(from a in Model.Detailss
                                                                          join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                          where (b.DivisionType.Equals("Centre of Excellence") && a.LedgerNumber.Equals(@Ledgers.LedgerNo) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                          select a.ACAndBWPropRECurrFin).Sum();
                                }
                                <tr>
                                    <td></td>
                                    <td>@Ledgers.LedgerNo</td>
                                    <td>@Ledgers.LedgerName</td>
                                    <td align="right">
                                        @Html.Label("LedgerSumSubGroupReport"+@Ledgers.LedgerNo,@LedgerSumSubGroupReport!=0.00 ? @LedgerSumSubGroupReport.ToString("F4") : "-")
                                    </td>
                                    <td align="right">
                                        @Html.Label("LedgerHQSumSubGroupReport"+@Ledgers.LedgerNo,@LedgerHQSumSubGroupReport!=0.00 ? @LedgerHQSumSubGroupReport.ToString("F4") : "-")
                                    </td>
                                    <td align="right">
                                        @Html.Label("LedgerROSumSubGroupReport"+@Ledgers.LedgerNo,@LedgerROSumSubGroupReport!=0.00 ? @LedgerROSumSubGroupReport.ToString("F4") : "-")
                                    </td>
                                    <td align="right">
                                        @Html.Label("LedgerCOESumSubGroupReport"+@Ledgers.LedgerNo,@LedgerCOESumSubGroupReport!=0.00 ? @LedgerCOESumSubGroupReport.ToString("F4") : "-")
                                    </td>
                                    @foreach (var Regions in Model.Divisionss.Where(d => d.DivisionType.Equals("Unit")))
                                    {
                                        if (ReportName != null && ReportName.Equals("Consolidated Actual"))
                                        {
                                            LedgerUnitSumSubGroupReport = (Double)(from a in Model.Detailss
                                                                                   join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                                   where (b.DivisionType.Equals(Regions.DivisionName) && a.LedgerNumber.Equals(@Ledgers.LedgerNo) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                                   select a.ACAndBWPropRENxtFin).Sum();

                                            <td align="right">
                                                @Html.Label("LedgerUnitSumSubGroupReport"+@Ledgers.LedgerNo,@LedgerUnitSumSubGroupReport!=0.00 ? @LedgerUnitSumSubGroupReport.ToString("F4") : "-")
                                            </td>
                                        }
                                        else if (ReportName != null && ReportName.Equals("Consolidated Actual Half Year"))
                                        {
                                            LedgerUnitSumSubGroupReport = (Double)(from a in Model.Detailss
                                                                                   join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                                   where (b.DivisionType.Equals(Regions.DivisionName) && a.LedgerNumber.Equals(@Ledgers.LedgerNo) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                                   select a.ActCurrFinTill2ndQuart).Sum();

                                            <td align="right">
                                                @Html.Label("LedgerUnitSumSubGroupReport"+@Ledgers.LedgerNo,@LedgerUnitSumSubGroupReport!=0.00 ? @LedgerUnitSumSubGroupReport.ToString("F4") : "-")
                                            </td>
                                        }
                                        else if (ReportName != null && ReportName.Equals("Consolidated Revised Estimates"))
                                        {
                                            LedgerUnitSumSubGroupReport = (Double)(from a in Model.Detailss
                                                                                   join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                                   where (b.DivisionType.Equals(Regions.DivisionName) && a.LedgerNumber.Equals(@Ledgers.LedgerNo) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                                   select a.ACAndBWPropRECurrFin).Sum();

                                            <td align="right">
                                                @Html.Label("LedgerUnitSumSubGroupReport"+@Ledgers.LedgerNo,@LedgerUnitSumSubGroupReport!=0.00 ? @LedgerUnitSumSubGroupReport.ToString("F4") : "-")
                                            </td>
                                        }
                                        else if (ReportName != null && ReportName.Equals("Consolidated Budget Estimates " + @NextAcademicYear))
                                        {
                                            LedgerUnitSumSubGroupReport = (Double)(from a in Model.Detailss
                                                                                   join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                                   where (b.DivisionType.Equals(Regions.DivisionName) && a.LedgerNumber.Equals(@Ledgers.LedgerNo) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                                   select a.ACAndBWPropRENxtFin).Sum();

                                            <td align="right">
                                                @Html.Label("LedgerUnitSumSubGroupReport"+@Ledgers.LedgerNo,@LedgerUnitSumSubGroupReport!=0.00 ? @LedgerUnitSumSubGroupReport.ToString("F4") : "-")
                                            </td>
                                        }
                                    }
                                </tr>
                            }

                        }

                        TableCount++;
                    }
                    <tr>
                        <td>
                        </td>
                        <td>
                            Total
                        </td>
                        <td>
                            Total
                        </td>
                        <td align="right">
                            @Html.Label("SumGroupReport"+@item.GroupNo,@SumGroupReport!=0.00 ? @SumGroupReport.ToString("F4") : "-")
                        </td>
                        <td align="right">
                            @Html.Label("HQSumGroupReport"+@item.GroupNo,@HQSumGroupReport!=0.00 ? @HQSumGroupReport.ToString("F4") : "-")
                        </td>
                        <td align="right">
                            @Html.Label("ROSumGroupReport"+@item.GroupNo,@ROSumGroupReport!=0.00 ? @ROSumGroupReport.ToString("F4") : "-")
                        </td>
                        <td align="right">
                            @Html.Label("COESumGroupReport"+@item.GroupNo,@COESumGroupReport!=0.00 ? @COESumGroupReport.ToString("F4") : "-")
                        </td>
                        @foreach (var Regions in Model.Divisionss.Where(d => d.DivisionType.Equals("Unit")))
                        {

                            if (ReportName != null && ReportName.Equals("Consolidated Actual"))
                            {
                                UnitSumGroupReport = (Double)(from a in Model.Detailss
                                                              join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                              where (b.DivisionName.Equals(Regions.DivisionName))
                                                              select a.ActPrevFin).Sum();
                                <td align="right">
                                    @Html.Label("UnitSumGroupReport"+@item.GroupNo,@COESumGroupReport!=0.00 ? @UnitSumGroupReport.ToString("F4") : "-")
                                </td>
                            }
                            else if (ReportName != null && ReportName.Equals("Consolidated Actual Half Year"))
                            {
                                //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo)) select a.ActCurrFinTill2ndQuart).Sum();
                                UnitSumGroupReport = (Double)(from a in Model.Detailss
                                                              join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                              where (b.DivisionType.Equals("Centre of Excellence"))
                                                              select a.ActCurrFinTill2ndQuart).Sum();
                                <td align="right">
                                    @Html.Label("UnitSumGroupReport"+@item.GroupNo,@COESumGroupReport!=0.00 ? @UnitSumGroupReport.ToString("F4") : "-")
                                </td>
                            }
                            else if (ReportName != null && ReportName.Equals("Consolidated Revised Estimates"))
                            {
                                UnitSumGroupReport = (Double)(from a in Model.Detailss
                                                              join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                              where (b.DivisionType.Equals("Centre of Excellence"))
                                                              select a.ACAndBWPropRECurrFin).Sum();
                                <td align="right">
                                    @Html.Label("UnitSumGroupReport"+@item.GroupNo,@COESumGroupReport!=0.00 ? @UnitSumGroupReport.ToString("F4") : "-")
                                </td>
                            }
                            else if (ReportName != null && ReportName.Equals("Consolidated Budget Estimates " + @NextAcademicYear))
                            {
                                UnitSumGroupReport = (Double)(from a in Model.Detailss
                                                              join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                              where (b.DivisionType.Equals("Centre of Excellence"))
                                                              select a.ACAndBWPropRENxtFin).Sum();
                                <td align="right">
                                    @Html.Label("UnitSumGroupReport"+@item.GroupNo,@COESumGroupReport!=0.00 ? @UnitSumGroupReport.ToString("F4") : "-")
                                </td>
                            }
                        }
                    </tr>
                </tbody>
            </table>
        }
                            else
                            {
                                @* <div class="row" style="background-color:darkkhaki">@item.GroupName</div> *@
                                <table id="@identi-outertable" class="table table-responsive table-hover">
                                    <tr><th colspan="4" style="background-color:darkkhaki">@item.GroupName</th></tr>
                                    <thead>
                                        <tr>
                                            <th>HEAD NO.</th>
                                            <th>
                                                SUB HEAD NO.
                                            </th>
                                            <th>
                                                HEAD NAME
                                            </th>
                                            <th>
                                                @Report
                                            </th>

                                            @foreach (var Regions in Model.Divisionss.Where(d => d.DivisionType.Equals(SelectedDivisionTypeName)))
                                            {
                                                <th>
                                                    @Html.Label("RegionDivisionNames-"+Regions.DivisionID, Regions.DivisionName)
                                                </th>
                                            }

                                        </tr>
                                    </thead>
                                    <tbody>

                                        @foreach (var Subs in Model.SubGroupss.Where(d => d.GroupNo.Equals(@item.GroupNo)))
                                        {
                                            var details = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a).FirstOrDefault();
                                            //var SelectedAcademicYear = (from a in Model.AcademicYears where a.Selected == true select a.Text).FirstOrDefault();
                                            //var SplitAcademicYear = SelectedAcademicYear.Split("-");
                                            //var NextAcademicYear = SplitAcademicYear[1]+"-"+(Convert.ToInt32(SplitAcademicYear[1])+Convert.ToInt32(1));
                                            var SumSubGroupReport = 0.00;

                                            if (ReportName != null && ReportName.Equals("Actual"))
                                            {
                                                //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActPrevFin).Sum();
                                                SumSubGroupReport = (Double)(from a in Model.Detailss
                                                                             join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                             where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                             select a.ActPrevFin).Sum();

                                            }
                                            else if (ReportName != null && ReportName.Equals("Actual Half Year"))
                                            {
                                                //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActCurrFinTill2ndQuart).Sum();
                                                SumSubGroupReport = (Double)(from a in Model.Detailss
                                                                             join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                             where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                             select a.ActCurrFinTill2ndQuart).Sum();
                                            }
                                            else if (ReportName != null && ReportName.Equals("Revised Estimates"))
                                            {
                                                //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRECurrFin).Sum();
                                                SumSubGroupReport = (Double)(from a in Model.Detailss
                                                                             join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                             where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                             select a.ACAndBWPropRECurrFin).Sum();
                                            }
                                            else if (ReportName != null && ReportName.Equals("Budget Estimates " + @NextAcademicYear))
                                            {
                                                //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRENxtFin).Sum();
                                                SumSubGroupReport = (Double)(from a in Model.Detailss
                                                                             join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                             where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                             select a.ACAndBWPropRENxtFin).Sum();
                                            }
                                            /* else if (ReportName.Equals("Budget Estimates "+@SelectedAcademicYear))
                                            {
                                            //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRENxtFin).Sum();
                                            SumSubGroupReport = (Double)(from a in Model.Detailss
                                            join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                            where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                            select a.BudEstCurrFin).Sum();
                                            }*/
                                            var LedgerCount = (from a in Model.Ledgerss where a.SubGroupNo.Equals(@Subs.SubGroupNo) select a.LedgerNo).Count();

                                            <tr>
                                                <td>
                                                     @Subs.SubGroupNo
                                                </td>
                                                <td>
                                                    
                                                </td>
                                                <td>
                                                    @Subs.subGroupName
                                                </td>
                                                <td>
                                                    @Html.Label("SumSubGroupReport"+@Subs.SubGroupNo,@SumSubGroupReport!=0.00 ? @SumSubGroupReport.ToString("F4") : "-")
                                                </td>
                                                @foreach (var Regions in Model.Divisionss.Where(d => d.DivisionType.Equals(SelectedDivisionTypeName)))
                                                {
                                                    var result = (from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a).FirstOrDefault();

                                                    if (ReportName != null && ReportName.Equals("Actual"))
                                                    {

                                                        if (Subs.RequireInput)
                                                        {
                                                            var LedgersSum = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a.ActPrevFin).Sum();
                                                            <td align="right">
                                                                @Html.Label("Actual" + Regions.DivisionName,@LedgersSum!= 0.00 ? Convert.ToDecimal(LedgersSum).ToString("F4") : "-")
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td align="right">
                                                                @Html.Label("Actual" + Regions.DivisionName,result!=null ? Convert.ToDecimal(result.ActPrevFin).ToString("F4") : "-")
                                                            </td>
                                                        }
                                                    }
                                                    else if (ReportName != null && ReportName.Equals("Actual Half Year"))
                                                    {
                                                        if (Subs.RequireInput)
                                                        {
                                                            var LedgersSum = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a.ActCurrFinTill2ndQuart).Sum();

                                                            <td align="right">
                                                                @Html.Label("Actual Half Year" + Regions.DivisionName, LedgersSum!=0.00 ? Convert.ToDecimal(LedgersSum).ToString("F4") : "-")
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td align="right">
                                                                @Html.Label("Actual Half Year" + Regions.DivisionName, result!=null ? Convert.ToDecimal(result.ActCurrFinTill2ndQuart).ToString("F4") : "-")
                                                            </td>
                                                        }
                                                    }
                                                    else if (ReportName != null && ReportName.Equals("Revised Estimates"))
                                                    {
                                                        if (Subs.RequireInput)
                                                        {
                                                            var LedgersSum = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a.ACAndBWPropRECurrFin).Sum();

                                                            <td align="right">
                                                                @Html.Label("Revised Estimates" + Regions.DivisionName, LedgersSum!=0.00 ? Convert.ToDecimal(LedgersSum).ToString("F4") : "-")
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td align="right">
                                                                @Html.Label("Revised Estimates" + Regions.DivisionName, result!=null ? Convert.ToDecimal(result.ACAndBWPropRECurrFin).ToString("F4") : "-")
                                                            </td>
                                                        }
                                                    }
                                                    else if (ReportName != null && ReportName.Equals("Budget Estimates " + @NextAcademicYear))
                                                    {
                                                        if (Subs.RequireInput)
                                                        {
                                                            var LedgersSum = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a.ACAndBWPropRENxtFin).Sum();

                                                            <td align="right">
                                                                @Html.Label("Budget Estimates" +@NextAcademicYear+ Regions.DivisionName, LedgersSum!=0.00 ? Convert.ToDecimal(LedgersSum).ToString("F4") : "-")
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td align="right">
                                                                @Html.Label("Budget Estimates"+@NextAcademicYear+ Regions.DivisionName, result!=null ? Convert.ToDecimal(result.ACAndBWPropRENxtFin).ToString("F4") : "-")
                                                            </td>
                                                        }
                                                    }
                                                    /*else if (ReportName.Equals("Budget Estimates "+@SelectedAcademicYear))
                                                    {
                                                    if(Subs.RequireInput)
                                                    {
                                                    var LedgersSum = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a.BudEstCurrFin).Sum();

                                                    <td align="right" class="w-20">
                                                    @Html.Label("Budget Estimates "+@SelectedAcademicYear+ Regions.DivisionName, LedgersSum!=0.00 ? Convert.ToDecimal(LedgersSum).ToString("F4") : "-")
                                                    </td>
                                                    }
                                                    else
                                                    {
                                                    <td align="right" class="w-20">
                                                    @Html.Label("Budget Estimates "+@SelectedAcademicYear+ Regions.DivisionName, result!=null ? Convert.ToDecimal(result.BudEstCurrFin).ToString("F4") : "-")
                                                    </td>
                                                    }
                                                    }*/
                                                }
                                            </tr>

                      

                            @if (LedgerCount > 0)
                            {
                                @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                                {
                                    var BudEstCurrFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.BudEstCurrFin).Sum();
                                    var ActPrevFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ActPrevFin).Sum();
                                    var ActCurrFinTill2ndQuartLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ActCurrFinTill2ndQuart).Sum();
                                    var RevEstCurrFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ACAndBWPropRECurrFin).Sum();
                                    var BudgEstNexFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ACAndBWPropRENxtFin).Sum();

                                var LedgerSumSubGroupReport = 0.00;

                                if (ReportName != null && ReportName.Equals("Actual"))
                                {
                                    //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActPrevFin).Sum();
                                    LedgerSumSubGroupReport = (Double)(from a in Model.Detailss
                                                                 join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                       where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.LedgerNumber.Equals(@Ledgers.LedgerNo))
                                                                 select a.ActPrevFin).Sum();

                                }
                                else if (ReportName != null && ReportName.Equals("Actual Half Year"))
                                {
                                    //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActCurrFinTill2ndQuart).Sum();
                                    LedgerSumSubGroupReport = (Double)(from a in Model.Detailss
                                                                 join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                 where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.LedgerNumber.Equals(@Ledgers.LedgerNo))
                                                                 select a.ActCurrFinTill2ndQuart).Sum();
                                }
                                else if (ReportName != null && ReportName.Equals("Revised Estimates"))
                                {
                                    //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRECurrFin).Sum();
                                    LedgerSumSubGroupReport = (Double)(from a in Model.Detailss
                                                                 join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                       where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.LedgerNumber.Equals(@Ledgers.LedgerNo))
                                                                 select a.ACAndBWPropRECurrFin).Sum();
                                }
                                else if (ReportName != null && ReportName.Equals("Budget Estimates " + @NextAcademicYear))
                                {
                                    //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRENxtFin).Sum();
                                    LedgerSumSubGroupReport = (Double)(from a in Model.Detailss
                                                                 join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                       where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.LedgerNumber.Equals(@Ledgers.LedgerNo))
                                                                 select a.ACAndBWPropRENxtFin).Sum();
                                }
                                /* else if (ReportName.Equals("Budget Estimates "+@SelectedAcademicYear))
                                {
                                //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRENxtFin).Sum();
                                SumSubGroupReport = (Double)(from a in Model.Detailss
                                join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                select a.BudEstCurrFin).Sum();
                                }*/
                                    <tr>
                                        <td></td>
                                        <td>
                                            @Ledgers.LedgerNo
                                        </td>
                                        <td>@Ledgers.LedgerName</td>
                                        <td>
                                            @Html.Label("LedgerSumSubGroupReport"+@Ledgers.LedgerNo,@LedgerSumSubGroupReport!=0.00 ? @LedgerSumSubGroupReport.ToString("F4") : "-")
                                        </td>
                                        @foreach (var Regions in Model.Divisionss.Where(d => d.DivisionType.Equals(SelectedDivisionTypeName)))
                                        {
                                            var result = (from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.LedgerNumber.Equals(@Ledgers.LedgerNo))) select a).FirstOrDefault();

                                            if (ReportName != null && ReportName.Equals("Actual"))
                                            {
                                                <td align="right">
                                                    @Html.Label("Actual" + Regions.DivisionName,result!=null ? Convert.ToDecimal(result.ActPrevFin).ToString("F4") : "-")
                                                </td>
                                            }
                                            else if (ReportName != null && ReportName.Equals("Actual Half Year"))
                                            {

                                                <td align="right">
                                                    @Html.Label("Actual Half Year" + Regions.DivisionName, result!=null ? Convert.ToDecimal(result.ActCurrFinTill2ndQuart).ToString("F4") : "-")
                                                </td>
                                            }
                                            else if (ReportName != null && ReportName.Equals("Revised Estimates"))
                                            {

                                                <td align="right">
                                                    @Html.Label("Revised Estimates" + Regions.DivisionName, result!=null ? Convert.ToDecimal(result.ACAndBWPropRECurrFin).ToString("F4") : "-")
                                                </td>
                                            }
                                            else if (ReportName != null && ReportName.Equals("Budget Estimates " + @NextAcademicYear))
                                            {

                                                <td align="right">
                                                    @Html.Label("Budget Estimates"+@NextAcademicYear+ Regions.DivisionName, result!=null ? Convert.ToDecimal(result.ACAndBWPropRENxtFin).ToString("F4") : "-")
                                                </td>
                                            }

                                        }
                                    </tr>
                                }

                            }
                        
                                            TableCount++;
                                        }
                                        <tr>
                                            <td>
                                            </td>
                                            <td>
                                                Total
                                            </td>
                                            <td>
                                                Total
                                            </td>

                                            <td>
                                                @Html.Label("SumGroupReport"+@item.GroupNo,@SumGroupReport!=0.00 ? @SumGroupReport.ToString("F4") : "-")
                                            </td>
                                            @foreach (var Regions in Model.Divisionss.Where(d => d.DivisionType.Equals(SelectedDivisionTypeName)))
                                            {
                                                if (ReportName != null && ReportName.Equals("Actual"))
                                                {
                                                    var result = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (item.GroupNo.Equals(a.GroupNumber))) select a.ActPrevFin).Sum();
                                                    <td align="right" class="w-20">
                                                        @Html.Label("ActualSum" + Regions.DivisionName,result!=0.00 ? Convert.ToDecimal(result).ToString("F4") : "-")
                                                    </td>
                                                }
                                                else if (ReportName != null && ReportName.Equals("Actual Half Year"))
                                                {
                                                    var result = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (item.GroupNo.Equals(a.GroupNumber))) select a.ActCurrFinTill2ndQuart).Sum();
                                                    <td align="right" class="w-20">
                                                        @Html.Label("Actual Half Year Sum" + Regions.DivisionName, result!=0.00 ? Convert.ToDecimal(result).ToString("F4") : "-")
                                                    </td>
                                                }
                                                else if (ReportName != null && ReportName.Equals("Revised Estimates"))
                                                {
                                                    var result = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (item.GroupNo.Equals(a.GroupNumber))) select a.ACAndBWPropRECurrFin).Sum();
                                                    <td align="right" class="w-20">
                                                        @Html.Label("Revised Estimates Sum" + Regions.DivisionName, result!=0.00 ? Convert.ToDecimal(result).ToString("F4") : "-")

                                                    </td>
                                                }
                                                else if (ReportName != null && ReportName.Equals("Budget Estimates " + @NextAcademicYear))
                                                {
                                                    var result = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (item.GroupNo.Equals(a.GroupNumber))) select a.ACAndBWPropRENxtFin).Sum();
                                                    <td align="right" class="w-20">
                                                        @Html.Label("Budget Estimates Sum "+@NextAcademicYear+ Regions.DivisionName, result!=0.00 ? Convert.ToDecimal(result).ToString("F4") : "-")
                                                    </td>
                                                }
                                                /*  else if (ReportName.Equals("Budget Estimates "+@SelectedAcademicYear))
                                                {
                                                var result = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (item.GroupNo.Equals(a.GroupNumber))) select a.BudEstCurrFin).Sum();
                                                <td align="right" class="w-20">
                                                @Html.Label("Budget Estimates Sum "+@SelectedAcademicYear+ Regions.DivisionName, result!=0.00 ? Convert.ToDecimal(result).ToString("F4") : "-")
                                                </td>
                                                } */
                                            }
                                        </tr>
                                    </tbody>
                                </table>
                            }
                        

                   
                    
                    CounterBody++;
                }


    OuterBodyCount++;
}


}
<style>
    /*thead {
        display: table-row-group;
    }*/
    thead,tbody,tr
    {
        page-break-inside: avoid !important;
    }
</style>