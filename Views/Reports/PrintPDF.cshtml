@model BudgetPortal.ViewModel.ReportView
@using System.Web;

@using BudgetPortal.ViewModel;
@using Microsoft.AspNetCore.Mvc;

@using Microsoft.AspNetCore.Identity;
@using BudgetPortal.Data;

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    //Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Reports";
    int OuterHeaderCount = 0;
    int OuterBodyCount = 0;
    int CountHeader = 0;
    int CounterBody = 0;
    var SumBudEstCurrFin = 0.00;
    var SumActPrevFin= 0.00;
    var SumActCurrFinTill2ndQuart = 0.00;
    var SumRevEstCurrFin = 0.00; 
    var SumBudgEstNexFin= 0.00;
    var SelectedAcademicYear = (from a in Model.AcademicYears where a.Selected == true select a.Text).FirstOrDefault();
    var ReportName = (from a in Model.ReportNames where a.Selected == true select a.Text).FirstOrDefault(); 
    var Report = (ReportName != null && @ReportName.Contains("Budget")) ? @ReportName : @ReportName + " " + @SelectedAcademicYear;
    var NextAcademicYear = "";
    String[] SplitAcademicYear = new String[1];
}
<br />

<table class="table" style="border-right:hidden;border-left:hidden ;border-top:hidden;border-bottom:hidden;align-content:center">
<thead>
     <tr class="text-center" style="color:chocolate;border-bottom:hidden;"><th colspan="100">CENTRAL BOARD OF SECONDARY EDUCATION</th></tr>
     <tr class="text-center" style="color:chocolate;border-bottom:hidden;">
        <th colspan="100">Shiksha Kendra 2, Community Centre, Preet Vihar, Delhi - 110 092</th>
     </tr>
     <tr class="text-center" style="color:green;border-bottom:hidden;">
       <th colspan="100">Consolidated @Report</th>
     </tr>
     <tr class="text-center" style="color:red;border-bottom:hidden;">
        <th colspan="100">(*FIGURES IN CRORES)</th>
     </tr>
</thead>
</table>

@foreach (var inner in Model.Sectionss)
{
    var inneridenti = String.Concat("Budget", @inner.SectionNo.ToString());
    CountHeader = 0;
    CounterBody = 0;

    var SectionSumBudEstCurrFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.BudEstCurrFin).Sum();
    var SectionSumActPrevFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.ActPrevFin).Sum();
    var SectionSumActCurrFinTill2ndQuart = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.ActCurrFinTill2ndQuart).Sum();
    var SectionSumACAndBWPropRECurrFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.ACAndBWPropRECurrFin).Sum();
    var SectionSumPerVarRevEstOverBudgEstCurrFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.PerVarRevEstOverBudgEstCurrFin).Sum();
    //var SectionSumACAndBWPropRECurrFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.ACAndBWPropRECurrFin).Sum();
    var SectionSumACAndBWPropRENxtFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.ACAndBWPropRENxtFin).Sum();
    var SectionSumPerVarRevEstOverBudgEstNxtFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.PerVarRevEstOverBudgEstNxtFin).Sum();
    /*var SectionSumACAndBWPropRENxtFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.ACAndBWPropRENxtFin).Sum();*/

    
        var SelectedDivisionTypeName = (from a in Model.DivisionTypeNames where a.Selected == true select a.Text).FirstOrDefault();
            
                <br />
     @foreach (var item in Model.Groupss.Where(d => d.SectionNo == @inner.SectionNo))
                {
                    int TableCount = 0;

                    var identi = String.Concat("Budget", Convert.ToInt32((Convert.ToDecimal(@item.GroupNo) * 10)).ToString());

                    var Sumname1 = String.Concat("BudEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                    var Sumname2 = String.Concat("ActPrevFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                    var Sumname3 = String.Concat("ActCurrFinTillsecondQuart", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                    var Sumname4 = String.Concat("RevEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                    var Sumname7 = String.Concat("BudgEstNexFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                    //var SelectReportName = (from a in Model.ReportNames where a.Selected == true select a.Text).FirstOrDefault();

                    @if (ReportName != null && ReportName.Equals("Headwise Consolidation"))
                    {
                        SumBudEstCurrFin = (double)(from a in Model.Detailss
                                                    where (a.GroupNumber.Equals(@item.GroupNo))
                                                    select a.BudEstCurrFin).Sum();
                        SumActPrevFin = (double)(from a in Model.Detailss
                                                 where (a.GroupNumber.Equals(@item.GroupNo))
                                                 select a.ActPrevFin).Sum();
                        SumActCurrFinTill2ndQuart = (double)(from a in Model.Detailss
                                                             where (a.GroupNumber.Equals(@item.GroupNo))
                                                             select a.ActCurrFinTill2ndQuart).Sum();
                        SumRevEstCurrFin = (double)(from a in Model.Detailss
                                                    where (a.GroupNumber.Equals(@item.GroupNo))
                                                    select a.ACAndBWPropRECurrFin).Sum();
                        SumBudgEstNexFin = (double)(from a in Model.Detailss
                                                    where (a.GroupNumber.Equals(@item.GroupNo))
                                                    select a.ACAndBWPropRENxtFin).Sum();
                    }
                    else
                    {
                        SumBudEstCurrFin = (double)(from a in Model.Detailss
                                                    join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                    where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                    select a.BudEstCurrFin).Sum();
                        SumActPrevFin = (double)(from a in Model.Detailss
                                                 join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                 where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                 select a.ActPrevFin).Sum();
                        SumActCurrFinTill2ndQuart = (double)(from a in Model.Detailss
                                                             join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                             where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                             select a.ActCurrFinTill2ndQuart).Sum();
                        SumRevEstCurrFin = (double)(from a in Model.Detailss
                                                    join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                    where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                    select a.ACAndBWPropRECurrFin).Sum();
                        SumBudgEstNexFin = (double)(from a in Model.Detailss
                                                    join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                    where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                    select a.ACAndBWPropRENxtFin).Sum();
                    }
                    
                        //var ReportName = (from a in Model.ReportNames where a.Selected == true select a.Text).FirstOrDefault();
                         SelectedAcademicYear = (from a in Model.AcademicYears where a.Selected == true select a.Text).FirstOrDefault();
                         Report = (ReportName != null && @ReportName.Contains("Budget")) ? @ReportName : @ReportName + " " + @SelectedAcademicYear;
                        if (SelectedAcademicYear != null)
                        {
                            SplitAcademicYear = SelectedAcademicYear.Split("-");

                            NextAcademicYear = SplitAcademicYear[1] + "-" + (Convert.ToInt32(SplitAcademicYear[1]) + Convert.ToInt32(1));
                        }
                        var SumGroupReport = 0.00;

                        if (ReportName != null && ReportName.Equals("Actual"))
                        {
                            //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo) ) select a.ActPrevFin).Sum();
                            SumGroupReport = (Double)(from a in Model.Detailss
                                                      join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                      where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                      select a.ActPrevFin).Sum();
                        }
                        else if (ReportName != null && ReportName.Equals("Actual Half Year"))
                        {
                            //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo)) select a.ActCurrFinTill2ndQuart).Sum();
                            SumGroupReport = (Double)(from a in Model.Detailss
                                                      join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                      where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                      select a.ActCurrFinTill2ndQuart).Sum();

                        }
                        else if (ReportName != null && ReportName.Equals("Revised Estimates"))
                        {
                            //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo)) select a.ACAndBWPropRECurrFin).Sum();
                            SumGroupReport = (Double)(from a in Model.Detailss
                                                      join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                      where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                      select a.ACAndBWPropRECurrFin).Sum();
                        }
                        /*else if (ReportName.Equals("Budget Estimates "+@SelectedAcademicYear))
                        {
                        //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo)) select a.ACAndBWPropRENxtFin).Sum();
                        SumGroupReport = (Double)(from a in Model.Detailss
                        join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                        where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                        select a.BudEstCurrFin).Sum();

                        }*/
                        else if (ReportName != null && ReportName.Equals("Budget Estimates " + @NextAcademicYear))
                        {
                            //SumGroupReport = (Double)(from a in Model.Detailss where (a.GroupNumber.Equals(@item.GroupNo)) select a.ACAndBWPropRENxtFin).Sum();
                            SumGroupReport = (Double)(from a in Model.Detailss
                                                      join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                      where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.GroupNumber.Equals(@item.GroupNo))
                                                      select a.ACAndBWPropRENxtFin).Sum();

                        }

                       

                            @if (ReportName != null && ReportName.Equals("Headwise Consolidation"))
                            {

                                <table id="@identi-outertable" class="table table-responsive table-hover">

                                    <thead>
                                        
                                        <tr>
                                            <th></th>
                                            <th class="w-5">
                                                SubGroupNumber
                                            </th>
                                            <th class="w-5">
                                                SubGroupName
                                            </th>
                                            <th class="CurrentBudgetEstimates w-20">

                                            </th>
                                            <th class="PreviousActualBudget w-20">

                                            </th>
                                            <th class="PreviousHalfYearActualBudget w-20">

                                            </th>
                                            <th class="CurrentYearRevisedEstimates w-20">

                                            </th>

                                            <th class="BudgetEstimatesNextYear w-20">

                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody>

                                        @foreach (var Subs in Model.SubGroupss.Where(d => d.GroupNo.Equals(@item.GroupNo)))
                                        {
                                            //var BudEstCurrFinSum = (from a in Model.Detailss
                                            //                     join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                            //                     where (b.DivisionType.Equals(SelectedDivisionTypeName) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo)))
                                            //                     select a.BudEstCurrFin).Sum();
                                            var BudEstCurrFinSum = (from a in Model.Detailss
                                                                    where (a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                    select a.BudEstCurrFin).Sum();
                                            //var ActPrevFinSum = (from a in Model.Detailss
                                            //                     join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                            //                     where (b.DivisionType.Equals(SelectedDivisionTypeName) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo)))
                                            //                     select a.ActPrevFin).Sum();
                                            var ActPrevFinSum = (from a in Model.Detailss
                                                                 where (a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                 select a.ActPrevFin).Sum();
                                            //var ActCurrFinTill2ndQuartSum = (from a in Model.Detailss
                                            //                                 join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                            //                                 where (b.DivisionType.Equals(SelectedDivisionTypeName) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo)))
                                            //                                 select a.ActCurrFinTill2ndQuart).Sum();
                                            var ActCurrFinTill2ndQuartSum = (from a in Model.Detailss
                                                                             where (a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                             select a.ActCurrFinTill2ndQuart).Sum();
                                            //var RevEstCurrFinSum = (from a in Model.Detailss
                                            //                        join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                            //                        where (b.DivisionType.Equals(SelectedDivisionTypeName) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo)))
                                            //                        select a.ACAndBWPropRECurrFin).Sum();
                                            var RevEstCurrFinSum = (from a in Model.Detailss
                                                                    where (a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                    select a.ACAndBWPropRECurrFin).Sum();
                                            //var BudgEstNexFinSum = (from a in Model.Detailss
                                            //                        join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                            //                        where (b.DivisionType.Equals(SelectedDivisionTypeName) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo)))
                                            //                        select a.ACAndBWPropRENxtFin).Sum();
                                            var BudgEstNexFinSum = (from a in Model.Detailss
                                                                    where (a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                    select a.ACAndBWPropRENxtFin).Sum();

                                            var name1 = String.Concat("BudEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                            var name2 = String.Concat("ActPrevFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                            var name3 = String.Concat("ActCurrFinTillsecondQuart", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                            var name4 = String.Concat("RevEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                            var name7 = String.Concat("BudgEstNexFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);

                                            var LedgerCount = (from a in Model.Ledgerss where a.SubGroupNo.Equals(@Subs.SubGroupNo) select a.LedgerNo).Count();

                                            <tr>
                                                <td>
                                                    @if (LedgerCount > 0)
                                                    {
                                                        <img src="~/Images/plus.png" />
                                                        <div id="NestedTable" style="display:none">
                                                            @if (@Subs.RequireInput)
                                                            {
                                                                <table class="table ChildGrid">
                                                                    @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                                                                    {
                                                                        var BudEstCurrFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.BudEstCurrFin).Sum();
                                                                        var ActPrevFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ActPrevFin).Sum();
                                                                        var ActCurrFinTill2ndQuartLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ActCurrFinTill2ndQuart).Sum();
                                                                        var RevEstCurrFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ACAndBWPropRECurrFin).Sum();
                                                                        var BudgEstNexFinLedgerSum = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.ACAndBWPropRENxtFin).Sum();


                                                                        <tr>
                                                                            <td>
                                                                                @Ledgers.LedgerNo
                                                                            </td>
                                                                            <td>@Ledgers.LedgerName</td>
                                                                            <td>
                                                                                @Html.Label("BudEstCurrFinLedgerHeadwiseConsolidation" ,BudEstCurrFinLedgerSum!=null ? Convert.ToDecimal(BudEstCurrFinLedgerSum).ToString("F") : "-")
                                                                            </td>
                                                                            <td>
                                                                                @Html.Label("ActPrevFinLedgerHeadwiseConsolidation" ,ActPrevFinLedgerSum!=null ? Convert.ToDecimal(ActPrevFinLedgerSum).ToString("F") : "-")
                                                                            </td>
                                                                            <td>
                                                                                @Html.Label("ActCurrFinTill2ndQuartLedgerHeadwiseConsolidation" ,ActCurrFinTill2ndQuartLedgerSum!=null ? Convert.ToDecimal(ActCurrFinTill2ndQuartLedgerSum).ToString("F") : "-")
                                                                            </td>
                                                                            <td>
                                                                                @Html.Label("RevEstCurrFinLedgerHeadwiseConsolidation" ,RevEstCurrFinLedgerSum!=null ? Convert.ToDecimal(RevEstCurrFinLedgerSum).ToString("F") : "-")
                                                                            </td>
                                                                            <td>
                                                                                @Html.Label("BudgEstNexFinLedgerHeadwiseConsolidation" ,BudgEstNexFinLedgerSum!=null ? Convert.ToDecimal(BudgEstNexFinLedgerSum).ToString("F") : "-")
                                                                            </td>
                                                                        </tr>
                                                                    }
                                                                </table>

                                                            }
                                                            else
                                                            {
                                                                <table class="table ChildGrid">
                                                                    @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                                                                    {
                                                                        <tr>
                                                                            <td>
                                                                                @Ledgers.LedgerNo
                                                                            </td>
                                                                            <td>@Ledgers.LedgerName</td>
                                                                        </tr>
                                                                    }
                                                                </table>
                                                            }
                                                        </div>

                                                    }
                                                </td>
                                                <td>
                                                    @Subs.SubGroupNo
                                                </td>
                                                <td>
                                                    @Subs.subGroupName
                                                </td>
                                                <td>
                                                    @Html.Label("BudEstCurrFinHeadwiseConsolidation" ,BudEstCurrFinSum!=null ? Convert.ToDecimal(BudEstCurrFinSum).ToString("F") : "-")
                                                </td>
                                                <td>
                                                    @Html.Label("ActPrevFinHeadwiseConsolidation" ,ActPrevFinSum!=null ? Convert.ToDecimal(ActPrevFinSum).ToString("F") : "-")
                                                </td>
                                                <td>
                                                    @Html.Label("ActCurrFinTill2ndQuartHeadwiseConsolidation" ,ActCurrFinTill2ndQuartSum!=null ? Convert.ToDecimal(ActCurrFinTill2ndQuartSum).ToString("F") : "-")
                                                </td>
                                                <td>
                                                    @Html.Label("RevEstCurrFinHeadwiseConsolidation" ,RevEstCurrFinSum!=null ? Convert.ToDecimal(RevEstCurrFinSum).ToString("F") : "-")
                                                </td>
                                                <td>
                                                    @Html.Label("BudgEstNexFinHeadwiseConsolidation" ,BudgEstNexFinSum!=null ? Convert.ToDecimal(BudgEstNexFinSum).ToString("F") : "-")
                                                </td>

                                            </tr>


                                            TableCount++;
                                        }
                                        <tr>
                                            <td>
                                            </td>
                                            <td>
                                                Total
                                            </td>
                                            <td>
                                                Total
                                            </td>

                                            <td id="@Sumname1-Total">
                                                @SumBudEstCurrFin.ToString("F")
                                            </td>
                                            <td id="@Sumname2-Total">
                                                @SumActPrevFin.ToString("F")
                                            </td>
                                            <td id="@Sumname3-Total">
                                                @SumActCurrFinTill2ndQuart.ToString("F")
                                            </td>
                                            <td id="@Sumname4-Total">
                                                @SumRevEstCurrFin.ToString("F")
                                            </td>

                                            <td id="@Sumname7-Total">
                                                @SumBudgEstNexFin.ToString("F")
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                                       <div class="breakhere "></div>
            
                            }
                            else
                            {
                                <table id="@identi-outertable" class="table table-responsive table-hover">

                                    <thead>
                                        <!--<tr class="text-center" style="color:chocolate;border-bottom:hidden;"><th colspan="100">CENTRAL BOARD OF SECONDARY EDUCATION</th></tr>
                                        <tr class="text-center" style="color:chocolate;border-bottom:hidden;">
                                            <th colspan="100">Shiksha Kendra 2, Community Centre, Preet Vihar, Delhi - 110 092</th>
                                        </tr>
                                        <tr class="text-center" style="color:green;border-bottom:hidden;">
                                            <th colspan="100"> Consolidated @Report</th>
                                        </tr>
                                        <tr class="text-center" style="color:red;border-bottom:hidden;">
                                            <th colspan="100">*(FIGURES IN CRORES)</th>
                                        </tr> -->
                                        <tr>
                                            <th></th>
                                            <th>
                                                SubGroupNumber
                                            </th>
                                            <th>
                                                SubGroupName
                                            </th>
                                            <th>
                                                @Report
                                            </th>

                                            @foreach (var Regions in Model.Divisionss.Where(d => d.DivisionType.Equals(SelectedDivisionTypeName)))
                                            {
                                                <th>
                                                    @Html.Label("RegionDivisionNames-"+Regions.DivisionID, Regions.DivisionName)
                                                </th>
                                            }

                                        </tr>
                                    </thead>
                                    <tbody>

                                        @foreach (var Subs in Model.SubGroupss.Where(d => d.GroupNo.Equals(@item.GroupNo)))
                                        {
                                            var details = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a).FirstOrDefault();
                                            //var SelectedAcademicYear = (from a in Model.AcademicYears where a.Selected == true select a.Text).FirstOrDefault();
                                            //var SplitAcademicYear = SelectedAcademicYear.Split("-");
                                            //var NextAcademicYear = SplitAcademicYear[1]+"-"+(Convert.ToInt32(SplitAcademicYear[1])+Convert.ToInt32(1));
                                            var SumSubGroupReport = 0.00;

                                            if (ReportName != null && ReportName.Equals("Actual"))
                                            {
                                                //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActPrevFin).Sum();
                                                SumSubGroupReport = (Double)(from a in Model.Detailss
                                                                             join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                             where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                             select a.ActPrevFin).Sum();

                                            }
                                            else if (ReportName != null && ReportName.Equals("Actual Half Year"))
                                            {
                                                //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActCurrFinTill2ndQuart).Sum();
                                                SumSubGroupReport = (Double)(from a in Model.Detailss
                                                                             join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                             where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                             select a.ActCurrFinTill2ndQuart).Sum();
                                            }
                                            else if (ReportName != null && ReportName.Equals("Revised Estimates"))
                                            {
                                                //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRECurrFin).Sum();
                                                SumSubGroupReport = (Double)(from a in Model.Detailss
                                                                             join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                             where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                             select a.ACAndBWPropRECurrFin).Sum();
                                            }
                                            else if (ReportName != null && ReportName.Equals("Budget Estimates " + @NextAcademicYear))
                                            {
                                                //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRENxtFin).Sum();
                                                SumSubGroupReport = (Double)(from a in Model.Detailss
                                                                             join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                                                             where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                                                             select a.ACAndBWPropRENxtFin).Sum();
                                            }
                                            /* else if (ReportName.Equals("Budget Estimates "+@SelectedAcademicYear))
                                            {
                                            //SumSubGroupReport = (Double)(from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRENxtFin).Sum();
                                            SumSubGroupReport = (Double)(from a in Model.Detailss
                                            join b in Model.Divisionss on a.DivisionID equals b.DivisionID
                                            where (b.DivisionType.Equals(SelectedDivisionTypeName) && a.SubGroupNumber.Equals(@Subs.SubGroupNo))
                                            select a.BudEstCurrFin).Sum();
                                            }*/
                                            var LedgerCount = (from a in Model.Ledgerss where a.SubGroupNo.Equals(@Subs.SubGroupNo) select a.LedgerNo).Count();

                                            <tr>
                                                <td class="w-20">
                                                    @if (LedgerCount > 0)
                                                    {
                                                        <img src="~/Images/plus.png" />
                                                        <div id="NestedTable" style="display:none">
                                                            <table class="table ChildGrid">
                                                                <tr>
                                                                    <th>Ledger Number</th>
                                                                    <th>Ledger Name</th>
                                                                </tr>
                                                                @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                                                                {
                                                                    <tr>
                                                                        <td class="w-20">@Ledgers.LedgerNo</td>
                                                                        <td class="w-20">@Ledgers.LedgerName</td>
                                                                    </tr>
                                                                }
                                                            </table>
                                                        </div>
                                                    }
                                                </td>
                                                <td class="w-20">
                                                    @Subs.SubGroupNo
                                                </td>
                                                <td class="w-20">
                                                    @Subs.subGroupName
                                                </td>
                                                <td class="w-20">
                                                    @Html.Label("SumSubGroupReport"+@Subs.SubGroupNo,@SumSubGroupReport!=0.00 ? @SumSubGroupReport.ToString("F") : "-")
                                                </td>
                                                @foreach (var Regions in Model.Divisionss.Where(d => d.DivisionType.Equals(SelectedDivisionTypeName)))
                                                {
                                                    var result = (from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a).FirstOrDefault();

                                                    if (ReportName != null && ReportName.Equals("Actual"))
                                                    {

                                                        if (Subs.RequireInput)
                                                        {
                                                            var LedgersSum = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a.ActPrevFin).Sum();
                                                            <td align="right" class="w-20">
                                                                @Html.Label("Actual" + Regions.DivisionName,@LedgersSum!= 0.00 ? Convert.ToDecimal(LedgersSum).ToString("F") : "-")
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td align="right" class="w-20">
                                                                @Html.Label("Actual" + Regions.DivisionName,result!=null ? Convert.ToDecimal(result.ActPrevFin).ToString("F") : "-")
                                                            </td>
                                                        }
                                                    }
                                                    else if (ReportName != null && ReportName.Equals("Actual Half Year"))
                                                    {
                                                        if (Subs.RequireInput)
                                                        {
                                                            var LedgersSum = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a.ActCurrFinTill2ndQuart).Sum();

                                                            <td align="right" class="w-20">
                                                                @Html.Label("Actual Half Year" + Regions.DivisionName, LedgersSum!=0.00 ? Convert.ToDecimal(LedgersSum).ToString("F") : "-")
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td align="right" class="w-20">
                                                                @Html.Label("Actual Half Year" + Regions.DivisionName, result!=null ? Convert.ToDecimal(result.ActCurrFinTill2ndQuart).ToString("F") : "-")
                                                            </td>
                                                        }
                                                    }
                                                    else if (ReportName != null && ReportName.Equals("Revised Estimates"))
                                                    {
                                                        if (Subs.RequireInput)
                                                        {
                                                            var LedgersSum = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a.ACAndBWPropRECurrFin).Sum();

                                                            <td align="right" class="w-20">
                                                                @Html.Label("Revised Estimates" + Regions.DivisionName, LedgersSum!=0.00 ? Convert.ToDecimal(LedgersSum).ToString("F") : "-")
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td align="right" class="w-20">
                                                                @Html.Label("Revised Estimates" + Regions.DivisionName, result!=null ? Convert.ToDecimal(result.ACAndBWPropRECurrFin).ToString("F") : "-")
                                                            </td>
                                                        }
                                                    }
                                                    else if (ReportName != null && ReportName.Equals("Budget Estimates " + @NextAcademicYear))
                                                    {
                                                        if (Subs.RequireInput)
                                                        {
                                                            var LedgersSum = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a.ACAndBWPropRENxtFin).Sum();

                                                            <td align="right" class="w-20">
                                                                @Html.Label("Budget Estimates" +@NextAcademicYear+ Regions.DivisionName, LedgersSum!=0.00 ? Convert.ToDecimal(LedgersSum).ToString("F") : "-")
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td align="right" class="w-20">
                                                                @Html.Label("Budget Estimates"+@NextAcademicYear+ Regions.DivisionName, result!=null ? Convert.ToDecimal(result.ACAndBWPropRENxtFin).ToString("F") : "-")
                                                            </td>
                                                        }
                                                    }
                                                    /*else if (ReportName.Equals("Budget Estimates "+@SelectedAcademicYear))
                                                    {
                                                    if(Subs.RequireInput)
                                                    {
                                                    var LedgersSum = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (a.SubGroupNumber.Equals(@Subs.SubGroupNo))) select a.BudEstCurrFin).Sum();

                                                    <td align="right" class="w-20">
                                                    @Html.Label("Budget Estimates "+@SelectedAcademicYear+ Regions.DivisionName, LedgersSum!=0.00 ? Convert.ToDecimal(LedgersSum).ToString("F") : "-")
                                                    </td>
                                                    }
                                                    else
                                                    {
                                                    <td align="right" class="w-20">
                                                    @Html.Label("Budget Estimates "+@SelectedAcademicYear+ Regions.DivisionName, result!=null ? Convert.ToDecimal(result.BudEstCurrFin).ToString("F") : "-")
                                                    </td>
                                                    }
                                                    }*/
                                                }
                                            </tr>

                                            TableCount++;
                                        }
                                        <tr>
                                            <td>
                                            </td>
                                            <td>
                                                Total
                                            </td>
                                            <td>
                                                Total
                                            </td>

                                            <td>
                                                @Html.Label("SumGroupReport"+@item.GroupNo,@SumGroupReport!=0.00 ? @SumGroupReport.ToString("F") : "-")
                                            </td>
                                            @foreach (var Regions in Model.Divisionss.Where(d => d.DivisionType.Equals(SelectedDivisionTypeName)))
                                            {
                                                if (ReportName != null && ReportName.Equals("Actual"))
                                                {
                                                    var result = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (item.GroupNo.Equals(a.GroupNumber))) select a.ActPrevFin).Sum();
                                                    <td align="right" class="w-20">
                                                        @Html.Label("ActualSum" + Regions.DivisionName,result!=0.00 ? Convert.ToDecimal(result).ToString("F") : "-")
                                                    </td>
                                                }
                                                else if (ReportName != null && ReportName.Equals("Actual Half Year"))
                                                {
                                                    var result = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (item.GroupNo.Equals(a.GroupNumber))) select a.ActCurrFinTill2ndQuart).Sum();
                                                    <td align="right" class="w-20">
                                                        @Html.Label("Actual Half Year Sum" + Regions.DivisionName, result!=0.00 ? Convert.ToDecimal(result).ToString("F") : "-")
                                                    </td>
                                                }
                                                else if (ReportName != null && ReportName.Equals("Revised Estimates"))
                                                {
                                                    var result = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (item.GroupNo.Equals(a.GroupNumber))) select a.ACAndBWPropRECurrFin).Sum();
                                                    <td align="right" class="w-20">
                                                        @Html.Label("Revised Estimates Sum" + Regions.DivisionName, result!=0.00 ? Convert.ToDecimal(result).ToString("F") : "-")

                                                    </td>
                                                }
                                                else if (ReportName != null && ReportName.Equals("Budget Estimates " + @NextAcademicYear))
                                                {
                                                    var result = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (item.GroupNo.Equals(a.GroupNumber))) select a.ACAndBWPropRENxtFin).Sum();
                                                    <td align="right" class="w-20">
                                                        @Html.Label("Budget Estimates Sum "+@NextAcademicYear+ Regions.DivisionName, result!=0.00 ? Convert.ToDecimal(result).ToString("F") : "-")
                                                    </td>
                                                }
                                                /*  else if (ReportName.Equals("Budget Estimates "+@SelectedAcademicYear))
                                                {
                                                var result = (Double)(from a in Model.Detailss where ((a.DivisionID == Regions.DivisionID) && (item.GroupNo.Equals(a.GroupNumber))) select a.BudEstCurrFin).Sum();
                                                <td align="right" class="w-20">
                                                @Html.Label("Budget Estimates Sum "+@SelectedAcademicYear+ Regions.DivisionName, result!=0.00 ? Convert.ToDecimal(result).ToString("F") : "-")
                                                </td>
                                                } */
                                            }
                                        </tr>
                                    </tbody>
                                </table>
                                 <div class="breakhere "></div>
                            }
                        

                   
                    
                    CounterBody++;
                }


    OuterBodyCount++;
}
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script src="~/js/nestedtable.js"></script>
@section Scripts
{
    <script type="text/javascript">

        $(document).ready(
            function () {
                onceDocReady();
                 });
    function onceDocReady() {
        $("#SelectedAcademicYear").val($("#AcademicYear option:selected").text().trim());
        //alert($("#SelectedAcademicYear").val());
        $("#SelectedDivisionTypeName").val($("#DivisionType option:selected").text().trim());
        //alert($("#SelectedDivisionTypeName").val());
        $("#SelectedReportName").val($("#Reports option:selected").text().trim());
        //alert($("#SelectedReportName").val());

        var academicyear = $("#SelectedAcademicYear").val();
        var DivisionTypeName = $("#SelectedDivisionTypeName").val();
        //alert(DivisionTypeName);
        var ReportName = $("#SelectedReportName").val();
        var year = academicyear.split('-');
        //alert(year[1]);

        $(".CurrentBudgetEstimates").text('Budget Estimates ' + $("#SelectedAcademicYear").val());
        $(".PreviousActualBudget").text('Actual ' + (Number.parseInt(year[0]) - Number.parseInt(1)) + '-' + Number.parseInt(year[0]));
        $(".PreviousHalfYearActualBudget").text('Actual upto 30.09.' + Number.parseInt(year[0]));
        $(".CurrentYearRevisedEstimates").text('Revised Estimates ' + $("#SelectedAcademicYear").val());
        $(".BudgetEstimatesNextYear").text('Budget Estimates ' + Number.parseInt(year[1]) + '-' + (Number.parseInt(year[1]) + Number.parseInt(1)));

    }
    </script>
}
<style>
    thead {
        display: table-row-group;
    }
</style>