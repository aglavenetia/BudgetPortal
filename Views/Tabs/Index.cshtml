@model BudgetPortal.ViewModel.MultipleData
@using System.Web;

@using BudgetPortal.Entities;
@using Microsoft.AspNetCore.Mvc;

@using Microsoft.AspNetCore.Identity;
@using BudgetPortal.Data;

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "View";
    int OuterHeaderCount = 0;
    int OuterBodyCount = 0;
    int CountHeader = 0;
    int CounterBody = 0;


    Model.SubGroupNameOrLedgerName = new List<String>();
    Model.BudEstCurrFin = new List<Decimal>();
    Model.InterimRevEst = new List<Decimal>();
    Model.ProvisionalRevEst = new List<Decimal>();
    Model.ActPrevFin = new List<Decimal>();
    Model.ActCurrFinTillsecondQuart = new List<Decimal>();
    Model.RevEstCurrFin = new List<Decimal>();
    Model.PerVarRevEstOverBudgEstCurrFin = new List<String>();
    Model.ACAndBWPropRECurrFin = new List<Decimal>();
    Model.PerVarACBWRevEstOverBudgEstCurrFin = new List<String>();
    Model.DelegateJustificationRevEst = new List<String>();
    Model.ACBWJustificationRevEst = new List<String>();
    Model.BudgEstNexFin = new List<Decimal>();
    Model.PerVarRevEstOverBudgEstNxtFin = new List<String>();
    Model.ACAndBWPropRENxtFin = new List<Decimal>();
    Model.PerVarACBWRevEstOverBudgEstNxtFin = new List<String>();
    Model.Justification = new List<String>();
    Model.ACBWJustificationBudgEstNxtFin = new List<String>();
    
    //Model.File = new List<IFormFile>();

    Boolean AdminEditStatus = false ;
    Boolean DelegateEditStatus = false;

    Boolean IsDelegateSaved = false;
    Boolean IsAdminSaved = false;

    Boolean FinalAdminEditStatus = (from a in Model.Statuss where (a.SectionNumber == 0 && a.GroupNumber.Equals("0")) select a.AdminEditStatus).FirstOrDefault();
    //Model.Detailss = new List<BudgetDetails>();
    
    int FinalAdminEditCount =  (from a in Model.Statuss where (a.SectionNumber == 0 && a.GroupNumber.Equals("0")) select a.AdminEditStatus).Count();

    Boolean ACBWSubmissionStatus = (from a in Model.Statuss where (a.SectionNumber == 0 && a.GroupNumber.Equals("0")) select a.ACBWSubmission).FirstOrDefault();

    Boolean ChairpersonApprovalStatus = (from a in Model.Statuss where (a.SectionNumber == 0 && a.GroupNumber.Equals("0")) select a.ChairpersonApproval).FirstOrDefault();

    Boolean FinancialCommiteeApprovalStatus = (from a in Model.Statuss where (a.SectionNumber == 0 && a.GroupNumber.Equals("0")) select a.FinCommitteeApproval).FirstOrDefault();

    Boolean GenBodyApprovalStatus = (from a in Model.Statuss where (a.SectionNumber == 0 && a.GroupNumber.Equals("0")) select a.GenBodyApproval).FirstOrDefault();
    
}
<br />

 <div id="outerdiv" style="font-family:Cambria">
     <div style="justify-content:center;font-style:oblique;" class="text-success">@Model.ApprovedMessage</div>
    <div style="justify-content:center;font-style:oblique;" class="text-danger">@Model.WaitingForApprovalMessage</div>
    @*Html.ValidationMessage("BudgetStatus",null,new {@class = "text-success", @style="font-size: 1.5em;font-style: bold;"})*@

    @using (Html.BeginForm(null, null, FormMethod.Post, new { @action = "", enctype = "multipart/form-data", id = "AppForm"}))
    {
        @Html.AntiForgeryToken()
      <div style = "float:right">

            
           
        <table border="0" cellpadding="5" cellspacing="0" >
          <tr>
                  @if (User.IsInRole("Admin"))
                 {
                    <td>
                        @Html.LabelFor(Model => Model.SelectedDivisionID)                       
                    </td> 
                 }     
                    <td>
                        @Html.LabelFor(Model => Model.SelectedAcademicYearID)
                    </td>
          </tr>
          <tr>
           @if (User.IsInRole("Admin"))
           {
             <td>
                   @Html.DropDownListFor(Model => Model.SelectedDivisionID, Model.DivisionNames,"--Please select any Division--", new { @class = "form-control", @id="Division" })
                   @Html.ValidationMessageFor(Model => Model.SelectedDivisionID,null, new { @class = "text-danger" })
                        
             </td> 
           }       
             <td>
                 @Html.DropDownListFor(Model => Model.SelectedAcademicYearID, Model.AcademicYears,"--Please select any Academic Year--",new { @class = "form-control", @id="AcademicYear" })
                 @Html.ValidationMessageFor(Model => Model.SelectedAcademicYearID,null, new { @class = "text-danger" }) 
              
             </td>
                
          </tr>
        </table>
        
    </div>

    @*Html.ValidationSummary(false, "", new { @class = "text-danger" })*@
      <br />
      <br />
      <br />
      <br />
       <div>
       <table>
       <tr>

        @if (User.IsInRole("Admin") && FinancialCommiteeApprovalStatus && !GenBodyApprovalStatus)
        {
            <td>
            <input id="FinalSubmit" class="FinalSubmit" formaction="~/Tabs/FinalSubmit" value="Publish Budget" type="submit" style="align-self:center"/>
            @*Html.Hidden("SelectedAcademicYear", Model.SelectedAcademicYear,  new{@id = "FinalSubmit-SelectedAcademicYear" })
            @Html.Hidden("SelectedDivisionName",Model.SelectedDivisionName,  new{@id = "FinalSubmit-SelectedDivisionName" })*@
            <br /><br/>
            </td>
        }
        else if (User.IsInRole("Admin") && ChairpersonApprovalStatus && !FinancialCommiteeApprovalStatus)
        {
            <td>
            <input id="SubmitGB" class="SubmitGB" formaction="~/Tabs/GeneralBodySubmission" value="Submit to General Body" type="submit" style="align-self:center"/>
            @*Html.Hidden("SelectedAcademicYear", Model.SelectedAcademicYear,  new{@id = "FinalSubmit-SelectedAcademicYear" })
            @Html.Hidden("SelectedDivisionName",Model.SelectedDivisionName,  new{@id = "FinalSubmit-SelectedDivisionName" })*@
            </td>
            <br /><br/>
        }
        else if (User.IsInRole("Admin") && ACBWSubmissionStatus && !ChairpersonApprovalStatus)
        {
       <td>
        
            <input id="SubmitFinCommitee" class="FinCommitee" formaction="~/Tabs/FinancialCommiteeSubmission" value="Submit to Financial Comittee" type="submit" style="align-self:center"/>
            @*Html.Hidden("SelectedAcademicYear", Model.SelectedAcademicYear,  new{@id = "FinalSubmit-SelectedAcademicYear" })
            @Html.Hidden("SelectedDivisionName",Model.SelectedDivisionName,  new{@id = "FinalSubmit-SelectedDivisionName" })*@
            <br /><br/>
        </td>
        }
        
        
        
        
        
        
        
        </tr>
        </table>
        </div>
        

    <ul id="outerTab" class="nav nav-pills" role="tablist" >    
      @foreach (var item in Model.Sectionss)
      {
            var inneridenti = String.Concat("Budget", @item.SectionNo.ToString());

        if (OuterHeaderCount == 0)
        {
                <li class="nav-item" role="presentation">
                <button class="nav-link active" id="@inneridenti-nav" data-bs-toggle="tab" data-bs-target="#@inneridenti" type="button" role="tab" aria-controls="@inneridenti" aria-selected="true">@item.SectionName</button>
                </li>
        }
        else
        {
            
            <li class="nav-item" role="presentation">
                    <button class="nav-link" id="@inneridenti-nav"  data-bs-toggle="tab" data-bs-target="#@inneridenti" type="button" role="tab" aria-controls="@inneridenti" aria-selected="false">@item.SectionName</button>
            </li>
        }

        OuterHeaderCount++;
      }
    </ul>

    <div id="outerTabContent" class="tab-content">
       <br />  
       @Html.Hidden("SectionName",Model.SectionName, new{@id = "SectionName" })
       @Html.Hidden("GroupName",Model.GroupName,  new{@id = "GroupName" })
       @Html.Hidden("HeaderName",Model.HeaderName, new{@id = "HeaderName" })
       @Html.Hidden("GroupName",Model.GroupName,  new{@id = "GroupName" })
       @Html.Hidden("SubGroupLedgerName",Model.SubGroupLedgerName,  new{@id = "SubGroupLedgerName" })
       
       @Html.Hidden("SelectedAcademicYear", Model.SelectedAcademicYear,  new{@id = "SelectedAcademicYear" })
       @Html.Hidden("SelectedDivisionName",Model.SelectedDivisionName,  new{@id = "SelectedDivisionName" })
       @Html.Hidden("EditEnabled",Model.EditEnabled,  new{@id = "EditEnabled" })

       @foreach (var inner in Model.Sectionss)
       {
           var GroupsStatRowCount = (from a in Model.Statuss where (a.SectionNumber == @inner.SectionNo) select a.DelegateEditStatus).Count();

           var inneridenti = String.Concat("Budget", @inner.SectionNo.ToString());

           CountHeader = 0;
           CounterBody = 0;
           int Count = 0;
           int LedgerNo = 0;

            var SectionSumBudEstCurrFin = (from a in Model.Approved where a.SectionNumber.Equals(@inner.SectionNo) select a.BudEstNextFin).Sum();
            var SectionSumActPrevFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.ActPrevFin).Sum();
            var SectionSumActCurrFinTill2ndQuart = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.ActCurrFinTill2ndQuart).Sum();
            var SectionSumRevEstCurrFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.RevEstCurrFin).Sum();
            var SectionSumACAndBWPropRECurrFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.ACAndBWPropRECurrFin).Sum();
            var SectionSumBudgEstNexFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.BudgEstNexFin).Sum();
            var SectionSumACAndBWPropRENxtFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.ACAndBWPropRENxtFin).Sum();
            var SectionSumPerVarRevEstOverBudgEstCurrFin = 0.00;
            var SectionSumPerVarRevEstOverBudgEstNxtFin = 0.00;

            @if(Model.IsEnabled.Equals(true) && GroupsStatRowCount > 0 )
            {
                SectionSumPerVarRevEstOverBudgEstCurrFin = Convert.ToInt32(Convert.ToDecimal((SectionSumRevEstCurrFin - SectionSumBudEstCurrFin) / SectionSumBudEstCurrFin)*100);
                SectionSumPerVarRevEstOverBudgEstNxtFin = Convert.ToInt32(Convert.ToDecimal((SectionSumBudgEstNexFin - SectionSumRevEstCurrFin) / SectionSumRevEstCurrFin) * 100);
            }
            else
            {
                 SectionSumPerVarRevEstOverBudgEstCurrFin = Convert.ToDouble(0.00);
                 SectionSumPerVarRevEstOverBudgEstNxtFin = Convert.ToDouble(0.00);
            }
            var GroupsCount = (from a in Model.Groupss where a.SectionNo.Equals(@inner.SectionNo) select a.GroupNo).Count();

            @* Boolean AdminEditStatus = false; *@

           if (OuterBodyCount == 0)
           {

                
            <div id="@inneridenti" class="tab-pane fade show active" role="tabpanel" aria-labelledby="@inneridenti-tab" aria-selected="true" style="width: 1750px;">
              
              @*if(GroupsCount > 0)
              {
                 <table id="@inneridenti-Totaltable" class="table">
                      <thead>
                                    <tr class="text-center">
                                        <th colspan="100" style="color:darkcyan;border-bottom:hidden;">@inner.SectionName Section-Total</th>
                                    </tr>
                                    <tr class="text-center">
                                        <th colspan="100" style="color:red;border-bottom:hidden;">(*FIGURES IN CRORES)</th>
                                    </tr>
                                    <tr>
                                            <th>
                                                
                                            </th>
                                            <th class="CurrentBudgetEstimates w-10"  >
                                                        
                                            </th>
                                            <th class="PreviousActualBudget w-10">
                                                
                                            </th>
                                            <th class="PreviousHalfYearActualBudget w-10">
                                                
                                            </th>
                                            <th class="CurrentYearRevisedEstimates w-10">
                                                
                                            </th>
                                            <th class="VariationInRevisedEstimates w-10">
                                                        
                                            </th>
                                            @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                             {
                                               <th class="ACBWProposalForRevisedEstimates w-10">
                                                  
                                               </th>
                                             }
                                            <th class="BudgetEstimatesNextYear w-10">
                                                
                                            </th>
                                            <th class="VariationInBudgetEstimates w-10">
                                                
                                            </th>
                                        @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                             {
                                               <th class="ACBWProposalForBudgetEstimates w-10">
                                                   
                                                </th>
                                             }
                                           
                                        </tr>
                      </thead>
                      <tbody>
                                                <tr style="border-bottom : hidden;">
                                                    <td>
                                                      @inner.SectionNo @inner.SectionName-Total
                                                    </td>

                                                    <td id="SumBudEstCurrFin">
                                                        @SectionSumBudEstCurrFin.ToString("F4")
                                                    </td>
                                                    <td id="SumActPrevFin">
                                                        @SectionSumActPrevFin.ToString("F4")
                                                    </td>
                                                    <td id="SumActCurrFinTillsecondQuart">
                                                        @SectionSumActCurrFinTill2ndQuart.ToString("F4")
                                                    </td>
                                                    <td id="SumRevEstCurrFin">
                                                       @SectionSumRevEstCurrFin.ToString("F4")
                                                    </td>
                                                    <td id="SumPerVarRevEstOverBudgEstCurrFin">
                                                        @SectionSumPerVarRevEstOverBudgEstCurrFin
                                                    </td>
                                                    @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                    {
                                                        <td id="SumACAndBWPropRECurrFin">
                                                            @SectionSumACAndBWPropRECurrFin.ToString("F4")
                                                        </td>
                                                    }
                                                    <td id="SumBudgEstNexFin">
                                                        @SectionSumBudgEstNexFin.ToString("F4")
                                                    </td>
                                                    <td id="SumPerVarRevEstOverBudgEstNxtFin">
                                                       @SectionSumPerVarRevEstOverBudgEstNxtFin
                                                    </td>
                                                    @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                    {
                                                        <td id="SumACAndBWPropRENxtFin">
                                                            @SectionSumACAndBWPropRENxtFin.ToString("F4")
                                                        </td>
                                                    }
                                                </tr>
                                    </tbody>
                </table>
              }*@

                   <ul id="innertab1" class="nav nav-pills nav-justified" role="tablist">
                    @foreach (var item in Model.Groupss.Where(d => d.SectionNo == @inner.SectionNo))
                    {                           
                        var identi = String.Concat("Budget", Convert.ToInt32((Convert.ToDecimal(@item.GroupNo) * 10)).ToString());
                        
                        if (CountHeader == 0)
                        {
                            <li class="nav-item" role="presentation">
                                        <button class="nav-link active" id="@identi-nav" data-bs-toggle="tab" data-bs-target="#@identi" type="button" role="tab" aria-controls="@identi" aria-selected="true">@item.GroupName</button>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item" role="presentation">
                                        <button class="nav-link" id="@identi-nav" data-bs-toggle="tab" data-bs-target="#@identi" type="button" role="tab" aria-controls="@identi" aria-selected="false">@item.GroupName</button>
                            </li>
                        }

                        CountHeader++;
                    }
                </ul>

                <div id="innertabcontent1" class="tab-content">
                    <br />

                    @foreach (var item in Model.Groupss.Where(d => d.SectionNo == @inner.SectionNo))
                    {
                       var GroupsStatusRowCount = (from a in Model.Statuss where (a.SectionNumber == @inner.SectionNo && a.GroupNumber.Equals(@item.GroupNo)) select a.DelegateEditStatus).Count();
                       var AdminStatus = (from a in Model.Statuss where (a.SectionNumber == @inner.SectionNo && a.GroupNumber.Equals(@item.GroupNo)) select a.AdminEditStatus).FirstOrDefault();
                       var GenBodyAppStatus = (from a in Model.Statuss where (a.SectionNumber == 0 && a.GroupNumber.Equals("0")) select a.GenBodyApproval).FirstOrDefault();
                       
                       Boolean GroupACBWSubmissionStatus = (from a in Model.Statuss where (a.SectionNumber == @inner.SectionNo && a.GroupNumber.Equals(@item.GroupNo)) select a.ACBWSubmission).FirstOrDefault();
                       var IsSubmittedToChairman = (from a in Model.Statuss where (a.SectionNumber == 0 && a.GroupNumber.Equals("0")) select a.ACBWSubmission).Count();
                       
                       Boolean IsSubmittedToACBW = (from a in Model.Statuss where (a.SectionNumber.Equals(0) && a.GroupNumber.Equals("0")) select a.ACBWSubmission).FirstOrDefault();

                       var TotalSubGroups = (from b in Model.SubGroupss where b.GroupNo.Equals(@item.GroupNo) && b.RequireInput == false select b.SubGroupNo).Count();

                        if (GroupsStatusRowCount == 0 && Model.IsEnabled.Equals(true))
                        {
                                    DelegateEditStatus = true;
                                    AdminEditStatus = false;
                        }
                        else if (AdminStatus && Model.IsEnabled.Equals(true))
                        {
                                     DelegateEditStatus = false;
                                    AdminEditStatus = true;
                        }
                         else
                        {
                                    DelegateEditStatus = false;
                                    AdminEditStatus = false;
                        }
                        int TableCount = 0;
                        var SubmitACBW = String.Concat("SubmitACBW", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                        var SubmitChairPerson = String.Concat("SubmitChairPerson", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                        var identi = String.Concat("Budget", Convert.ToInt32((Convert.ToDecimal(@item.GroupNo) * 10)).ToString());
                        
                         var SumBudEstCurrFin = (from a in Model.Approved where a.GroupNumber.Equals(@item.GroupNo) select a.BudEstNextFin).Sum();
                         var SumActPrevFin = (from a in Model.Detailss where a.GroupNumber.Equals(@item.GroupNo) select a.ActPrevFin).Sum();
                         var SumActCurrFinTill2ndQuart = (from a in Model.Detailss where a.GroupNumber.Equals(@item.GroupNo) select a.ActCurrFinTill2ndQuart).Sum();
                         var SumRevEstCurrFin = (from a in Model.Detailss where a.GroupNumber.Equals(@item.GroupNo) select a.RevEstCurrFin).Sum();
                         var SumACAndBWPropRECurrFin = (from a in Model.Detailss where a.GroupNumber.Equals(@item.GroupNo) select a.ACAndBWPropRECurrFin).Sum();
                         var SumBudgEstNexFin = (from a in Model.Detailss where a.GroupNumber.Equals(@item.GroupNo) select a.BudgEstNexFin).Sum();
                         var SumACAndBWPropRENxtFin = (from a in Model.Detailss where a.GroupNumber.Equals(@item.GroupNo) select a.ACAndBWPropRENxtFin).Sum();
                         var SumPerVarRevEstOverBudgEstCurrFin = 0.00;
                         var SumPerVarRevEstOverBudgEstNxtFin = 0.00;
                         var SumPerVarACBWRevEstOverBudgEstCurrFin = 0.00;
                         var SumPerVarACBWRevEstOverBudgEstNxtFin = 0.00;

                         @if((User.IsInRole("Admin") && IsSubmittedToACBW) || (!User.IsInRole("Admin")))
                         {
                             SumPerVarRevEstOverBudgEstCurrFin = SumBudEstCurrFin != Convert.ToDecimal(0.00) ? Convert.ToInt32(Convert.ToDecimal((SumRevEstCurrFin - SumBudEstCurrFin) / SumBudEstCurrFin)*100) : Convert.ToInt32(0.00);
                             SumPerVarRevEstOverBudgEstNxtFin = SumRevEstCurrFin != Convert.ToDecimal(0.00) ? Convert.ToInt32(Convert.ToDecimal((SumBudgEstNexFin - SumRevEstCurrFin) / SumRevEstCurrFin)*100) : Convert.ToInt32(0);
                             SumPerVarACBWRevEstOverBudgEstCurrFin = SumBudEstCurrFin != Convert.ToDecimal(0.00) ? Convert.ToInt32(Convert.ToDecimal((SumACAndBWPropRECurrFin - SumBudEstCurrFin) / SumBudEstCurrFin)*100) : Convert.ToInt32(0);
                             SumPerVarACBWRevEstOverBudgEstNxtFin = SumACAndBWPropRECurrFin != Convert.ToDecimal(0.00) ? Convert.ToInt32(Convert.ToDecimal((SumACAndBWPropRENxtFin - SumACAndBWPropRECurrFin) / SumACAndBWPropRECurrFin)*100) : Convert.ToInt32(0);
                         }
                         else
                         {
                               SumPerVarRevEstOverBudgEstCurrFin = Convert.ToDouble(0.00);
                               SumPerVarRevEstOverBudgEstNxtFin = Convert.ToDouble(0.00);
                               SumPerVarACBWRevEstOverBudgEstCurrFin = Convert.ToDouble(0.00);
                               SumPerVarACBWRevEstOverBudgEstNxtFin = Convert.ToDouble(0.00);
                         }

                            var Sumname1 = String.Concat("BudEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname2 = String.Concat("ActPrevFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname3 = String.Concat("ActCurrFinTillsecondQuart", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname4 = String.Concat("RevEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname5 = String.Concat("PerVarRevEstOverBudgEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname6 = String.Concat("ACAndBWPropRECurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname7 = String.Concat("BudgEstNexFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname8 = String.Concat("PerVarRevEstOverBudgEstNxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname9 = String.Concat("ACAndBWPropRENxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname10 = String.Concat("Justification", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname11 = String.Concat("PerVarACBWRevEstOverBudgEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname12 = String.Concat("PerVarACBWRevEstOverBudgEstNxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);

                        if (CounterBody == 0)
                        {
                           
                                        
                            <div id="@identi" class="tab-pane fade show active" role="tabpanel" aria-labelledby="@identi-tab" style="width: 1750px;">

                                @if (!User.IsInRole("Admin") && AdminEditStatus && @Model.ApprovedMessage.Equals(" "))
                                {
                                   <div style="color:green"> * Budget proposal @Model.SelectedAcademicYear for <span style="color:red">'@item.GroupName'</span> has been submitted to AC&BW successfully </div>
                                }
                                else if(User.IsInRole("Admin") && GroupACBWSubmissionStatus && IsSubmittedToChairman == 0)
                                {
                                    <div style="color:green"> * Budget values for @Model.SelectedAcademicYear for <span style="color:red">'@item.GroupName'</span> has been saved successfully </div>
                                }
                                <div class="fw-bold text-center">
                                           <span colspan="23" style="color:red;border-bottom:hidden;">(*FIGURES IN CRORES)</span>
                                 </div>
                                <table id="@identi-outertable" class="table table-responsive table-bordered table-hover" style="width:2600px;" >
                                            <!--th></!--th-->
                                    <thead>
                                        
                                        <tr>
                                          @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                          {
                                                        <th colspan="3" class="align-text-middle" style="background-color:honeydew;position:sticky;top:0;">     </th>
                                           <th colspan="3" class="align-text-middle" style= "background-color: floralwhite;text-align:center;position:sticky;top:0;"> Interim Revision Sections </th>
                                           <th colspan="8" class="align-text-middle" style= "background-color: aliceblue;text-align:center;position:sticky;top:0;"> Revision Estimates Section of CY    </th>
                                           <th colspan="6" class="align-text-middle" style= "background-color:whitesmoke;text-align:center;position:sticky;top:0;">Budget Estimates Section of Next Year   </th>
                                           <th colspan="2" class="align-text-middle" style="background-color:honeydew;position:sticky;top:0;">     </th>
                                          }
                                          else
                                          {
                                              <th colspan="3" class="align-text-middle" style="background-color:honeydew;position:sticky;top:0;">     </th>
                                              <th colspan="3" class="align-text-middle" style= "background-color: floralwhite;text-align:center;position:sticky;top:0;"> Interim Revision Sections </th>
                                              <th colspan="5" class="align-text-middle" style= "background-color: aliceblue;text-align:center;position:sticky;top:0;"> Revision Estimates Section of CY    </th>
                                              <th colspan="3" class="align-text-middle" style= "background-color:whitesmoke;text-align:center;position:sticky;top:0;">Budget Estimates Section of Next Year   </th>
                                                        <th colspan="2" class="align-text-middle" style="background-color:honeydew;position:sticky;top:0;">     </th>
                                          }
                                        </tr>
                                        <tr class="align-text-top">
                                            <!--th></!--th-->
                                            <th style="width:100px;background-color:honeydew;">
                                                @*SubGroupNumber*@
                                                HEAD NO.
                                            </th>
                                            <th style="width:100px;background-color:honeydew;">
                                                SUBHEAD NO.
                                            </th>
                                            <th style="width:130px;background-color:honeydew;">
                                                @*SubGroupName*@
                                                HEAD NAME
                                            </th>
                                            <th class="CurrentBudgetEstimates" style= "background-color: floralwhite;width:130px;">
                                                        
                                            </th>
                                            <th class="InterimRevEst" style= "background-color: floralwhite;width:130px;">
                                                        
                                            </th>
                                            <th class="ProvisionalRevEst" style= "background-color: floralwhite;width:130px;">
                                                        
                                            </th>
                                            <th class="PreviousActualBudget" style= "background-color: aliceblue;width:130px;">
                                                
                                            </th>
                                            <th class="PreviousHalfYearActualBudget" style= "background-color: aliceblue;width:130px;">
                                                
                                            </th>
                                            <th class="CurrentYearRevisedEstimates" style= "background-color: aliceblue;width:130px;">
                                                
                                            </th>
                                            <th class="VariationInRevisedEstimates" style= "background-color: aliceblue;width:100px;">
                                                       
                                            </th>
                                            <th class="DelegateJustificationRevEst" style= "background-color: aliceblue;width:130px;">
                                                       
                                            </th>
                                            @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                             {
                                               <th class="ACBWProposalForRevisedEstimates" style= "background-color: aliceblue;width:130px;">
                                                 
                                               </th>
                                               }
                                             @if (User.IsInRole("Admin"))
                                             {
                                             <th class="VariationInRevisedEstimates" style= "background-color: aliceblue;width:100px;">
                                                      
                                            </th>
                                            } 
                                            @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                             {
                                                        <th class="ACBWJustificationRevEst" style= "background-color: aliceblue;width:130px;">

                                                        </th>
                                                    }
                                            <th class="BudgetEstimatesNextYear" style= "background-color:whitesmoke;width:130px;">
                                                
                                            </th>
                                            <th class="VariationInBudgetEstimates" style= "background-color:whitesmoke;width:100px;">
                                                
                                            </th>
                                           
                                            <th class="Justification " style= "background-color:whitesmoke;width: 130px;">
                                                       
                                            </th>
                                            @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                    {
                                                        <th class="ACBWProposalForBudgetEstimates" style= "background-color:whitesmoke;width:130px;">

                                                        </th>

                                                    }
                                                @if (User.IsInRole("Admin"))
                                                {
                                                <th class="VariationInBudgetEstimates" style= "background-color:whitesmoke;width:100px;">
                                                
                                                </th>
                                                
                                                }
                                               @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                               {
                                                        <th class="ACBWJustificationBudgEstNxtFin" style= "background-color:whitesmoke;width:130px;">

                                                        </th>
                                                    }
                                               <th class="UploadDocuments" style="width:130px;background-color:honeydew;">
                                                       
                                               </th>
                                               <th style="width:50px;background-color:honeydew;">Action</th>
                                        </tr>
                                    </thead>
                                    <tbody> 
                                        
                                        @foreach (var Subs in Model.SubGroupss.Where(d => d.GroupNo.Equals(@item.GroupNo)))
                                        {
                                                    var details = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a).FirstOrDefault();
                                                    var PrevYearApp =  (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a).FirstOrDefault();
                                                    
                                                    var TotalLedgers = (from c in Model.Ledgerss where c.SubGroupNo.Equals(@Subs.SubGroupNo) select c.LedgerNo).Count();

                                                    TotalSubGroups = (TotalSubGroups + TotalLedgers);

                                                    @if(@Subs.RequireInput)
                                                    {
                                                        int DelegateSavedCount = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.HasDelegateSaved.Equals(true) select a.SubGroupNumber).Count();
                                                        int AdminSavedCount = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.HasAdminSaved.Equals(true) select a.SubGroupNumber).Count();
                                                        
                                                        @if(DelegateSavedCount > 0)
                                                             IsDelegateSaved = true;
                                                        else
                                                            IsDelegateSaved = false;

                                                        @if(AdminSavedCount > 0)
                                                             IsAdminSaved = true;
                                                        else
                                                            IsAdminSaved = false;
                                                    }
                                                    else
                                                    {
                                                     IsDelegateSaved = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.HasDelegateSaved).FirstOrDefault();
                                                     IsAdminSaved = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.HasAdminSaved).FirstOrDefault();
                                                    }
                                                    var name1 = String.Concat("BudEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name2 = String.Concat("ActPrevFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name3 = String.Concat("ActCurrFinTillsecondQuart", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name4 = String.Concat("RevEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name5 = String.Concat("PerVarRevEstOverBudgEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name6 = String.Concat("ACAndBWPropRECurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name7 = String.Concat("BudgEstNexFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name8 = String.Concat("PerVarRevEstOverBudgEstNxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name9 = String.Concat("ACAndBWPropRENxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name10 = String.Concat("Justification", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name11 = String.Concat("UploadFile", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name12 = String.Concat("InterimRevEst", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name13 = String.Concat("ProvisionalRevEst", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name14 = String.Concat("DelegateJustificationRevEst", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name15 = String.Concat("ACBWJustificationRevEst", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name16 = String.Concat("ACBWJustificationBudgEstNxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name17 = String.Concat("PerVarACBWRevEstOverBudgEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name18 = String.Concat("PerVarACBWRevEstOverBudgEstNxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);


                                                    var upload = String.Concat("UploadButton", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var delete = String.Concat("DeleteButton", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var view = String.Concat("ViewButton", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);

                                                    var save = String.Concat("Save", @inner.SectionNo.ToString(),"_",@item.GroupNo, @TableCount);
                                                    var edit = String.Concat("Edit", @inner.SectionNo.ToString(), "_",@item.GroupNo, @TableCount);
                                                    var Budgetdelete = String.Concat("Delete", @inner.SectionNo.ToString(), "_",@item.GroupNo, @TableCount);

                                                    var LedgerCount = (from a in Model.Ledgerss where a.SubGroupNo.Equals(@Subs.SubGroupNo) select a.LedgerNo).Count();
                                                    
                                                     

                                                    <tr>
                                                        <!--td class=""></!--td-->
                                                        <td style= "background-color:honeydew;">
                                                            @{
                                                              Model.SubGroupNameOrLedgerName.Insert(Count, Subs.SubGroupNo);
                                                             }

                                                            @Html.DisplayFor(model => model.SubGroupNameOrLedgerName[Count])
                                                            @Html.HiddenFor(model => model.SubGroupNameOrLedgerName[Count])
                                                        </td>
                                                        <td style= "background-color:honeydew;"></td>
                                                        <td style= "background-color:honeydew;">
                                                            @Subs.subGroupName
                                                        </td>
                                                        <td style= "background-color: floralwhite;">
                                                        
                                                        @if (@Subs.RequireInput && DelegateEditStatus && !IsDelegateSaved)
                                                        {
                                                            var LedgerPastYearAppBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();

                                                                <div class="form-group text-nowrap"> 
                                                                 @{
                                                                        Model.BudEstCurrFin.Insert(Count, LedgerPastYearAppBudEstCurrFin != null ? Convert.ToDecimal(LedgerPastYearAppBudEstCurrFin) : Convert.ToDecimal(0.00));
                                                                   }
                                                                 @Html.TextBoxFor(model => model.BudEstCurrFin[Count],new { @maxlength="20", @class = "form-control", @id = @name1, @dir = "rtl",@readonly = "readonly"} )
                                                                 @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})

                                                                </div>
                                                            
                                                        }
                                                        else if ((@Subs.RequireInput && !DelegateEditStatus && IsSubmittedToACBW) || (@Subs.RequireInput && !User.IsInRole("Admin") && IsDelegateSaved))
                                                        {
                                                            var LedgerSumBudEstCurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstCurrFin).Sum();                                                                                                                            
                                                            
                                                            <div class="form-group text-nowrap">
                                                                    @{
                                                                        Model.BudEstCurrFin.Insert(Count, LedgerSumBudEstCurrFin != null ? Convert.ToDecimal(LedgerSumBudEstCurrFin) : Convert.ToDecimal(0.00));
                                                                     }
                                                                     @Html.TextBoxFor(model => model.BudEstCurrFin[Count],new { @maxlength="20", @class = "form-control", @id = @name1, @dir = "rtl", @readonly = "readonly"} )
                                                                     @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                
                                                            }

                                                            else if ((!DelegateEditStatus && IsSubmittedToACBW) || (!User.IsInRole("Admin") && IsDelegateSaved))
                                                            {
                                                                <div class="form-group text-nowrap">
                                                                   
                                                                   @{
                                                                        Model.BudEstCurrFin.Insert(Count, details != null ? Convert.ToDecimal(details.BudEstCurrFin) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @maxlength="20",@class = "form-control", @id = @name1, @dir = "rtl", @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})

                                                                </div>
                                                                
                                                            }
                                                            else
                                                            {
                                                                <div class="form-group ">
                                                                    @{
                                                                        Model.BudEstCurrFin.Insert(Count,(PrevYearApp != null) ? Convert.ToDecimal(PrevYearApp.BudEstNextFin) : Convert.ToDecimal(0.00));
                                                                     }
                                                                    @Html.TextBoxFor(model => model.BudEstCurrFin[Count],new { @maxlength="20",@class = "form-control", @id = @name1, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})

                                                                </div>
                                                                
                                                        }
                                                        </td>
                                                        <td style= "background-color: floralwhite;">
                                                        
                                                        @if (@Subs.RequireInput)
                                                        {
                                                            var LedgerSumInterimRevEst = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.InterimRevEst).Sum();                                                                                                                            
                                                            
                                                            <div class="form-group">
                                                                    @{
                                                                        Model.InterimRevEst.Insert(Count, LedgerSumInterimRevEst != null ? Convert.ToDecimal(LedgerSumInterimRevEst) : Convert.ToDecimal(0.00));
                                                                     }
                                                                     @Html.TextBoxFor(model => model.InterimRevEst[Count], new { @maxlength="20",@class = "form-control", @id = @name12, @dir = "rtl", @readonly = "readonly"} )
                                                                     @Html.ValidationMessageFor(model => model.InterimRevEst[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                        }
                                                        else 
                                                        {
                                                                <div class="form-group">
                                                                   @{
                                                                        Model.InterimRevEst.Insert(Count, details != null ? Convert.ToDecimal(details.InterimRevEst) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.InterimRevEst[Count], new { @maxlength="20",@class = "form-control", @id = @name12, @dir = "rtl", @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.InterimRevEst[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                        }
                                                           
                                                        </td>
                                                        <td style= "background-color: floralwhite;">
                                                        
                                                        @if (@Subs.RequireInput)
                                                        {
                                                            var LedgerSumProvisionalRevEst = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ProvisionalRevEst).Sum();                                                                                                                            
                                                            
                                                            <div class="form-group">
                                                                    @{
                                                                        Model.ProvisionalRevEst.Insert(Count, LedgerSumProvisionalRevEst != null ? Convert.ToDecimal(LedgerSumProvisionalRevEst) : Convert.ToDecimal(0.00));
                                                                     }
                                                                     @Html.TextBoxFor(model => model.ProvisionalRevEst[Count], new {@maxlength="20", @class = "form-control", @id = @name13, @dir = "rtl", @readonly = "readonly"} )
                                                                     @Html.ValidationMessageFor(model => model.ProvisionalRevEst[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                        }
                                                        else 
                                                        {
                                                                <div class="form-group">
                                                                   @{
                                                                        Model.ProvisionalRevEst.Insert(Count, details != null ? Convert.ToDecimal(details.ProvisionalRevEst) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.ProvisionalRevEst[Count], new { @maxlength="20",@class = "form-control", @id = @name13, @dir = "rtl", @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.ProvisionalRevEst[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                        }
                                                           
                                                        </td>
                                                        <td style= "background-color: aliceblue;">
                                                        @if(DelegateEditStatus && User.IsInRole("Admin"))
                                                        {
                                                            <div>
                                                               @{
                                                                  Model.ActPrevFin.Insert(Count, Convert.ToDecimal(0.00));
                                                                }   
                                                                @Html.TextBoxFor(model => model.ActPrevFin[Count], new { @maxlength="20",@class = "form-control", @id = @name2, @dir = "rtl", @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.ActPrevFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        else if (@Subs.RequireInput)
                                                        {
                                                            var LedgerSumActPrevFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActPrevFin).Sum();
                                                            <div class="form-group">  
                                                               @{
                                                                  Model.ActPrevFin.Insert(Count, LedgerSumActPrevFin != null ? Convert.ToDecimal(LedgerSumActPrevFin) : Convert.ToDecimal(0.00));
                                                                }   
                                                                @Html.TextBoxFor(model => model.ActPrevFin[Count], new { @maxlength="20",@class = "form-control", @id = @name2, @dir = "rtl", @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.ActPrevFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                            
                                                        }
                                                        else if ((!DelegateEditStatus) || (!User.IsInRole("Admin") && IsDelegateSaved  && Model.EditEnabled!=@Subs.SubGroupNo))
                                                        {
                                                                <div class="form-group">
                                                                  @{ 
                                                                     Model.ActPrevFin.Insert(Count, details != null ? Convert.ToDecimal(details.ActPrevFin) : Convert.ToDecimal(0.00));
                                                                   }
                                                                    @Html.TextBoxFor(model => model.ActPrevFin[Count], new { @maxlength="20",@class = "form-control", @id = @name2, @dir = "rtl", @readonly = "readonly"} )
                                                                    @Html.ValidationMessageFor(model => model.ActPrevFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                
                                                        }
                                                        else
                                                        {
                                                            <div class="form-group">
                                                               @{
                                                                  Model.ActPrevFin.Insert(Count, details != null ? Convert.ToDecimal(details.ActPrevFin) : Convert.ToDecimal(0.00));
                                                                }
                                                                @Html.TextBoxFor(model => model.ActPrevFin[Count], new { @maxlength="20",@class = "form-control", @id = @name2, @dir = "rtl"  })
                                                                @Html.ValidationMessageFor(model => model.ActPrevFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                            
                                                        }
                                                        </td>
                                                        <td style= "background-color: aliceblue;">
                                                        @if(DelegateEditStatus && User.IsInRole("Admin"))
                                                        {
                                                            <div class="form-group">
                                                               @{
                                                                  Model.ActCurrFinTillsecondQuart.Insert(Count, Convert.ToDecimal(0.00));
                                                                 }
                                                                 @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[Count], new { @class = "form-control", @id = @name3, @dir = "rtl", @readonly = "readonly"})
                                                                 @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        
                                                        else if (@Subs.RequireInput)
                                                        {
                                                                var LedgerSumActCurrFinTill2ndQuart = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActCurrFinTill2ndQuart).Sum();
                                                             <div class="form-group">
                                                               @{
                                                                  Model.ActCurrFinTillsecondQuart.Insert(Count, LedgerSumActCurrFinTill2ndQuart != null ? Convert.ToDecimal(LedgerSumActCurrFinTill2ndQuart) : Convert.ToDecimal(0.00));
                                                                 }
                                                                 @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[Count], new { @class = "form-control", @id = @name3, @dir = "rtl", @readonly = "readonly"})
                                                                 @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                
                                                            }
                                                        else if (!DelegateEditStatus || (!User.IsInRole("Admin") && IsDelegateSaved  && Model.EditEnabled!=@Subs.SubGroupNo))                                                       {                                       
                                                              <div class="form-group">
                                                                @{
                                                                   Model.ActCurrFinTillsecondQuart.Insert(Count, details != null ? Convert.ToDecimal(details.ActCurrFinTill2ndQuart) : Convert.ToDecimal(0.00));
                                                                 }
                                                                  @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[Count], new { @class = "form-control", @id = @name3, @dir = "rtl", @readonly = "readonly"})
                                                                 @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                
                                                            }
                                                        else
                                                        {
                                                            <div class="form-group">
                                                               @{ 
                                                                  Model.ActCurrFinTillsecondQuart.Insert(Count, details != null ? Convert.ToDecimal(details.ActCurrFinTill2ndQuart) : Convert.ToDecimal(0.00));
                                                                } 
                                                                @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[Count], new { @class = "form-control", @dir = "rtl", @id = @name3})
                                                                @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                            
                                                        }
                                                        </td>
                                                        <td style= "background-color: aliceblue;">
                                                        @if (@Subs.RequireInput && DelegateEditStatus && !IsDelegateSaved)
                                                        {
                                                                var PastYearBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin ).Sum();
                                                            <div class="form-group">
                                                               @{ 
                                                                 Model.RevEstCurrFin.Insert(Count, PastYearBudEstCurrFin != null ? Convert.ToDecimal(PastYearBudEstCurrFin) : Convert.ToDecimal(0.00));
                                                                } 
                                                                 @Html.TextBoxFor(model => model.RevEstCurrFin[Count], new { @class = "form-control", @id = @name4, @dir = "rtl", @readonly = "readonly"})
                                                                 @Html.ValidationMessageFor(model => model.RevEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                                
                                                            }
                                                        else if ((@Subs.RequireInput && !DelegateEditStatus) || (@Subs.RequireInput && !User.IsInRole("Admin") && IsDelegateSaved && Model.EditEnabled!=@Subs.SubGroupNo))
                                                        {
                                                                var PastYearBudEstCurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.RevEstCurrFin).Sum();
                                                            <div class="form-group">
                                                             @{   
                                                                Model.RevEstCurrFin.Insert(Count, PastYearBudEstCurrFin != null ? Convert.ToDecimal(PastYearBudEstCurrFin) : Convert.ToDecimal(0.00));
                                                              }   
                                                                @Html.TextBoxFor(model => model.RevEstCurrFin[Count], new { @class = "form-control", @id = @name4, @dir = "rtl", @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.RevEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        else if(User.IsInRole("Admin") && DelegateEditStatus )
                                                        {
                                                            <div class="form-group">
                                                             @{  
                                                                Model.RevEstCurrFin.Insert(Count, PrevYearApp != null ? Convert.ToDecimal(PrevYearApp.BudEstNextFin) : Convert.ToDecimal(0.00));
                                                              }  
                                                                @Html.TextBoxFor(model => model.RevEstCurrFin[Count], new { @class = "form-control", @id = @name4, @dir = "rtl", @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.RevEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        else if(!DelegateEditStatus || (!User.IsInRole("Admin") && IsDelegateSaved && Model.EditEnabled!=@Subs.SubGroupNo))
                                                        {
                                                              <div class="form-group">
                                                                @{    
                                                                  Model.RevEstCurrFin.Insert(Count, details != null ? Convert.ToDecimal(details.RevEstCurrFin) : Convert.ToDecimal(0.00));
                                                                 }  
                                                                    @Html.TextBoxFor(model => model.RevEstCurrFin[Count], new { @class = "form-control", @id = @name4, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.RevEstCurrFin[Count],null, new { @class = "text-danger", @style="font-size: 0.8em;font-style: italic;" })
                                                              </div> 
                                                        }
                                                        else
                                                        {
                                                            <div class="form-group">
                                                              @if(details!=null && !@details.ProvisionalRevEst.Equals(Convert.ToDecimal(0.00)) && !IsDelegateSaved)
                                                              {
                                                                Model.RevEstCurrFin.Insert(Count, details != null ? Convert.ToDecimal(@details.ProvisionalRevEst) : Convert.ToDecimal(0.00));
                                                               }
                                                               else
                                                               { 
                                                                Model.RevEstCurrFin.Insert(Count, PrevYearApp != null ? Convert.ToDecimal(PrevYearApp.BudEstNextFin) : Convert.ToDecimal(0.00));
                                                                }
                                                                @Html.TextBoxFor(model => model.RevEstCurrFin[Count], new { @class = "form-control", @dir = "rtl", @id = @name4})
                                                                @Html.ValidationMessageFor(model => model.RevEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        </td>
                                                        <td style= "background-color: aliceblue;">
                                                        @if (@Subs.RequireInput && DelegateEditStatus && !IsDelegateSaved)
                                                        {
                                                            
                                                          var PastYearSumBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();                                                                                                                           
                                                              <div class="form-group">
                                                              @{
                                                                        Model.PerVarRevEstOverBudgEstCurrFin.Insert(Count, PastYearSumBudEstCurrFin != Convert.ToDecimal(0.0000) ? Convert.ToString(((Convert.ToDecimal(PastYearSumBudEstCurrFin) - Convert.ToDecimal(PastYearSumBudEstCurrFin)) / Convert.ToDecimal(PastYearSumBudEstCurrFin)) * 100) : (0).ToString("F2"));
                                                               }
                                                                @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name5,  @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            }
                                                        else if((@Subs.RequireInput && !DelegateEditStatus) || (@Subs.RequireInput && !User.IsInRole("Admin") && IsDelegateSaved))
                                                        {
                                                            var LedgerSumRevEstCurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.RevEstCurrFin).Sum();
                                                            var LedgerSumBudEstCurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstCurrFin).Sum();
                                                                <div class="form-group">
                                                                @{
                                                                    Model.PerVarRevEstOverBudgEstCurrFin.Insert(Count, LedgerSumBudEstCurrFin!=Convert.ToDecimal(0.0000) ? Convert.ToString(((Convert.ToDecimal(LedgerSumRevEstCurrFin)- Convert.ToDecimal(LedgerSumBudEstCurrFin))/Convert.ToDecimal(LedgerSumBudEstCurrFin))*100): (0).ToString("F2"));
                                                                 }
                                                                    @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name5,  @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                        }                                                     
                                                        
                                                        else if (!DelegateEditStatus || (!User.IsInRole("Admin") && IsDelegateSaved))
                                                        {
                                                            <div class="form-group">
                                                               @{ 
                                                                  Model.PerVarRevEstOverBudgEstCurrFin.Insert(Count, (details!=null && details.BudEstCurrFin!=Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(details.RevEstCurrFin)- Convert.ToDecimal(details.BudEstCurrFin))/Convert.ToDecimal(details.BudEstCurrFin))*100)  : (0).ToString("F2"));
                                                                } 
                                                                @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name5, @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                                <div class="form-group">
                                                                 @{
                                                                    Model.PerVarRevEstOverBudgEstCurrFin.Insert(Count, (PrevYearApp!=null && PrevYearApp.BudEstNextFin!=Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(PrevYearApp.BudEstNextFin)- Convert.ToDecimal(PrevYearApp.BudEstNextFin))/Convert.ToDecimal(PrevYearApp.BudEstNextFin))*100)   : (0).ToString("F2"));
                                                                  }
                                                                     @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name5, @readonly = "readonly"})
                                                                     @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            }
                                                        </td>
                                                        
                                                        <td style= "background-color: aliceblue;">
                                                                                    @if ((!DelegateEditStatus && !@Subs.RequireInput) || (!User.IsInRole("Admin") && IsDelegateSaved))
                                                                                    {
                                                                                            <div class="form-group">
                                                                                             @{  
                                                                                                Model.DelegateJustificationRevEst.Insert(Count, (details != null && details.DelegateJustificationRevEst!=null) ? details.DelegateJustificationRevEst.ToString(): "");
                                                                                              }  
                                                                                            @Html.TextBoxFor(model => model.DelegateJustificationRevEst[Count], new { @class = "form-control", @id = @name14, @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.DelegateJustificationRevEst[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                        
                                                                                    }
                                                                                    else if((User.IsInRole("Admin") && DelegateEditStatus) || @Subs.RequireInput )
                                                                                    {
                                                                                        <div class="form-group">
                                                                                             @{  
                                                                                                Model.DelegateJustificationRevEst.Insert(Count, "");
                                                                                              }  
                                                                                            @Html.TextBoxFor(model => model.DelegateJustificationRevEst[Count], new { @class = "form-control", @id = @name14, @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.DelegateJustificationRevEst[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <div class="form-group">
                                                                                           @{ 
                                                                                              Model.DelegateJustificationRevEst.Insert(Count, (details != null && details.DelegateJustificationRevEst!=null) ? details.DelegateJustificationRevEst.ToString() : "");
                                                                                             }   
                                                                                            @Html.TextAreaFor(model => model.DelegateJustificationRevEst[Count], new { @class = "form-control", @id = @name14})
                                                                                            @Html.ValidationMessageFor(model => model.DelegateJustificationRevEst[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                            
                                                                                    }
                                                        </td>
                                                        @if (((User.IsInRole("Admin") && (AdminEditStatus||!AdminEditStatus))||(!User.IsInRole("Admin")&& !FinalAdminEditStatus && FinalAdminEditCount>0 )) && @Subs.RequireInput)
                                                        {
                                                            var LedgerSumACAndBWPropRECurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRECurrFin).Sum();
                                                            <td style= "background-color: aliceblue;">
                                                              <div class="form-group">
                                                               @{
                                                                 Model.ACAndBWPropRECurrFin.Insert(Count, LedgerSumACAndBWPropRECurrFin!=null ? Convert.ToDecimal(LedgerSumACAndBWPropRECurrFin) : Convert.ToDecimal(0.00));
                                                                }
                                                                 @Html.TextBoxFor(model => model.ACAndBWPropRECurrFin[Count],new { @class = "form-control", @id = @name6, @dir = "rtl", @readonly = "readonly"})
                                                                 @Html.ValidationMessageFor(model => model.ACAndBWPropRECurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                              </div>
                                                            </td>
                                                        }
                                                        else if (User.IsInRole("Admin") && !@Subs.RequireInput && AdminEditStatus && (!IsAdminSaved || (Model.EditEnabled == @Subs.SubGroupNo)))
                                                        {
                                                            <td style= "background-color: aliceblue;">
                                                                <div class="form-group">
                                                               @{ 
                                                                Model.ACAndBWPropRECurrFin.Insert(Count, details!=null ? Convert.ToDecimal(details.ACAndBWPropRECurrFin) : Convert.ToDecimal(0.00));
                                                                } 
                                                                @Html.TextBoxFor(model => model.ACAndBWPropRECurrFin[Count],new { @class = "form-control", @id = @name6})
                                                                @Html.ValidationMessageFor(model => model.ACAndBWPropRECurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            </td>
                                                        }
                                                        else if (((User.IsInRole("Admin") && (!AdminEditStatus || IsAdminSaved)) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0) ) && !@Subs.RequireInput)
                                                        {
                                                            <td style= "background-color: aliceblue;">
                                                                <div class="form-group">
                                                                 @{   
                                                                    Model.ACAndBWPropRECurrFin.Insert(Count, details != null ? Convert.ToDecimal(details.ACAndBWPropRECurrFin) : Convert.ToDecimal(0.00));
                                                                  } 
                                                                    @Html.TextBoxFor(model => model.ACAndBWPropRECurrFin[Count], new { @class = "form-control", @id = @name6, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ACAndBWPropRECurrFin[Count],null, new { @class = "text-danger", @style="font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            </td>
                                                        }
                                                       @*else if (User.IsInRole("Admin") && @Subs.RequireInput && !AdminEditStatus)
                                                        {
                                                            var LedgerSumACAndBWPropRECurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRECurrFin).Sum();
                                                            <td>
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ACAndBWPropRECurrFin.Insert(Count, LedgerSumACAndBWPropRECurrFin!=null ? Convert.ToDecimal(LedgerSumACAndBWPropRECurrFin) : Convert.ToDecimal(0.00));
                                                                    }
                                                                Html.TextBox(@name6, @dir = "rtl", details!=null ? details.ACAndBWPropRECurrFin.ToString("F4") : " ", new { @class = "form-control", @id = @name6, @dir = "rtl", @readonly = "readonly"})
                                                                @Html.ValidationMessage(@name6, @dir = "rtl",  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                    @Html.TextBoxFor(model => model.ACAndBWPropRECurrFin[Count], new { @class = "form-control", @id = @name6, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ACAndBWPropRECurrFin[Count],null, new { @class = "text-danger" })
                                                                </div>
                                                            </td>
                                                        }*@
                                                       
                                                        else
                                                        {
                                                           Model.ACAndBWPropRECurrFin.Insert(Count, Convert.ToDecimal(0.00));                                                    
                                                            
                                                        }
                                                        
                                                        @if (User.IsInRole("Admin") && @Subs.RequireInput && AdminEditStatus && !IsAdminSaved)
                                                        {
                                                         var PastYearSumBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();                                                                                                                           
                                                         <td style= "background-color: aliceblue;">
                                                              <div class="form-group">
                                                              @{
                                                                        Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(Count, PastYearSumBudEstCurrFin != Convert.ToDecimal(0.0000) ? Convert.ToString(((Convert.ToDecimal(PastYearSumBudEstCurrFin) - Convert.ToDecimal(PastYearSumBudEstCurrFin)) / Convert.ToDecimal(PastYearSumBudEstCurrFin)) * 100) : (0).ToString("F2"));
                                                               }
                                                                @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name17, @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                         </td>
                                                         
                                                        }
                                                        else if((User.IsInRole("Admin") && @Subs.RequireInput && IsAdminSaved))
                                                        {
                                                            var LedgerSumACAndBWPropRECurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRECurrFin).Sum();
                                                            var LedgerSumBudEstCurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstCurrFin).Sum();
                                                            <td style= "background-color: aliceblue;">
                                                                <div class="form-group">
                                                                @{
                                                                    Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(Count, LedgerSumBudEstCurrFin!=Convert.ToDecimal(0.0000) ? Convert.ToString(((Convert.ToDecimal(LedgerSumACAndBWPropRECurrFin)- Convert.ToDecimal(LedgerSumBudEstCurrFin))/Convert.ToDecimal(LedgerSumBudEstCurrFin))*100): (0).ToString("F2"));
                                                                 }
                                                                    @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name17,  @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            </td>
                                                        }                                                     
                                                        
                                                        else if (User.IsInRole("Admin") && IsAdminSaved)
                                                        {
                                                          <td style= "background-color: aliceblue;">
                                                            <div class="form-group">
                                                               @{ 
                                                                  Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(Count, (details!=null && details.BudEstCurrFin!=Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(details.ACAndBWPropRECurrFin)- Convert.ToDecimal(details.BudEstCurrFin))/Convert.ToDecimal(details.BudEstCurrFin))*100)  : (0).ToString("F2"));
                                                                } 
                                                                @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name17, @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                          </td>
                                                        }
                                                       else if (User.IsInRole("Admin") && !IsAdminSaved)
                                                        {
                                                            <td style= "background-color: aliceblue;">
                                                                <div class="form-group">
                                                                 @{
                                                                    Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(Count, (PrevYearApp!=null && PrevYearApp.BudEstNextFin!=Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(PrevYearApp.BudEstNextFin)- Convert.ToDecimal(PrevYearApp.BudEstNextFin))/Convert.ToDecimal(PrevYearApp.BudEstNextFin))*100)   : (0).ToString("F2"));
                                                                  }
                                                                     @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name17,  @readonly = "readonly"})
                                                                     @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                             </td>
                                                            }
                                                            else
                                                            {
                                                                Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(Count, (0).ToString("F2"));
                                                            }
                                                       
                                                        @if (User.IsInRole("Admin") && AdminEditStatus && !@Subs.RequireInput && (!IsAdminSaved || (Model.EditEnabled == @Subs.SubGroupNo)))
                                                        {
                                                                                        <td style= "background-color: aliceblue;">
                                                                                            <div class="form-group"> 
                                                                                                @{
                                                                                                  Model.ACBWJustificationRevEst.Insert(Count, details!=null && details.ACBWJustificationRevEst!=null && details.ACBWJustificationRevEst!=" " ? details.ACBWJustificationRevEst.ToString()  : " ");
                                                                                               }
                                                                                                
                                                                                                @Html.TextBoxFor(model => model.ACBWJustificationRevEst[Count], new { @class = "form-control", @id = @name15})
                                                                                                @Html.ValidationMessageFor(model => model.ACBWJustificationRevEst[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                        </td>
                                                        }
                                                       else if ((User.IsInRole("Admin") && (!AdminEditStatus ||IsAdminSaved) ) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                       {
                                                                                      <td style= "background-color: aliceblue;">
                                                                                          <div class="form-group">
                                                                                              @{
                                                                                                 Model.ACBWJustificationRevEst.Insert(Count, (details!=null && details.ACBWJustificationRevEst!=" " && details.ACBWJustificationRevEst!=null) ? details.ACBWJustificationRevEst.ToString() : "");
                                                                                               }
                                                                                            
                                                                                            @Html.TextBoxFor(model => model.ACBWJustificationRevEst[Count], new { @class = "form-control", @id = @name15, @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.ACBWJustificationRevEst[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                          </div>
                                                                                        </td>
                                                        }
                                                        else if(User.IsInRole("Admin") && (DelegateEditStatus || @Subs.RequireInput) )
                                                                                    {
                                                                                        <td style= "background-color: aliceblue;">
                                                                                        <div class="form-group">
                                                                                             @{  
                                                                                                Model.ACBWJustificationRevEst.Insert(Count, "");
                                                                                              }  
                                                                                            @Html.TextBoxFor(model => model.ACBWJustificationRevEst[Count], new { @class = "form-control", @id = @name14, @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.ACBWJustificationRevEst[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                        </td>
                                                                                    }
                                                        else
                                                        {
                                                             Model.ACBWJustificationRevEst.Insert(Count, " ");
                                                        }
                                                        <td style= "background-color:whitesmoke;">
                                                        @if (@Subs.RequireInput && DelegateEditStatus && !IsDelegateSaved)
                                                        {
                                                                var PastYearBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin ).Sum();
                                                            <div class="form-group">
                                                                @{
                                                                    Model.BudgEstNexFin.Insert(Count, PastYearBudEstCurrFin != null ? Convert.ToDecimal(PastYearBudEstCurrFin) : Convert.ToDecimal(0.00));
                                                                 }
                                                                
                                                                @Html.TextBoxFor(model => model.BudgEstNexFin[Count],new { @class = "form-control", @id = @name7, @dir = "rtl", @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.BudgEstNexFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        else if ((@Subs.RequireInput && !DelegateEditStatus) || (@Subs.RequireInput && !User.IsInRole("Admin") && IsDelegateSaved && Model.EditEnabled!=@Subs.SubGroupNo))
                                                        {
                                                                var ThisYearBudEstNextFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudgEstNexFin).Sum();
                                                            <div class="form-group">
                                                            @{
                                                                 Model.BudgEstNexFin.Insert(Count,ThisYearBudEstNextFin!=null ? Convert.ToDecimal(ThisYearBudEstNextFin) : Convert.ToDecimal(0.00));
                                                             }
                                                                
                                                                @Html.TextBoxFor(model => model.BudgEstNexFin[Count],new { @class = "form-control", @id = @name7, @dir = "rtl", @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.BudgEstNexFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        else if (User.IsInRole("Admin") && DelegateEditStatus)
                                                        {
                                                            <div class="form-group">
                                                               @{
                                                                  Model.BudgEstNexFin.Insert(Count, PrevYearApp != null ? Convert.ToDecimal(PrevYearApp.BudEstNextFin) : Convert.ToDecimal(0.00));
                                                                }
                                                                
                                                                @Html.TextBoxFor(model => model.BudgEstNexFin[Count],new { @class = "form-control", @id = @name7, @dir = "rtl", @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.BudgEstNexFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                           
                                                        }
                                                        else if (!DelegateEditStatus || (!User.IsInRole("Admin") && IsDelegateSaved && Model.EditEnabled!=@Subs.SubGroupNo) )
                                                        {
                                                              <div class="form-group">
                                                               @{
                                                                 Model.BudgEstNexFin.Insert(Count, details!=null ? Convert.ToDecimal(details.BudgEstNexFin) : Convert.ToDecimal(0.00));
                                                               }
                                                               
                                                               @Html.TextBoxFor(model => model.BudgEstNexFin[Count],new { @class = "form-control", @id = @name7, @dir = "rtl", @readonly = "readonly"})
                                                               @Html.ValidationMessageFor(model => model.BudgEstNexFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                              </div>
                                                        }
                                                        else
                                                        {
                                                            <div class="form-group">
                                                                    @if(details!=null && !@details.ProvisionalRevEst.Equals(Convert.ToDecimal(0.00)) && !IsDelegateSaved)
                                                                    {
                                                                       Model.BudgEstNexFin.Insert(Count, details != null ? Convert.ToDecimal(details.ProvisionalRevEst) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    else
                                                                    {
                                                                        Model.BudgEstNexFin.Insert(Count, PrevYearApp != null ? Convert.ToDecimal(PrevYearApp.BudEstNextFin) : Convert.ToDecimal(0.00));
                                                                    }
                                                                
                                                                @Html.TextBoxFor(model => model.BudgEstNexFin[Count],new { @class = "form-control", @dir = "rtl", @id = @name7})
                                                                @Html.ValidationMessageFor(model => model.BudgEstNexFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                           
                                                        }
                                                        </td>
                                                        <td style= "background-color:whitesmoke;">
                                                            @if (@Subs.RequireInput && DelegateEditStatus && !IsDelegateSaved)
                                                            {

                                                                var PastYearSumBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();
                                                                <div class="form-group">
                                                                @{
                                                                    Model.PerVarRevEstOverBudgEstNxtFin.Insert(Count, PastYearSumBudEstCurrFin!=Convert.ToDecimal(0.0000) ? Convert.ToString(((Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F"))- Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F")))/Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F")))*100) : (0).ToString("F2"));
                                                                 }
                                                                   
                                                                    @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name8, @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            }
                                                            else if ((@Subs.RequireInput && !DelegateEditStatus)||(@Subs.RequireInput && !User.IsInRole("Admin") && IsDelegateSaved))
                                                            {
                                                                var LedgerSumRevEstCurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.RevEstCurrFin).Sum();
                                                                var LedgerSumBudEstNextFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudgEstNexFin).Sum();
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.PerVarRevEstOverBudgEstNxtFin.Insert(Count, LedgerSumBudEstNextFin!=Convert.ToDecimal(0.0000) ? Convert.ToString(((Convert.ToDecimal(LedgerSumBudEstNextFin.ToString("F"))- Convert.ToDecimal(LedgerSumRevEstCurrFin.ToString("F")))/Convert.ToDecimal(LedgerSumRevEstCurrFin.ToString("F")))*100) : (0).ToString("F2"));
                                                                    }
                                                                    
                                                                    @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name8, @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            }

                                                            else if (User.IsInRole("Admin") || !DelegateEditStatus || (!User.IsInRole("Admin") && IsDelegateSaved))
                                                            {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.PerVarRevEstOverBudgEstNxtFin.Insert(Count, (details!=null && details.RevEstCurrFin!=Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(details.BudgEstNexFin.ToString("F"))- Convert.ToDecimal(details.RevEstCurrFin.ToString("F")))/Convert.ToDecimal(details.RevEstCurrFin.ToString("F")))*100) : (0).ToString("F2"));
                                                                    }
                                                                    
                                                                    @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name8, @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                               <div class="form-group">
                                                                    @{ 
                                                                        Model.PerVarRevEstOverBudgEstNxtFin.Insert(Count, (PrevYearApp!=null && PrevYearApp.BudEstNextFin!=Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F"))- Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F")))/Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F")))*100) : (0).ToString("F2"));
                                                                   }
                                                                    
                                                                    @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name8, @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            }
                                                        </td>
                                                        <td style= "background-color:whitesmoke;">
                                                            @if ((!DelegateEditStatus && !@Subs.RequireInput) || (!User.IsInRole("Admin") && IsDelegateSaved && Model.EditEnabled!=@Subs.SubGroupNo))
                                                        {
                                                            <div class="form-group">
                                                                @{
                                                                    Model.Justification.Insert(Count, (details != null && details.Justification!=null) ? details.Justification.ToString(): "");
                                                                 }
                                                                
                                                                @Html.TextBoxFor(model => model.Justification[Count] , new { @class = "form-control", @id = @name10, @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.Justification[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        else if((User.IsInRole("Admin") && DelegateEditStatus) || @Subs.RequireInput)
                                                        {
                                                             <div class="form-group">
                                                                @{
                                                                    Model.Justification.Insert(Count, "");
                                                                 }
                                                                
                                                                @Html.TextBoxFor(model => model.Justification[Count] , new { @class = "form-control", @id = @name10, @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.Justification[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>   
                                                        }
                                                        else
                                                        {                                                                                                             
                                                            <div class="form-group">
                                                                @{
                                                                     Model.Justification.Insert(Count, (details != null && details.Justification!=null) ? details.Justification.ToString(): "");
                                                                 }
                                                                 @*Html.TextArea(@name10, @dir = "rtl", details!=null ? details.Justification.ToString() : " ", new { @class = "form-control", @id = @name10})
                                                                 @Html.ValidationMessage(@name10, @dir = "rtl",  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                 @Html.TextAreaFor(model => model.Justification[Count] , new { @class = "form-control", @id = @name10 })
                                                                 @Html.ValidationMessageFor(model => model.Justification[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        </td>
                                                        @if (((User.IsInRole("Admin") && (AdminEditStatus || !AdminEditStatus)) ||(!User.IsInRole("Admin")&& !FinalAdminEditStatus && FinalAdminEditCount>0)) && @Subs.RequireInput )
                                                        {
                                                            var LedgerSumACAndBWPropRENxtFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRENxtFin).Sum();
                                                            <td style= "background-color:whitesmoke;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ACAndBWPropRENxtFin.Insert(Count, LedgerSumACAndBWPropRENxtFin!=null ? Convert.ToDecimal(LedgerSumACAndBWPropRENxtFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    
                                                                    @Html.TextBoxFor(model => model.ACAndBWPropRENxtFin[Count],new { @class = "form-control", @id = @name9, @dir = "rtl", @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.ACAndBWPropRENxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            </td>
                                                        }
                                                        else if (User.IsInRole("Admin") && !@Subs.RequireInput && AdminEditStatus && (!IsAdminSaved || (Model.EditEnabled == @Subs.SubGroupNo))) 
                                                        {
                                                            <td style= "background-color:whitesmoke;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ACAndBWPropRENxtFin.Insert(Count, details != null ? Convert.ToDecimal(details.ACAndBWPropRENxtFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    
                                                                    @Html.TextBoxFor(model => model.ACAndBWPropRENxtFin[Count], new {@class = "form-control", @id = @name9})
                                                                    @Html.ValidationMessageFor(model => model.ACAndBWPropRENxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            </td>
                                                        }
                                                        else if (((User.IsInRole("Admin") && (!AdminEditStatus || IsAdminSaved)) || (!User.IsInRole("Admin")&& !FinalAdminEditStatus && FinalAdminEditCount>0)) && !@Subs.RequireInput ) 
                                                        {
                                                            <td style= "background-color:whitesmoke;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ACAndBWPropRENxtFin.Insert(Count, details != null ? Convert.ToDecimal(details.ACAndBWPropRENxtFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    
                                                                    @Html.TextBoxFor(model => model.ACAndBWPropRENxtFin[Count], new {@class = "form-control", @id = @name9, @dir = "rtl", @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.ACAndBWPropRENxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                
                                                            </td>
                                                        }
                                                        @*else if (User.IsInRole("Admin") && @Subs.RequireInput && !AdminEditStatus)
                                                        {
                                                            var LedgerSumACAndBWPropRENxtFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRENxtFin).Sum();
                                                            <td>
                                                                <div class="form-group">
                                                               @{
                                                                  Model.ACAndBWPropRENxtFin.Insert(Count, LedgerSumACAndBWPropRENxtFin!=null ? Convert.ToDecimal(LedgerSumACAndBWPropRENxtFin.ToString("F4"))  : Convert.ToDecimal(0.00));
                                                                }
                                                              @Html.TextBox(@name9, @dir = "rtl", details!=null ? details.ACAndBWPropRENxtFin.ToString("F4") : " ", new { @class = "form-control", @id = @name9, @dir = "rtl", @readonly = "readonly"})
                                                                    @Html.ValidationMessage(@name9, @dir = "rtl",  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) 
                                                                    @Html.TextBoxFor(model => model.ACAndBWPropRENxtFin[Count],   new { @class = "form-control", @id = @name9, @dir = "rtl", @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.ACAndBWPropRENxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            </td>
                                                        }*@
                                                        else
                                                        {
                                                           Model.ACAndBWPropRENxtFin.Insert(Count, Convert.ToDecimal(0.00));                                                   
                                                        }
                                                        
                                                            @if (User.IsInRole("Admin") && @Subs.RequireInput && AdminEditStatus && !IsAdminSaved)
                                                            {
                                                                var PastYearSumBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();
                                                                <td style= "background-color:whitesmoke;">
                                                                <div class="form-group">
                                                                @{
                                                                    Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(Count, PastYearSumBudEstCurrFin!=Convert.ToDecimal(0.0000) ? Convert.ToString(((Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F4"))- Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F4")))/Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F4")))*100) : (0).ToString("F2"));
                                                                 }
                                                                    
                                                                    @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name18,  @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                </td>
                                                            }
                                                            else if (User.IsInRole("Admin") && @Subs.RequireInput && IsAdminSaved)
                                                            {
                                                                var LedgerSumACAndBWPropRECurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRECurrFin).Sum();
                                                                var LedgerSumACAndBWPropRENxtFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRENxtFin).Sum();
                                                              <td style= "background-color:whitesmoke;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(Count, LedgerSumACAndBWPropRENxtFin!=Convert.ToDecimal(0.0000) ? Convert.ToString(((Convert.ToDecimal(LedgerSumACAndBWPropRENxtFin.ToString("F4"))- Convert.ToDecimal(LedgerSumACAndBWPropRECurrFin.ToString("F4")))/Convert.ToDecimal(LedgerSumACAndBWPropRECurrFin.ToString("F4")))*100) : (0).ToString("F2"));
                                                                    }
                                                                    
                                                                    @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name18,  @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                             </td>
                                                            }

                                                            else if (User.IsInRole("Admin") && IsAdminSaved)
                                                            {
                                                                <td style= "background-color:whitesmoke;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(Count, (details!=null && details.ACAndBWPropRECurrFin!=Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(details.ACAndBWPropRENxtFin.ToString("F4"))- Convert.ToDecimal(details.ACAndBWPropRECurrFin.ToString("F4")))/Convert.ToDecimal(details.ACAndBWPropRECurrFin.ToString("F4")))*100) : (0).ToString("F2"));
                                                                    }
                                                                   
                                                                    @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name18,  @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                </td>
                                                            }
                                                           else if (User.IsInRole("Admin") && !IsAdminSaved)
                                                            {
                                                                <td style= "background-color:whitesmoke;">
                                                                <div class="form-group"> 
                                                                    @{
                                                                        Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(Count, (PrevYearApp!=null && PrevYearApp.BudEstNextFin!=Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F4"))- Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F4")))/Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F4")))*100) : (0).ToString("F2"));
                                                                    }
                                                                    
                                                                    @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name18, @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                </td>
                                                            }
                                                        else
                                                        {
                                                            Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(Count, (0).ToString("F2"));
                                                        }
                                                        @if (User.IsInRole("Admin") && AdminEditStatus && !@Subs.RequireInput && (!IsAdminSaved || (Model.EditEnabled == @Subs.SubGroupNo)))
                                                                                    {
                                                                                        <td style= "background-color:whitesmoke;">
                                                                                            <div class="form-group"> 
                                                                                                @{
                                                                                                  Model.ACBWJustificationBudgEstNxtFin.Insert(Count, details!=null && details.ACBWJustificationBudgEstNxtFin!=null && details.ACBWJustificationBudgEstNxtFin!=" " ? details.ACBWJustificationBudgEstNxtFin.ToString()  : " ");
                                                                                               }
                                                                                                
                                                                                                @Html.TextBoxFor(model => model.ACBWJustificationBudgEstNxtFin[Count], new { @class = "form-control", @id = @name16})
                                                                                                @Html.ValidationMessageFor(model => model.ACBWJustificationBudgEstNxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                        </td>
                                                                                    }
                                                                                    else if ((User.IsInRole("Admin") && (!AdminEditStatus || IsAdminSaved ) && !@Subs.RequireInput) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                                                    {
                                                                                      <td style= "background-color:whitesmoke;">
                                                                                          <div class="form-group">
                                                                                              @{
                                                                                                 Model.ACBWJustificationBudgEstNxtFin.Insert(Count, details!=null && details.ACBWJustificationBudgEstNxtFin!=null && details.ACBWJustificationBudgEstNxtFin!=" "? details.ACBWJustificationBudgEstNxtFin.ToString() : "");
                                                                                               }
                                                                                            
                                                                                            @Html.TextBoxFor(model => model.ACBWJustificationBudgEstNxtFin[Count], new { @class = "form-control", @id = @name16, @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.ACBWJustificationBudgEstNxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                          </div>
                                                                                        </td>
                                                                                    }
                                                        else if(User.IsInRole("Admin") && (DelegateEditStatus || @Subs.RequireInput))
                                                        {
                                                            <td style= "background-color:whitesmoke;">
                                                             <div class="form-group">
                                                                @{
                                                                    Model.ACBWJustificationBudgEstNxtFin.Insert(Count, "");
                                                                 }
                                                                
                                                                @Html.TextBoxFor(model => model.ACBWJustificationBudgEstNxtFin[Count] , new { @class = "form-control", @id = @name16, @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.ACBWJustificationBudgEstNxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>   
                                                            </td>
                                                        }
                                                                                    else
                                                                                    {
                                                                                        Model.ACBWJustificationBudgEstNxtFin.Insert(Count, " ");
                                                                                    }
                                                        <td  style="background-color:honeydew;"> 
                                                                                    
                                                            @if(!@Subs.RequireInput) 
                                                            {
                                                              <table class="table">
                                                              <thead> </thead>
                                                              <tbody>
                                                              @if (!User.IsInRole("Admin") && GroupsStatusRowCount == 0 && Model.IsEnabled.Equals(true) && (!IsDelegateSaved || Model.EditEnabled ==@Subs.SubGroupNo))
                                                              {
                                                                   <tr><td  style="border:none"> @Html.TextBoxFor(m => m.File, new { type = "file", @id = @name11})</td></tr>
                                                                   <tr><td  style="border:none"> @Html.ValidationMessage("Caution"+Count,"* only .pdf files with size 1 MB are allowed",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})</td></tr>
                                                                   <tr><td  style="border:none"> @Html.ValidationMessage("FileMessage_"+Count,null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})</td></tr>
                                                                   <br/>
                                                                   <tr><td style="border:none"><input id="@upload" class="Submit" formaction="~/Tabs/Upload" type="submit" value="Upload" /></td></tr>
                                                              }
                                                             
                                                                                    @foreach(var Files in Model.Filess.Where(a => a.SubGroupNumber.Equals(@Subs.SubGroupNo)))
                                                                                    {
                                                                                        var FinalSubmitStatus = (from a in Model.Statuss where (a.SectionNumber == 0 && a.GroupNumber.Equals("0")) select a.AdminEditStatus).Count();
                                                                                     <tr>
                                                                                      @if((User.IsInRole("Admin") && AdminEditStatus) || !User.IsInRole("Admin") || (User.IsInRole("Admin") && FinalSubmitStatus > 0))
                                                                                      {
                                                                                       <td style="border:none">@Html.ActionLink(@Files.FileName,null,null,null,new{href =@Files.SupportingDocumentPath, target = "_blank"} )</td>
                                                                                       /*<td><input id="@view" class="ViewFile  btn-link" style="border:none; outline:none;  background-color: transparent;" formaction="~/Tabs/ViewFile" type="submit" value= "@Files.FileName" /></td>*/
                                                                                      }
                                                                                        @if (!User.IsInRole("Admin") && GroupsStatusRowCount == 0 && !IsDelegateSaved)
                                                                                        {
                                                                                           <td style="border:none"><input id="@delete" class="Submit  btn-link" style="border:none; outline:none;  background-color: transparent;" formaction="~/Tabs/Delete" type="submit" value="Delete"/></td>
                                                                                        }
                                                                                     </tr>      
                                                                                         
                                                                                    }
                                                         </tbody>
                                                             </table>
                                                         }
                                                        </td>
                                                        <td style="background-color:honeydew;">
                                                        @if((!User.IsInRole("Admin") && !@Subs.RequireInput && DelegateEditStatus && (!IsDelegateSaved || Model.EditEnabled==@Subs.SubGroupNo))||(User.IsInRole("Admin") && !@Subs.RequireInput && AdminEditStatus && (!IsAdminSaved|| (Model.EditEnabled == @Subs.SubGroupNo)) ))
                                                        {
                                                                                   <button style="border:none;background-color:white" id="@save" class="Submit" formaction="~/Tabs/Save" type="submit" value="Save Budget" style="align-self:center">
                                                                                   <i class='bx bx-check' style="color:limegreen"></i></button>
                                                          }
                                                          @if((!User.IsInRole("Admin") && IsDelegateSaved && !@Subs.RequireInput && DelegateEditStatus && (Model.EditEnabled != @Subs.SubGroupNo) )||(User.IsInRole("Admin") && IsAdminSaved && !@Subs.RequireInput && AdminEditStatus && (Model.EditEnabled != @Subs.SubGroupNo)))
                                                          {
                                                                                   <button style="border:none;background-color:white" id="@edit" class="Submit" formaction="~/Tabs/Edit" type="submit" value="Edit Budget" style="align-self:center">
                                                                                   <i class='bx bxs-pencil' style="color:blue"></i></button>
                                                           }
                                                           @if((!User.IsInRole("Admin") && !@Subs.RequireInput && DelegateEditStatus && (IsDelegateSaved  || (Model.EditEnabled == @Subs.SubGroupNo)))||(User.IsInRole("Admin") && !@Subs.RequireInput && AdminEditStatus && (IsAdminSaved|| (Model.EditEnabled == @Subs.SubGroupNo)) ))
                                                           {
                                                                                    <button style="border:none;background-color:white" id="@Budgetdelete" class="Submit" formaction="~/Tabs/BudgetDelete" type="submit" value="Delete Budget" style="align-self:center">
                                                                                    <i class='bx bx-x' style="color:red"></i>     
                                                                                    </button>
                                                           }
                                                           </td>
                                                    </tr>
                                                    
                                                            @if(LedgerCount > 0)
                                                            {
                                                                 LedgerNo = ++Count;
                                                                       @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                                                                       {

                                                                         var Ledgerdetails = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a).FirstOrDefault();
                                                                         var LedPrevYearApp = (from a in Model.Approved where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a).FirstOrDefault(); 
                                                                         
                                                                         Boolean LedgerIsDelegateSaved = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo)&& a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.HasDelegateSaved).FirstOrDefault();
                                                                         Boolean LedgerIsAdminSaved = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo)&& a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.HasAdminSaved).FirstOrDefault();

                                                                         <tr>
                                                                                <!--td></td -->
                                                                                <td style= "background-color:honeydew;"></td>
                                                                                <td style= "background-color:honeydew;">
                                                                                    @{
                                                                                        Model.SubGroupNameOrLedgerName.Insert(LedgerNo, Ledgers.LedgerNo);
                                                                                     }

                                                                                     @Html.DisplayFor(model => model.SubGroupNameOrLedgerName[LedgerNo])


                                                                                    @Html.HiddenFor(model => model.SubGroupNameOrLedgerName[LedgerNo])
                                                                                 </td>
                                                                                <td style= "background-color:honeydew;">@Ledgers.LedgerName</td>
                                                                                <td style= "background-color: floralwhite;">
                                                                                   
                                                                                    @if ((!DelegateEditStatus && IsSubmittedToACBW) || (!User.IsInRole("Admin") && LedgerIsDelegateSaved))
                                                                                    {
                                                                                       <div class="form-group"> 
                                                                                         
                                                                                         @{
                                                                                          Model.BudEstCurrFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.BudEstCurrFin.ToString("F4")): Convert.ToDecimal(0.00));
                                                                                          }     
                                                                                          @Html.TextBoxFor(model => model.BudEstCurrFin[LedgerNo], new { @class = "form-control", id = @name1 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly"})
                                                                                          @Html.ValidationMessageFor(model => model.BudEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div> 
                                                                                            
                                                                                    }
                                                                                        else
                                                                                        {
                                                                                            <div class="form-group">
                                                                                                @{
                                                                                                  Model.BudEstCurrFin.Insert(LedgerNo, LedPrevYearApp != null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                                }
                                                                                                @Html.TextBoxFor(model => model.BudEstCurrFin[LedgerNo], new { @class = "form-control", @id = @name1 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                                                @Html.ValidationMessageFor(model => model.BudEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                        }
                                                                                </td>
                                                                                <td style= "background-color: floralwhite;">
                                                                                        <div class="form-group">
                                                                                        @{
                                                                                            Model.InterimRevEst.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.InterimRevEst.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                        }
                                                                                            @Html.TextBoxFor(model => model.InterimRevEst[LedgerNo], new { @class = "form-control", @id = @name12+@Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.InterimRevEst[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                </td>
                                                                                <td style= "background-color: floralwhite;">
                                                                                        <div class="form-group">
                                                                                        @{
                                                                                            Model.ProvisionalRevEst.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.ProvisionalRevEst.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                        }
                                                                                            @Html.TextBoxFor(model => model.ProvisionalRevEst[LedgerNo], new { @class = "form-control", @id = @name13+@Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.ProvisionalRevEst[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                </td>
                                                                                <td style= "background-color: aliceblue;">
                                                                                    @if ((!DelegateEditStatus ) || (!User.IsInRole("Admin") && LedgerIsDelegateSaved && Model.EditEnabled!=@Ledgers.LedgerNo))
                                                                                    {
                                                                                        <div class="form-group"> 
                                                                                          @{
                                                                                            Model.ActPrevFin.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.ActPrevFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                           } 
                                                                                            @Html.TextBoxFor(model => model.ActPrevFin[LedgerNo], new { @class = "form-control", @id = @name2 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                                            @Html.ValidationMessageFor(model => model.ActPrevFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>  
                                                                                    }
                                                                                    else if(DelegateEditStatus && User.IsInRole("Admin"))
                                                                                    {
                                                                                        <div class="form-group"> 
                                                                                          @{
                                                                                            Model.ActPrevFin.Insert(LedgerNo, Convert.ToDecimal(0.00));
                                                                                           } 
                                                                                            @Html.TextBoxFor(model => model.ActPrevFin[LedgerNo], new { @class = "form-control", @id = @name2 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                                            @Html.ValidationMessageFor(model => model.ActPrevFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>  
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                       <div class="form-group">
                                                                                           @{
                                                                                              Model.ActPrevFin.Insert(LedgerNo,Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ActPrevFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                            }
                                                                                                @Html.TextBoxFor(model => model.ActPrevFin[LedgerNo], new { @class = "form-control", @id = @name2 + @Ledgers.LedgerNo, @dir = "rtl"})
                                                                                                @Html.ValidationMessageFor(model => model.ActPrevFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                      </div>  
                                                                                       
                                                                                    }
                                                                                </td>
                                                                                <td style= "background-color: aliceblue;">
                                                                                    @if ((!DelegateEditStatus)|| (!User.IsInRole("Admin") && LedgerIsDelegateSaved && Model.EditEnabled!=@Ledgers.LedgerNo))
                                                                                    {
                                                                                       <div class="form-group">
                                                                                           @{
                                                                                               Model.ActCurrFinTillsecondQuart.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ActCurrFinTill2ndQuart.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                            }
                                                                                               @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[LedgerNo], new { @class = "form-control", @id = @name3 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                                               @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                      </div>  
                                                                                    }
                                                                                    else if(DelegateEditStatus && User.IsInRole("Admin"))
                                                                                    {
                                                                                        <div class="form-group">
                                                                                           @{
                                                                                               Model.ActCurrFinTillsecondQuart.Insert(LedgerNo, Convert.ToDecimal(0.00));
                                                                                            }
                                                                                               @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[LedgerNo], new { @class = "form-control", @id = @name3 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                                               @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                      </div>  
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                       <div class="form-group">
                                                                                           @{
                                                                                            Model.ActCurrFinTillsecondQuart.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ActCurrFinTill2ndQuart.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                            }
                                                                                            @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[LedgerNo], new { @class = "form-control", @id = @name3+@Ledgers.LedgerNo, @dir = "rtl"})
                                                                                            @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                       </div> 
                                                                                    }
                                                                                </td>
                                                                                <td style= "background-color: aliceblue;">
                                                                                     @if(User.IsInRole("Admin") && DelegateEditStatus)
                                                                                    {
                                                                                        <div class="form-group">
                                                                                            @{
                                                                                            Model.RevEstCurrFin.Insert(LedgerNo, LedPrevYearApp != null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                            }   
                                                                                            @Html.TextBoxFor(model => model.RevEstCurrFin[LedgerNo], new { @type = "number", @class = "form-control", @id = @name4+@Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly"}) 
                                                                                            @Html.ValidationMessageFor(model => model.RevEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    }
                                                                                    else if (!DelegateEditStatus || (!User.IsInRole("Admin") && LedgerIsDelegateSaved && Model.EditEnabled!=@Ledgers.LedgerNo))
                                                                                    {
                                                                                        <div class="form-group">
                                                                                            @{
                                                                                            Model.RevEstCurrFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.RevEstCurrFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                           }
                                                                                            @Html.TextBoxFor(model => model.RevEstCurrFin[LedgerNo],new { @class = "form-control", @id = @name4+@Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.RevEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    } 
                                                                                    
                                                                                    else
                                                                                    {
                                                                                       <div class="form-group">
                                                                                           @if(Ledgerdetails!=null && !@Ledgerdetails.ProvisionalRevEst.Equals(Convert.ToDecimal(0.00)) && !LedgerIsDelegateSaved)
                                                                                           {
                                                                                               Model.RevEstCurrFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ProvisionalRevEst.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                           }
                                                                                           else
                                                                                           {
                                                                                               Model.RevEstCurrFin.Insert(LedgerNo, LedPrevYearApp != null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                           }
                                                                                            @Html.TextBoxFor(model => model.RevEstCurrFin[LedgerNo], new { @class = "form-control", @id = @name4+@Ledgers.LedgerNo, @dir = "rtl"}) 
                                                                                            @Html.ValidationMessageFor(model => model.RevEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                       </div>
                                                                                    }
                                                                                </td>
                                                                                    <td style= "background-color: aliceblue;">
                                                                                        @if (!DelegateEditStatus || (!User.IsInRole("Admin") && LedgerIsDelegateSaved))
                                                                                        {
                                                                                          <div class="form-group"> 
                                                                                              @{
                                                                                                    Model.PerVarRevEstOverBudgEstCurrFin.Insert(LedgerNo, (Ledgerdetails != null && Ledgerdetails.BudEstCurrFin != Convert.ToDecimal(0.0000)) ? (Convert.ToString(((Convert.ToDecimal(Convert.ToDecimal(Ledgerdetails.RevEstCurrFin.ToString("F4")) - Convert.ToDecimal(Ledgerdetails.BudEstCurrFin.ToString("F4"))) / Convert.ToDecimal(Ledgerdetails.BudEstCurrFin.ToString("F4")))) * 100)) : (0).ToString("F2"));
                                                                                              }
                                                                                              @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstCurrFin[LedgerNo],"{0:#.##}%", new { @class = "form-control", @id = @name5+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                              @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                          </div>
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                           <div class="form-group"> 
                                                                                               @{
                                                                                                    Model.PerVarRevEstOverBudgEstCurrFin.Insert(LedgerNo, (LedPrevYearApp != null && LedPrevYearApp.BudEstNextFin != Convert.ToDecimal(0.0000)) ? (Convert.ToString(((Convert.ToDecimal(Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4"))- Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4"))) / Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")))) * 100)) : (0).ToString("F2"));
                                                                                               }
                                                                                                @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstCurrFin[LedgerNo], "{0:#.##}%",new { @class = "form-control", @id = @name5+@Ledgers.LedgerNo,   @readonly = "readonly"})
                                                                                                @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                           </div>
                                                                                        }
                                                                                    </td>
                                                                                   
                                                                                    <td style= "background-color: aliceblue;">
                                                                                    @if (!DelegateEditStatus|| (!User.IsInRole("Admin") && LedgerIsDelegateSaved) && Model.EditEnabled!=@Ledgers.LedgerNo)
                                                                                    {
                                                                                            <div class="form-group">
                                                                                             @{  
                                                                                                Model.DelegateJustificationRevEst.Insert(LedgerNo, (Ledgerdetails != null && Ledgerdetails.DelegateJustificationRevEst!=null) ? Ledgerdetails.DelegateJustificationRevEst.ToString(): "");
                                                                                              }  
                                                                                            @Html.TextAreaFor(model => model.DelegateJustificationRevEst[LedgerNo], new { @class = "form-control", @id = @name14+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.DelegateJustificationRevEst[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                        
                                                                                    }
                                                                                    else if(User.IsInRole("Admin") && DelegateEditStatus)
                                                                                    {
                                                                                        <div class="form-group">
                                                                                             @{  
                                                                                                Model.DelegateJustificationRevEst.Insert(LedgerNo, "");
                                                                                              }  
                                                                                            @Html.TextAreaFor(model => model.DelegateJustificationRevEst[LedgerNo], new { @class = "form-control", @id = @name14+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.DelegateJustificationRevEst[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <div class="form-group">
                                                                                           @{ 
                                                                                              Model.DelegateJustificationRevEst.Insert(LedgerNo, (Ledgerdetails != null && Ledgerdetails.DelegateJustificationRevEst!=null) ? Ledgerdetails.DelegateJustificationRevEst.ToString() : "");
                                                                                             }   
                                                                                            @Html.TextAreaFor(model => model.DelegateJustificationRevEst[LedgerNo], new { @class = "form-control", @id = @name14+@Ledgers.LedgerNo})
                                                                                            @Html.ValidationMessageFor(model => model.DelegateJustificationRevEst[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                            
                                                                                    }
                                                                                </td>
                                                                                    @if (User.IsInRole("Admin") && AdminEditStatus && (!LedgerIsAdminSaved || Model.EditEnabled == @Ledgers.LedgerNo))
                                                                                    {
                                                                                        <td style= "background-color: aliceblue;">
                                                                                            <div class="form-group"> 
                                                                                                @{
                                                                                                  Model.ACAndBWPropRECurrFin.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.ACAndBWPropRECurrFin.ToString("F4"))  : Convert.ToDecimal(0.00));
                                                                                               }
                                                                                                
                                                                                                @Html.TextBoxFor(model => model.ACAndBWPropRECurrFin[LedgerNo], new { @class = "form-control", @id = @name6+@Ledgers.LedgerNo, @dir = "rtl"})
                                                                                                @Html.ValidationMessageFor(model => model.ACAndBWPropRECurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                        </td>
                                                                                    }
                                                                                    else if ((User.IsInRole("Admin") && !AdminEditStatus) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0) || (User.IsInRole("Admin") && LedgerIsAdminSaved))
                                                                                    {
                                                                                      <td style= "background-color: aliceblue;">
                                                                                          <div class="form-group">
                                                                                              @{
                                                                                                 Model.ACAndBWPropRECurrFin.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.ACAndBWPropRECurrFin.ToString("F4"))  : Convert.ToDecimal(0.00));
                                                                                               }
                                                                                            
                                                                                            @Html.TextBoxFor(model => model.ACAndBWPropRECurrFin[LedgerNo], new { @class = "form-control", @id = @name6+@Ledgers.LedgerNo, @dir = "rtl",@readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.ACAndBWPropRECurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                          </div>
                                                                                        </td>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        Model.ACAndBWPropRECurrFin.Insert(LedgerNo, Convert.ToDecimal(0.00));
                                                                                    }
                                                                                    
                                                                                        @if (User.IsInRole("Admin") && LedgerIsAdminSaved)
                                                                                        {
                                                                                            <td style= "background-color: aliceblue;">
                                                                                          <div class="form-group"> 
                                                                                              @{                                                                                                                                          
                                                                                              Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(LedgerNo, (Ledgerdetails!=null && Ledgerdetails.BudEstCurrFin!=Convert.ToDecimal(0.0000)) ? (Convert.ToString(((Convert.ToDecimal(Convert.ToDecimal(Ledgerdetails.ACAndBWPropRECurrFin.ToString("F4")) - Convert.ToDecimal(Ledgerdetails.BudEstCurrFin.ToString("F4"))) / Convert.ToDecimal(Ledgerdetails.BudEstCurrFin.ToString("F4"))))*100)) : (0).ToString("F2"));
                                                                                              }
                                                                                              @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[LedgerNo], "{0:#.##}%",new { @class = "form-control", @id = @name17+@Ledgers.LedgerNo,  @readonly = "readonly"})
                                                                                              @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                          </div>
                                                                                          </td>
                                                                                          
                                                                                          
                                                                                        }
                                                                                        else if(User.IsInRole("Admin") && !LedgerIsAdminSaved)
                                                                                        {
                                                                                            <td style= "background-color: aliceblue;">
                                                                                           <div class="form-group"> 
                                                                                               @{
                                                                                                 Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(LedgerNo, (LedPrevYearApp!=null && LedPrevYearApp.BudEstNextFin!=Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4"))- Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")))/Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")))*100) : (0).ToString("F2"));
                                                                                               }
                                                                                                @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[LedgerNo],"{0:#.##}%",new { @class = "form-control", @id = @name17+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                                @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                           </div>
                                                                                           </td>
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(LedgerNo, (0).ToString("F2"));
                                                                                        }
                                                                                    
                                                                                
                                                                                @if (User.IsInRole("Admin") && AdminEditStatus && (!LedgerIsAdminSaved || (Model.EditEnabled == @Ledgers.LedgerNo)))
                                                                                    {
                                                                                        <td style= "background-color: aliceblue;">
                                                                                            <div class="form-group"> 
                                                                                                @{
                                                                                                  Model.ACBWJustificationRevEst.Insert(LedgerNo, Ledgerdetails!=null && Ledgerdetails.ACBWJustificationRevEst!=null && Ledgerdetails.ACBWJustificationRevEst!=" " ? Ledgerdetails.ACBWJustificationRevEst.ToString()  : " ");
                                                                                               }
                                                                                                
                                                                                                @Html.TextBoxFor(model => model.ACBWJustificationRevEst[LedgerNo], new { @class = "form-control", @id = @name15+@Ledgers.LedgerNo})
                                                                                                @Html.ValidationMessageFor(model => model.ACBWJustificationRevEst[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                        </td>
                                                                                    }
                                                                                    else if ((User.IsInRole("Admin") && (!AdminEditStatus || LedgerIsAdminSaved)) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                                                    {
                                                                                      <td style= "background-color: aliceblue;">
                                                                                          <div class="form-group">
                                                                                              @{
                                                                                                 Model.ACBWJustificationRevEst.Insert(LedgerNo, Ledgerdetails!=null && Ledgerdetails.ACBWJustificationRevEst!=null && Ledgerdetails.ACBWJustificationRevEst!=" "? Ledgerdetails.ACBWJustificationRevEst.ToString() : "");
                                                                                               }
                                                                                            
                                                                                            @Html.TextBoxFor(model => model.ACBWJustificationRevEst[LedgerNo], new { @class = "form-control", @id = @name15+@Ledgers.LedgerNo,@readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.ACBWJustificationRevEst[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                          </div>
                                                                                        </td>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        Model.ACBWJustificationRevEst.Insert(LedgerNo, " ");
                                                                                    }
                                                                                <td style= "background-color:whitesmoke;">
                                                                                    @if (User.IsInRole("Admin") && DelegateEditStatus )
                                                                                    {
                                                                                        <div class="form-group">
                                                                                          @{
                                                                                            Model.BudgEstNexFin.Insert(LedgerNo, LedPrevYearApp!=null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                           }  
                                                                                            
                                                                                            @Html.TextBoxFor(model => model.BudgEstNexFin[LedgerNo], new { @class = "form-control", @id = @name7+@Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.BudgEstNexFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                      
                                                                                    }
                                                                                    else if (!DelegateEditStatus || (!User.IsInRole("Admin") && LedgerIsDelegateSaved && Model.EditEnabled!=@Ledgers.LedgerNo) )
                                                                                    {
                                                                                        <div class="form-group">
                                                                                          @{
                                                                                            Model.BudgEstNexFin.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.BudgEstNexFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                          }
                                                                                            
                                                                                            @Html.TextBoxFor(model => model.BudgEstNexFin[LedgerNo], new { @class = "form-control", @id = @name7+@Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.BudgEstNexFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                      
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <div class="form-group">
                                                                                          @if(Ledgerdetails!=null && !@Ledgerdetails.ProvisionalRevEst.Equals(Convert.ToDecimal(0.00)) && !LedgerIsDelegateSaved)
                                                                                          {
                                                                                             Model.BudgEstNexFin.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.ProvisionalRevEst.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                          }
                                                                                          else
                                                                                          {
                                                                                            Model.BudgEstNexFin.Insert(LedgerNo, LedPrevYearApp!=null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                          }
                                                                                            @Html.TextBoxFor(model => model.BudgEstNexFin[LedgerNo], new { @class = "form-control", @id = @name7+@Ledgers.LedgerNo, @dir = "rtl"})
                                                                                            @Html.ValidationMessageFor(model => model.BudgEstNexFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                      
                                                                                    }
                                                                                </td>
                                                                                    <td style= "background-color:whitesmoke;">
                                                                                        @if ((User.IsInRole("Admin") && (!AdminEditStatus || LedgerIsAdminSaved)))
                                                                                        {
                                                                                            <div class="form-group">
                                                                                             
                                                                                             @{
                                                                                                 Model.PerVarRevEstOverBudgEstNxtFin.Insert(LedgerNo, (Ledgerdetails!=null && Ledgerdetails.RevEstCurrFin!=Convert.ToDecimal(0.0000))  ? Convert.ToString(((Convert.ToDecimal(Ledgerdetails.BudgEstNexFin.ToString("F4"))- Convert.ToDecimal(Ledgerdetails.RevEstCurrFin.ToString("F4")))/Convert.ToDecimal(Ledgerdetails.RevEstCurrFin.ToString("F4")))*100) : (0).ToString("F2"));
                                                                                             }  
                                                                                             
                                                                                              @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstNxtFin[LedgerNo], "{0:#.##}%",new { @class = "form-control", @id = @name8+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                              @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstNxtFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                            
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <div class="form-group">
                                                                                            @{
                                                                                              Model.PerVarRevEstOverBudgEstNxtFin.Insert(LedgerNo, (LedPrevYearApp!=null && LedPrevYearApp.BudEstNextFin!=Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4"))- Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")))/Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")))*100) : (0).ToString("F2"));
                                                                                              }   
                                                                                              @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstNxtFin[LedgerNo],"{0:#.##}%",new { @class = "form-control", @id = @name8+@Ledgers.LedgerNo,  @readonly = "readonly"})
                                                                                              @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstNxtFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                            
                                                                                        }
                                                                                    </td>
                                                                                    <td style= "background-color:whitesmoke;">
                                                                                    @if (!DelegateEditStatus || (!User.IsInRole("Admin") && LedgerIsDelegateSaved && Model.EditEnabled!=@Ledgers.LedgerNo))
                                                                                    {
                                                                                            <div class="form-group">
                                                                                             @{  
                                                                                                Model.Justification.Insert(LedgerNo, (Ledgerdetails != null && Ledgerdetails.Justification!=null) ? Ledgerdetails.Justification.ToString(): "");
                                                                                              }  
                                                                                            @Html.TextAreaFor(model => model.Justification[LedgerNo], new { @class = "form-control", @id = @name10+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.Justification[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                        
                                                                                    }
                                                                                    else if(User.IsInRole("Admin") && DelegateEditStatus )
                                                                                    {
                                                                                        <div class="form-group">
                                                                                             @{  
                                                                                                Model.Justification.Insert(LedgerNo, "");
                                                                                              }  
                                                                                            @Html.TextAreaFor(model => model.Justification[LedgerNo], new { @class = "form-control", @id = @name10+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.Justification[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <div class="form-group">
                                                                                           @{ 
                                                                                              Model.Justification.Insert(LedgerNo, (Ledgerdetails != null && Ledgerdetails.Justification!=null) ? Ledgerdetails.Justification.ToString() : "");
                                                                                             }   
                                                                                            @Html.TextAreaFor(model => model.Justification[LedgerNo], new { @class = "form-control", @id = @name10+@Ledgers.LedgerNo})
                                                                                            @Html.ValidationMessageFor(model => model.Justification[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                            
                                                                                    }
                                                                                </td>
                                                                                @if (User.IsInRole("Admin") && AdminEditStatus && (!LedgerIsAdminSaved || (Model.EditEnabled == @Ledgers.LedgerNo)))
                                                                                {
                                                                                    <td style= "background-color:whitesmoke;">
                                                                                        <div class="form-group">
                                                                                          @{
                                                                                              Model.ACAndBWPropRENxtFin.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.ACAndBWPropRENxtFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                            }
                                                                                            @Html.TextBoxFor(model => model.ACAndBWPropRENxtFin[LedgerNo], new { @class = "form-control", @id = @name9+@Ledgers.LedgerNo, @dir = "rtl"})
                                                                                            @Html.ValidationMessageFor(model => model.ACAndBWPropRENxtFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                        
                                                                                    </td>
                                                                                }
                                                                                else if ((User.IsInRole("Admin") && (!AdminEditStatus || LedgerIsAdminSaved)) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                                                {
                                                                                    <td style= "background-color:whitesmoke;">
                                                                                        <div class="form-group">
                                                                                           @{
                                                                                              Model.ACAndBWPropRENxtFin.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.ACAndBWPropRENxtFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                             }   
                                                                                              @Html.TextBoxFor(model => model.ACAndBWPropRENxtFin[LedgerNo], new { @class = "form-control", @id = @name9+@Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly"})
                                                                                              @Html.ValidationMessageFor(model => model.ACAndBWPropRENxtFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                        
                                                                                    </td>
                                                                                }
                                                                                else
                                                                                    {
                                                                                        Model.ACAndBWPropRENxtFin.Insert(LedgerNo, Convert.ToDecimal(0.00));
                                                                                    }
                                                                                
                                                                                        @if ((User.IsInRole("Admin") && LedgerIsAdminSaved) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                                                        {
                                                                                          <td style= "background-color:whitesmoke;">
                                                                                            <div class="form-group">
                                                                                             
                                                                                             @{
                                                                                                 Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(LedgerNo, (Ledgerdetails!=null && Ledgerdetails.ACAndBWPropRECurrFin!=Convert.ToDecimal(0.0000))  ? Convert.ToString(((Convert.ToDecimal(Ledgerdetails.ACAndBWPropRENxtFin.ToString("F4"))- Convert.ToDecimal(Ledgerdetails.ACAndBWPropRECurrFin.ToString("F4")))/Convert.ToDecimal(Ledgerdetails.ACAndBWPropRECurrFin.ToString("F4")))*100) : (0).ToString("F2"));
                                                                                             }  
                                                                                             
                                                                                              @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[LedgerNo], "{0:#.##}%",new { @class = "form-control", @id = @name18+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                              @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                          </td>
                                                                                            
                                                                                        }
                                                                                        else if (User.IsInRole("Admin") && !LedgerIsAdminSaved)
                                                                                        {
                                                                                          <td style= "background-color:whitesmoke;">
                                                                                            <div class="form-group">
                                                                                            @{
                                                                                              Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(LedgerNo, (LedPrevYearApp!=null && LedPrevYearApp.BudEstNextFin!=Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4"))- Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")))/Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")))*100) : (0).ToString("F2"));
                                                                                              }   
                                                                                              @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[LedgerNo],"{0:#.##}%",new { @class = "form-control", @id = @name18+@Ledgers.LedgerNo,  @readonly = "readonly"})
                                                                                              @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                           </td>
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(LedgerNo,(0).ToString("F2"));
                                                                                        }
                                                                                    
                                                                                @if (User.IsInRole("Admin") && AdminEditStatus && (!LedgerIsAdminSaved || (Model.EditEnabled == @Ledgers.LedgerNo)))
                                                                                    {
                                                                                        <td style= "background-color:whitesmoke;">
                                                                                            <div class="form-group"> 
                                                                                                @{
                                                                                                  Model.ACBWJustificationBudgEstNxtFin.Insert(LedgerNo, Ledgerdetails!=null && Ledgerdetails.ACBWJustificationBudgEstNxtFin!=null && Ledgerdetails.ACBWJustificationBudgEstNxtFin!=" "? Ledgerdetails.ACBWJustificationBudgEstNxtFin.ToString()  : " ");
                                                                                               }
                                                                                                
                                                                                                @Html.TextAreaFor(model => model.ACBWJustificationBudgEstNxtFin[LedgerNo], new { @class = "form-control", @id = @name16+@Ledgers.LedgerNo})
                                                                                                @Html.ValidationMessageFor(model => model.ACBWJustificationBudgEstNxtFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                        </td>
                                                                                    }
                                                                                    else if ((User.IsInRole("Admin") && (!AdminEditStatus || LedgerIsAdminSaved)) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                                                    {
                                                                                      <td style= "background-color:whitesmoke;">
                                                                                          <div class="form-group">
                                                                                              @{
                                                                                                 Model.ACBWJustificationBudgEstNxtFin.Insert(LedgerNo, Ledgerdetails!=null && Ledgerdetails.ACBWJustificationBudgEstNxtFin!=null && Ledgerdetails.ACBWJustificationBudgEstNxtFin!=" " ? Ledgerdetails.ACBWJustificationBudgEstNxtFin.ToString() : "");
                                                                                               }
                                                                                            
                                                                                            @Html.TextAreaFor(model => model.ACBWJustificationBudgEstNxtFin[LedgerNo], new { @class = "form-control", @id = @name16+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.ACBWJustificationBudgEstNxtFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                          </div>
                                                                                        </td>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        Model.ACBWJustificationBudgEstNxtFin.Insert(LedgerNo, " ");
                                                                                    }
                                                                                <td style="background-color:honeydew;">  
                                                                                    <table class="table" >
                                                                                    <thead> </thead>
                                                                                    <tbody>
                                                                                       @if ((!User.IsInRole("Admin") && GroupsStatusRowCount == 0 && Model.IsEnabled.Equals(true) && (!LedgerIsDelegateSaved || Model.EditEnabled ==@Ledgers.LedgerNo)))
                                                                                        {
                                                                                            <tr><td  style="border:none"> @Html.TextBoxFor(m => m.File, new { type = "file", @id = @name11+@Ledgers.LedgerNo, @dir = "rtl"})</td> </tr>
                                                                                            <tr><td  style="border:none"> @Html.ValidationMessage("Caution"+LedgerNo,"* only .pdf files with size 1 MB are allowed",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})</td></tr>
                                                                                            <tr><td  style="border:none"> @Html.ValidationMessage("FileMessage_"+LedgerNo,null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})</td></tr>
                                                                                            <br/>
                                                                                            <tr><td style="border:none"> <input id="@upload@Ledgers.LedgerNo" class="Submit" formaction="~/Tabs/Upload" type="submit" value="Upload" /></td> </tr>
                                                                                        }
                                                                                        
                                                                                    @foreach(var LedgerFiles in Model.Filess.Where (a => (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo))))
                                                                                    {
                                                                                        var FinalSubmitStatus = (from a in Model.Statuss where (a.SectionNumber == 0 && a.GroupNumber.Equals("0")) select a.AdminEditStatus).Count();
                                                                                                    <tr>
                                                                                                        @if ((User.IsInRole("Admin") && AdminEditStatus) || !User.IsInRole("Admin") || (User.IsInRole("Admin") && (FinalSubmitStatus > 0)))
                                                                                                        {
                                                                                                            <td style="border:none">@Html.ActionLink(@LedgerFiles.FileName,null,null,null,new{href =@LedgerFiles.SupportingDocumentPath, target = "_blank"} )</td>
                                                                                                            /*<td><input id="@view" class="ViewFile  btn-link" style="border:none; outline:none;  background-color: transparent;" formaction="~/Tabs/ViewFile" type="submit" value= "@LedgerFiles.FileName" /></td>*/
                                                                                                        }
                                                                                                        @if (!User.IsInRole("Admin") && GroupsStatusRowCount == 0 && !LedgerIsDelegateSaved)
                                                                                                        {
                                                                                                           <td style="border:none"><input id="@delete@Ledgers.LedgerNo" class="Submit btn-link" style="border:none; outline:none;  background-color: transparent;" formaction="~/Tabs/Delete" type="submit" value="Delete"/> </td>
                                                                                                        }
                                                                                                     </tr>      
                                                                                         
                                                                                    }
                                                                                    </tbody>
                                                                                    </table>
                                                                                </td>
                                                                                <td style="background-color:honeydew;">
                                                                                    @if((!User.IsInRole("Admin") && DelegateEditStatus && (!LedgerIsDelegateSaved || Model.EditEnabled==@Ledgers.LedgerNo) )||(User.IsInRole("Admin") && AdminEditStatus && (!LedgerIsAdminSaved  || (Model.EditEnabled == @Ledgers.LedgerNo))))
                                                                                    {
                                                                                
                                                                                   <button style="border:none;background-color:white" id="@save" class="Submit" formaction="~/Tabs/Save" type="submit" value="Save Budget" style="align-self:center">
                                                                                   <i class='bx bx-check' style="color:limegreen"></i></button>
                                                                                    }
                                                                                    @if ((!User.IsInRole("Admin") && LedgerIsDelegateSaved && DelegateEditStatus && (Model.EditEnabled != @Ledgers.LedgerNo)) || (User.IsInRole("Admin") && LedgerIsAdminSaved && AdminEditStatus && (Model.EditEnabled != @Ledgers.LedgerNo)))
                                                                                    {
                                                                                            <button style="border:none;background-color:white" id="@edit" class="Submit" formaction="~/Tabs/Edit" type="submit" value="Edit Budget" style="align-self:center">
                                                                                                <i class='bx bxs-pencil' style="color:blue"></i></button>
                                                                                    }
                                                                                @if((!User.IsInRole("Admin") && DelegateEditStatus && (LedgerIsDelegateSaved || Model.EditEnabled==@Ledgers.LedgerNo ))||(User.IsInRole("Admin") && AdminEditStatus && (LedgerIsAdminSaved || (Model.EditEnabled == @Ledgers.LedgerNo))))
                                                                                {
                                                                                            <button style="border:none;background-color:white" id="@Budgetdelete" class="Submit" formaction="~/Tabs/BudgetDelete" type="submit" value="Delete Budget" style="align-self:center">
                                                                                                <i class='bx bx-x' style="color:red"></i>     
                                                                                            </button>
                                                                                 }
                                                                                 </td>
                                                                         </tr>
                                                                            
                                                                        ++LedgerNo;
                                                                       }
                                                                        
                                                                        Count = LedgerNo-1;
                                                            }
                                                    
                                                    Count++;
                                                    TableCount++;
                                        }
                                                <tr>
                                                    <!--td>
                                                    </td-->
                                                    <td>
                                                    </td>
                                                    <td>
                                                        Sub-Total
                                                    </td>
                                                    <td>
                                                        Sub-Total
                                                    </td>

                                                    <td id="@Sumname1-Total">
                                                        @SumBudEstCurrFin.ToString("F4")
                                                    </td>
                                                    <td></td>
                                                    
                                                    <td></td>
                                                    
                                                    @if((User.IsInRole("Admin") && IsSubmittedToACBW) || !User.IsInRole("Admin") )
                                                    {
                                                    <td id="@Sumname2-Total">
                                                       @SumActPrevFin.ToString("F4")
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                     <td id="@Sumname2-Total">
                                                       0.00
                                                    </td>
                                                    }
                                                    @if((User.IsInRole("Admin") && IsSubmittedToACBW) || !User.IsInRole("Admin"))
                                                    {
                                                    <td id="@Sumname3-Total">
                                                        @SumActCurrFinTill2ndQuart.ToString("F4")
                                                    </td>
                                                    }
                                                    else
                                                    {
                                                     <td id="@Sumname3-Total">
                                                       0.00
                                                    </td>
                                                    }
                                                    @if ((User.IsInRole("Admin") && IsSubmittedToACBW) || !User.IsInRole("Admin"))
                                                    {
                                                        <td id="@Sumname4-Total">
                                                            @SumRevEstCurrFin.ToString("F4")
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                     <td id="@Sumname4-Total">
                                                       0.00
                                                     </td>
                                                    }
                                                    <td id="@Sumname5-Total">
                                                        @SumPerVarRevEstOverBudgEstCurrFin.ToString("F2") %
                                                    </td>
                                                    <td></td>
                                                    @if (User.IsInRole("Admin") || (!User.IsInRole("Admin")&& !FinalAdminEditStatus && FinalAdminEditCount>0))
                                                    {
                                                        <td id="@Sumname6-Total">
                                                            @SumACAndBWPropRECurrFin.ToString("F4")
                                                        </td>
                                                    }
                                                    @if (User.IsInRole("Admin"))
                                                    {
                                                    <td id="@Sumname11-Total">
                                                        @SumPerVarACBWRevEstOverBudgEstCurrFin.ToString("F2") %
                         
                                                    </td>
                                                    }
                                                    @if (User.IsInRole("Admin") || (!User.IsInRole("Admin")&& !FinalAdminEditStatus && FinalAdminEditCount>0))
                                                    {
                                                    <td></td>
                                                    }
                                                    <td id="@Sumname7-Total">
                                                       @SumBudgEstNexFin.ToString("F4")
                                                    </td>
                                                    <td id="@Sumname8-Total">
                                                        @SumPerVarRevEstOverBudgEstNxtFin.ToString("F2") %
                                                    </td>
                                                    <td></td>
                                                    @if (User.IsInRole("Admin") || (!User.IsInRole("Admin")&& !FinalAdminEditStatus && FinalAdminEditCount>0))
                                                    {
                                                        <td id="@Sumname9-Total">
                                                            @SumACAndBWPropRENxtFin.ToString("F4")
                                                        </td>
                                                    }
                                                    @if (User.IsInRole("Admin"))
                                                    {
                                                        <td id="@Sumname12-Total">
                                                            @SumPerVarACBWRevEstOverBudgEstNxtFin.ToString("F2") %
                                                        </td>
                                                    }
                                                    @if (User.IsInRole("Admin") || (!User.IsInRole("Admin")&& !FinalAdminEditStatus && FinalAdminEditCount>0))
                                                    {
                                                        <td></td>
                                                    }
                                                    <td style="border:none;"></td>
                                                    <td style="border:none;"></td>
                                                    
                                                </tr>
                                    </tbody>
                                </table>
                                        @*Html.Hidden("SectionName",Model.SectionName, new{@id = @identi+"-SectionName" })
                                        @Html.Hidden("GroupName",Model.GroupName,  new{@id = @identi+"-GroupName" })
                                        @Html.Hidden("SelectedAcademicYear", Model.SelectedAcademicYear,  new{@id = @identi+"-SelectedAcademicYear" })
                                        @Html.Hidden("SelectedDivisionName",Model.SelectedDivisionName,  new{@id = @identi+"-SelectedDivisionName" })
                                        @{
                                            var TotalDelegateSavedLedgers = (from d in Model.Detailss where d.SectionNumber.Equals(@inner.SectionNo)  && d.GroupNumber.Equals(@item.GroupNo) && d.HasDelegateSaved.Equals(true) select d.SubGroupNumber).Count();
                                            var TotalAdminSavedLedgers = (from e in Model.Detailss where e.SectionNumber.Equals(@inner.SectionNo)  && e.GroupNumber.Equals(@item.GroupNo) && e.HasAdminSaved.Equals(true) select e.SubGroupNumber).Count();
                                            Boolean ACBWSubmission = (from a in Model.Statuss where a.SectionNumber.Equals(@inner.SectionNo)  && a.GroupNumber.Equals(@item.GroupNo) select a.ACBWSubmission).FirstOrDefault();
                                         }
                                        
                                    @if (User.IsInRole("Admin") && AdminEditStatus && (TotalAdminSavedLedgers == TotalSubGroups)  && Model.IsEnabled.Equals(true) && !ACBWSubmission)
                                    {
                                            <input id="@SubmitChairPerson" class="Submit" formaction="~/Tabs/Index" type="submit" value="Submit to Chairperson for Approval" style="align-self:center"/>
                                        }
                                        else if(!User.IsInRole("Admin") && DelegateEditStatus && (TotalDelegateSavedLedgers == TotalSubGroups)  && Model.IsEnabled.Equals(true))
                                        {
                                            <input id="@SubmitACBW" class="Submit" formaction="~/Tabs/Index" type="submit" value="Submit to AC&BW for Approval" style="align-self:center"/>
                                        }
                                        }*@
                            </div>
                          
                        }
                        else
                        {
                                                    
                            <div id="@identi" class="tab-pane fade" role="tabpanel" aria-labelledby="@identi-tab" style="width: 1750px;">
                                <br />
                                 @if (!User.IsInRole("Admin") && AdminEditStatus && @Model.ApprovedMessage.Equals(" "))
                                 {
                                   <div style="color:green"> * Budget proposal @Model.SelectedAcademicYear for <span style="color:red">'@item.GroupName'</span> has been submitted to AC&BW successfully </div>
                                 }
                                 else if(User.IsInRole("Admin") && GroupACBWSubmissionStatus && IsSubmittedToChairman == 0)
                                {
                                    <div style="color:green"> * Budget values for @Model.SelectedAcademicYear for <span style="color:red">'@item.GroupName'</span> has been saved successfully </div>
                                }
                                        <div class="fw-bold text-center">
                                           <span colspan="23" style="color:red;border-bottom:hidden;">(*FIGURES IN CRORES)</span>
                                 </div>
                                <table id="@identi-outertable" class="table table-responsive table-bordered table-hover" style="width:2600px;" >
                                            <!--th></!--th-->
                                    <thead>
                                        
                                        <tr>
                                          @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                          {
                                           <th colspan="3" class="align-text-middle" style="background-color:honeydew;">     </th>
                                           <th colspan="3" class="align-text-middle" style= "background-color: floralwhite;text-align:center;"> Interim Revision Sections </th>
                                           <th colspan="8" class="align-text-middle" style= "background-color: aliceblue;text-align:center;"> Revision Estimates Section of CY    </th>
                                           <th colspan="6" class="align-text-middle" style= "background-color:whitesmoke;text-align:center;">Budget Estimates Section of Next Year   </th>
                                           <th colspan="2" class="align-text-middle" style="background-color:honeydew;">     </th>
                                          }
                                          else
                                          {
                                              <th colspan="3" class="align-text-middle" style="background-color:honeydew;">     </th>
                                              <th colspan="3" class="align-text-middle" style= "background-color: floralwhite;text-align:center;"> Interim Revision Sections </th>
                                              <th colspan="5" class="align-text-middle" style= "background-color: aliceblue;text-align:center;"> Revision Estimates Section of CY    </th>
                                              <th colspan="3" class="align-text-middle" style= "background-color:whitesmoke;text-align:center;">Budget Estimates Section of Next Year   </th>
                                              <th colspan="2" class="align-text-middle" style="background-color:honeydew;">     </th>
                                          }
                                        </tr>
                                        <tr class="align-text-top">
                                            <!--th></!--th-->
                                            <th style="width:100px;background-color:honeydew;">
                                                @*SubGroupNumber*@
                                                HEAD NO.
                                            </th>
                                            <th style="width:100px;background-color:honeydew;">
                                                SUBHEAD NO.
                                            </th>
                                            <th style="width:130px;background-color:honeydew;">
                                                @*SubGroupName*@
                                                HEAD NAME
                                            </th>
                                            <th class="CurrentBudgetEstimates" style= "background-color: floralwhite;width:130px;">
                                                        
                                            </th>
                                            <th class="InterimRevEst" style= "background-color: floralwhite;width:130px;">
                                                        
                                            </th>
                                            <th class="ProvisionalRevEst" style= "background-color: floralwhite;width:130px;">
                                                        
                                            </th>
                                            <th class="PreviousActualBudget" style= "background-color: aliceblue;width:130px;">
                                                
                                            </th>
                                            <th class="PreviousHalfYearActualBudget" style= "background-color: aliceblue;width:130px;">
                                                
                                            </th>
                                            <th class="CurrentYearRevisedEstimates" style= "background-color: aliceblue;width:130px;">
                                                
                                            </th>
                                            <th class="VariationInRevisedEstimates" style= "background-color: aliceblue;width:100px;">
                                                       
                                            </th>
                                            <th class="DelegateJustificationRevEst" style= "background-color: aliceblue;width:130px;">
                                                       
                                            </th>
                                            @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                             {
                                               <th class="ACBWProposalForRevisedEstimates" style= "background-color: aliceblue;width:130px;">
                                                 
                                               </th>
                                               }
                                             @if (User.IsInRole("Admin"))
                                             {
                                             <th class="VariationInRevisedEstimates" style= "background-color: aliceblue;width:100px;">
                                                      
                                            </th>
                                            } 
                                            @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                             {
                                                        <th class="ACBWJustificationRevEst" style= "background-color: aliceblue;width:130px;">

                                                        </th>
                                                    }
                                            <th class="BudgetEstimatesNextYear" style= "background-color:whitesmoke;width:130px;">
                                                
                                            </th>
                                            <th class="VariationInBudgetEstimates" style= "background-color:whitesmoke;width:100px;">
                                                
                                            </th>
                                           
                                            <th class="Justification " style= "background-color:whitesmoke;width: 130px;">
                                                       
                                            </th>
                                            @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                    {
                                                        <th class="ACBWProposalForBudgetEstimates" style= "background-color:whitesmoke;width:130px;">

                                                        </th>

                                                    }
                                                @if (User.IsInRole("Admin"))
                                                {
                                                <th class="VariationInBudgetEstimates" style= "background-color:whitesmoke;width:100px;">
                                                
                                                </th>
                                                
                                                }
                                               @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                               {
                                                        <th class="ACBWJustificationBudgEstNxtFin" style= "background-color:whitesmoke;width:130px;">

                                                        </th>
                                                    }
                                               <th class="UploadDocuments" style="width:130px;background-color:honeydew;">
                                                       
                                               </th>
                                               <th style="width:50px;background-color:honeydew;">Action</th>
                                        </tr>
                                    </thead>
                                    <tbody> 
                                        
                                        @foreach (var Subs in Model.SubGroupss.Where(d => d.GroupNo.Equals(@item.GroupNo)))
                                        {
                                                    var details = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a).FirstOrDefault();
                                                    var PrevYearApp =  (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a).FirstOrDefault();
                                                    
                                                    var TotalLedgers = (from c in Model.Ledgerss where c.SubGroupNo.Equals(@Subs.SubGroupNo) select c.LedgerNo).Count();

                                                    TotalSubGroups = (TotalSubGroups + TotalLedgers);

                                                    @if(@Subs.RequireInput)
                                                    {
                                                        int DelegateSavedCount = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.HasDelegateSaved.Equals(true) select a.SubGroupNumber).Count();
                                                        int AdminSavedCount = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.HasAdminSaved.Equals(true) select a.SubGroupNumber).Count();
                                                        
                                                        @if(DelegateSavedCount > 0)
                                                             IsDelegateSaved = true;
                                                        else
                                                            IsDelegateSaved = false;

                                                        @if(AdminSavedCount > 0)
                                                             IsAdminSaved = true;
                                                        else
                                                            IsAdminSaved = false;
                                                    }
                                                    else
                                                    {
                                                     IsDelegateSaved = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.HasDelegateSaved).FirstOrDefault();
                                                     IsAdminSaved = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.HasAdminSaved).FirstOrDefault();
                                                    }
                                                    var name1 = String.Concat("BudEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name2 = String.Concat("ActPrevFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name3 = String.Concat("ActCurrFinTillsecondQuart", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name4 = String.Concat("RevEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name5 = String.Concat("PerVarRevEstOverBudgEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name6 = String.Concat("ACAndBWPropRECurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name7 = String.Concat("BudgEstNexFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name8 = String.Concat("PerVarRevEstOverBudgEstNxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name9 = String.Concat("ACAndBWPropRENxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name10 = String.Concat("Justification", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name11 = String.Concat("UploadFile", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name12 = String.Concat("InterimRevEst", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name13 = String.Concat("ProvisionalRevEst", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name14 = String.Concat("DelegateJustificationRevEst", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name15 = String.Concat("ACBWJustificationRevEst", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name16 = String.Concat("ACBWJustificationBudgEstNxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name17 = String.Concat("PerVarACBWRevEstOverBudgEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name18 = String.Concat("PerVarACBWRevEstOverBudgEstNxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);


                                                    var upload = String.Concat("UploadButton", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var delete = String.Concat("DeleteButton", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var view = String.Concat("ViewButton", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);

                                                    var save = String.Concat("Save", @inner.SectionNo.ToString(),"_",@item.GroupNo, @TableCount);
                                                    var edit = String.Concat("Edit", @inner.SectionNo.ToString(), "_",@item.GroupNo, @TableCount);
                                                    var Budgetdelete = String.Concat("Delete", @inner.SectionNo.ToString(), "_",@item.GroupNo, @TableCount);

                                                    var LedgerCount = (from a in Model.Ledgerss where a.SubGroupNo.Equals(@Subs.SubGroupNo) select a.LedgerNo).Count();
                                                    
                                                     

                                                    <tr>
                                                        <!--td class=""></!--td-->
                                                        <td style= "background-color:honeydew;">
                                                            @{
                                                              Model.SubGroupNameOrLedgerName.Insert(Count, Subs.SubGroupNo);
                                                             }

                                                            @Html.DisplayFor(model => model.SubGroupNameOrLedgerName[Count])
                                                            @Html.HiddenFor(model => model.SubGroupNameOrLedgerName[Count])
                                                        </td>
                                                        <td style= "background-color:honeydew;"></td>
                                                        <td style= "background-color:honeydew;">
                                                            @Subs.subGroupName
                                                        </td>
                                                        <td style= "background-color: floralwhite;">
                                                        
                                                        @if (@Subs.RequireInput && DelegateEditStatus && !IsDelegateSaved)
                                                        {
                                                            var LedgerPastYearAppBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();

                                                                <div class="form-group text-nowrap"> 
                                                                 @{
                                                                        Model.BudEstCurrFin.Insert(Count, LedgerPastYearAppBudEstCurrFin != null ? Convert.ToDecimal(LedgerPastYearAppBudEstCurrFin) : Convert.ToDecimal(0.00));
                                                                   }
                                                                 @Html.TextBoxFor(model => model.BudEstCurrFin[Count],new { @maxlength="20", @class = "form-control", @id = @name1, @dir = "rtl",@readonly = "readonly"} )
                                                                 @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})

                                                                </div>
                                                            
                                                        }
                                                        else if ((@Subs.RequireInput && !DelegateEditStatus && IsSubmittedToACBW) || (@Subs.RequireInput && !User.IsInRole("Admin") && IsDelegateSaved))
                                                        {
                                                            var LedgerSumBudEstCurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstCurrFin).Sum();                                                                                                                            
                                                            
                                                            <div class="form-group text-nowrap">
                                                                    @{
                                                                        Model.BudEstCurrFin.Insert(Count, LedgerSumBudEstCurrFin != null ? Convert.ToDecimal(LedgerSumBudEstCurrFin) : Convert.ToDecimal(0.00));
                                                                     }
                                                                     @Html.TextBoxFor(model => model.BudEstCurrFin[Count],new { @maxlength="20", @class = "form-control", @id = @name1, @dir = "rtl", @readonly = "readonly"} )
                                                                     @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                
                                                            }

                                                            else if ((!DelegateEditStatus && IsSubmittedToACBW) || (!User.IsInRole("Admin") && IsDelegateSaved))
                                                            {
                                                                <div class="form-group text-nowrap">
                                                                   
                                                                   @{
                                                                        Model.BudEstCurrFin.Insert(Count, details != null ? Convert.ToDecimal(details.BudEstCurrFin) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @maxlength="20",@class = "form-control", @id = @name1, @dir = "rtl", @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})

                                                                </div>
                                                                
                                                            }
                                                            else
                                                            {
                                                                <div class="form-group ">
                                                                    @{
                                                                        Model.BudEstCurrFin.Insert(Count,(PrevYearApp != null) ? Convert.ToDecimal(PrevYearApp.BudEstNextFin) : Convert.ToDecimal(0.00));
                                                                     }
                                                                    @Html.TextBoxFor(model => model.BudEstCurrFin[Count],new { @maxlength="20",@class = "form-control", @id = @name1, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})

                                                                </div>
                                                                
                                                        }
                                                        </td>
                                                        <td style= "background-color: floralwhite;">
                                                        
                                                        @if (@Subs.RequireInput)
                                                        {
                                                            var LedgerSumInterimRevEst = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.InterimRevEst).Sum();                                                                                                                            
                                                            
                                                            <div class="form-group">
                                                                    @{
                                                                        Model.InterimRevEst.Insert(Count, LedgerSumInterimRevEst != null ? Convert.ToDecimal(LedgerSumInterimRevEst) : Convert.ToDecimal(0.00));
                                                                     }
                                                                     @Html.TextBoxFor(model => model.InterimRevEst[Count], new { @maxlength="20",@class = "form-control", @id = @name12, @dir = "rtl", @readonly = "readonly"} )
                                                                     @Html.ValidationMessageFor(model => model.InterimRevEst[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                        }
                                                        else 
                                                        {
                                                                <div class="form-group">
                                                                   @{
                                                                        Model.InterimRevEst.Insert(Count, details != null ? Convert.ToDecimal(details.InterimRevEst) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.InterimRevEst[Count], new { @maxlength="20",@class = "form-control", @id = @name12, @dir = "rtl", @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.InterimRevEst[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                        }
                                                           
                                                        </td>
                                                        <td style= "background-color: floralwhite;">
                                                        
                                                        @if (@Subs.RequireInput)
                                                        {
                                                            var LedgerSumProvisionalRevEst = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ProvisionalRevEst).Sum();                                                                                                                            
                                                            
                                                            <div class="form-group">
                                                                    @{
                                                                        Model.ProvisionalRevEst.Insert(Count, LedgerSumProvisionalRevEst != null ? Convert.ToDecimal(LedgerSumProvisionalRevEst) : Convert.ToDecimal(0.00));
                                                                     }
                                                                     @Html.TextBoxFor(model => model.ProvisionalRevEst[Count], new {@maxlength="20", @class = "form-control", @id = @name13, @dir = "rtl", @readonly = "readonly"} )
                                                                     @Html.ValidationMessageFor(model => model.ProvisionalRevEst[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                        }
                                                        else 
                                                        {
                                                                <div class="form-group">
                                                                   @{
                                                                        Model.ProvisionalRevEst.Insert(Count, details != null ? Convert.ToDecimal(details.ProvisionalRevEst) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.ProvisionalRevEst[Count], new { @maxlength="20",@class = "form-control", @id = @name13, @dir = "rtl", @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.ProvisionalRevEst[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                        }
                                                           
                                                        </td>
                                                        <td style= "background-color: aliceblue;">
                                                        @if(DelegateEditStatus && User.IsInRole("Admin"))
                                                        {
                                                            <div>
                                                               @{
                                                                  Model.ActPrevFin.Insert(Count, Convert.ToDecimal(0.00));
                                                                }   
                                                                @Html.TextBoxFor(model => model.ActPrevFin[Count], new { @maxlength="20",@class = "form-control", @id = @name2, @dir = "rtl", @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.ActPrevFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        else if (@Subs.RequireInput)
                                                        {
                                                            var LedgerSumActPrevFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActPrevFin).Sum();
                                                            <div class="form-group">  
                                                               @{
                                                                  Model.ActPrevFin.Insert(Count, LedgerSumActPrevFin != null ? Convert.ToDecimal(LedgerSumActPrevFin) : Convert.ToDecimal(0.00));
                                                                }   
                                                                @Html.TextBoxFor(model => model.ActPrevFin[Count], new { @maxlength="20",@class = "form-control", @id = @name2, @dir = "rtl", @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.ActPrevFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                            
                                                        }
                                                        else if ((!DelegateEditStatus) || (!User.IsInRole("Admin") && IsDelegateSaved  && Model.EditEnabled!=@Subs.SubGroupNo))
                                                        {
                                                                <div class="form-group">
                                                                  @{ 
                                                                     Model.ActPrevFin.Insert(Count, details != null ? Convert.ToDecimal(details.ActPrevFin) : Convert.ToDecimal(0.00));
                                                                   }
                                                                    @Html.TextBoxFor(model => model.ActPrevFin[Count], new { @maxlength="20",@class = "form-control", @id = @name2, @dir = "rtl", @readonly = "readonly"} )
                                                                    @Html.ValidationMessageFor(model => model.ActPrevFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                
                                                        }
                                                        else
                                                        {
                                                            <div class="form-group">
                                                               @{
                                                                  Model.ActPrevFin.Insert(Count, details != null ? Convert.ToDecimal(details.ActPrevFin) : Convert.ToDecimal(0.00));
                                                                }
                                                                @Html.TextBoxFor(model => model.ActPrevFin[Count], new { @maxlength="20",@class = "form-control", @id = @name2, @dir = "rtl"  })
                                                                @Html.ValidationMessageFor(model => model.ActPrevFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                            
                                                        }
                                                        </td>
                                                        <td style= "background-color: aliceblue;">
                                                        @if(DelegateEditStatus && User.IsInRole("Admin"))
                                                        {
                                                            <div class="form-group">
                                                               @{
                                                                  Model.ActCurrFinTillsecondQuart.Insert(Count, Convert.ToDecimal(0.00));
                                                                 }
                                                                 @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[Count], new { @class = "form-control", @id = @name3, @dir = "rtl", @readonly = "readonly"})
                                                                 @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        
                                                        else if (@Subs.RequireInput)
                                                        {
                                                                var LedgerSumActCurrFinTill2ndQuart = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActCurrFinTill2ndQuart).Sum();
                                                             <div class="form-group">
                                                               @{
                                                                  Model.ActCurrFinTillsecondQuart.Insert(Count, LedgerSumActCurrFinTill2ndQuart != null ? Convert.ToDecimal(LedgerSumActCurrFinTill2ndQuart) : Convert.ToDecimal(0.00));
                                                                 }
                                                                 @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[Count], new { @class = "form-control", @id = @name3, @dir = "rtl", @readonly = "readonly"})
                                                                 @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                
                                                            }
                                                        else if (!DelegateEditStatus || (!User.IsInRole("Admin") && IsDelegateSaved  && Model.EditEnabled!=@Subs.SubGroupNo))                                                       {                                       
                                                              <div class="form-group">
                                                                @{
                                                                   Model.ActCurrFinTillsecondQuart.Insert(Count, details != null ? Convert.ToDecimal(details.ActCurrFinTill2ndQuart) : Convert.ToDecimal(0.00));
                                                                 }
                                                                  @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[Count], new { @class = "form-control", @id = @name3, @dir = "rtl", @readonly = "readonly"})
                                                                 @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                
                                                            }
                                                        else
                                                        {
                                                            <div class="form-group">
                                                               @{ 
                                                                  Model.ActCurrFinTillsecondQuart.Insert(Count, details != null ? Convert.ToDecimal(details.ActCurrFinTill2ndQuart) : Convert.ToDecimal(0.00));
                                                                } 
                                                                @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[Count], new { @class = "form-control", @dir = "rtl", @id = @name3})
                                                                @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                            
                                                        }
                                                        </td>
                                                        <td style= "background-color: aliceblue;">
                                                        @if (@Subs.RequireInput && DelegateEditStatus && !IsDelegateSaved)
                                                        {
                                                                var PastYearBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin ).Sum();
                                                            <div class="form-group">
                                                               @{ 
                                                                 Model.RevEstCurrFin.Insert(Count, PastYearBudEstCurrFin != null ? Convert.ToDecimal(PastYearBudEstCurrFin) : Convert.ToDecimal(0.00));
                                                                } 
                                                                 @Html.TextBoxFor(model => model.RevEstCurrFin[Count], new { @class = "form-control", @id = @name4, @dir = "rtl", @readonly = "readonly"})
                                                                 @Html.ValidationMessageFor(model => model.RevEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                                
                                                            }
                                                        else if ((@Subs.RequireInput && !DelegateEditStatus) || (@Subs.RequireInput && !User.IsInRole("Admin") && IsDelegateSaved && Model.EditEnabled!=@Subs.SubGroupNo))
                                                        {
                                                                var PastYearBudEstCurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.RevEstCurrFin).Sum();
                                                            <div class="form-group">
                                                             @{   
                                                                Model.RevEstCurrFin.Insert(Count, PastYearBudEstCurrFin != null ? Convert.ToDecimal(PastYearBudEstCurrFin) : Convert.ToDecimal(0.00));
                                                              }   
                                                                @Html.TextBoxFor(model => model.RevEstCurrFin[Count], new { @class = "form-control", @id = @name4, @dir = "rtl", @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.RevEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        else if(User.IsInRole("Admin") && DelegateEditStatus )
                                                        {
                                                            <div class="form-group">
                                                             @{  
                                                                Model.RevEstCurrFin.Insert(Count, PrevYearApp != null ? Convert.ToDecimal(PrevYearApp.BudEstNextFin) : Convert.ToDecimal(0.00));
                                                              }  
                                                                @Html.TextBoxFor(model => model.RevEstCurrFin[Count], new { @class = "form-control", @id = @name4, @dir = "rtl", @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.RevEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        else if(!DelegateEditStatus || (!User.IsInRole("Admin") && IsDelegateSaved && Model.EditEnabled!=@Subs.SubGroupNo))
                                                        {
                                                              <div class="form-group">
                                                                @{    
                                                                  Model.RevEstCurrFin.Insert(Count, details != null ? Convert.ToDecimal(details.RevEstCurrFin) : Convert.ToDecimal(0.00));
                                                                 }  
                                                                    @Html.TextBoxFor(model => model.RevEstCurrFin[Count], new { @class = "form-control", @id = @name4, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.RevEstCurrFin[Count],null, new { @class = "text-danger", @style="font-size: 0.8em;font-style: italic;" })
                                                              </div> 
                                                        }
                                                        else
                                                        {
                                                            <div class="form-group">
                                                              @if(details!=null && !@details.ProvisionalRevEst.Equals(Convert.ToDecimal(0.00)) && !IsDelegateSaved)
                                                              {
                                                                Model.RevEstCurrFin.Insert(Count, details != null ? Convert.ToDecimal(@details.ProvisionalRevEst) : Convert.ToDecimal(0.00));
                                                               }
                                                               else
                                                               { 
                                                                Model.RevEstCurrFin.Insert(Count, PrevYearApp != null ? Convert.ToDecimal(PrevYearApp.BudEstNextFin) : Convert.ToDecimal(0.00));
                                                                }
                                                                @Html.TextBoxFor(model => model.RevEstCurrFin[Count], new { @class = "form-control", @dir = "rtl", @id = @name4})
                                                                @Html.ValidationMessageFor(model => model.RevEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        </td>
                                                        <td style= "background-color: aliceblue;">
                                                        @if (@Subs.RequireInput && DelegateEditStatus && !IsDelegateSaved)
                                                        {
                                                            
                                                          var PastYearSumBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();                                                                                                                           
                                                              <div class="form-group">
                                                              @{
                                                                        Model.PerVarRevEstOverBudgEstCurrFin.Insert(Count, PastYearSumBudEstCurrFin != Convert.ToDecimal(0.0000) ? Convert.ToString(((Convert.ToDecimal(PastYearSumBudEstCurrFin) - Convert.ToDecimal(PastYearSumBudEstCurrFin)) / Convert.ToDecimal(PastYearSumBudEstCurrFin)) * 100) : (0).ToString("F2"));
                                                               }
                                                                @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name5,  @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            }
                                                        else if((@Subs.RequireInput && !DelegateEditStatus) || (@Subs.RequireInput && !User.IsInRole("Admin") && IsDelegateSaved))
                                                        {
                                                            var LedgerSumRevEstCurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.RevEstCurrFin).Sum();
                                                            var LedgerSumBudEstCurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstCurrFin).Sum();
                                                                <div class="form-group">
                                                                @{
                                                                    Model.PerVarRevEstOverBudgEstCurrFin.Insert(Count, LedgerSumBudEstCurrFin!=Convert.ToDecimal(0.0000) ? Convert.ToString(((Convert.ToDecimal(LedgerSumRevEstCurrFin)- Convert.ToDecimal(LedgerSumBudEstCurrFin))/Convert.ToDecimal(LedgerSumBudEstCurrFin))*100): (0).ToString("F2"));
                                                                 }
                                                                    @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name5,  @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                        }                                                     
                                                        
                                                        else if (!DelegateEditStatus || (!User.IsInRole("Admin") && IsDelegateSaved))
                                                        {
                                                            <div class="form-group">
                                                               @{ 
                                                                  Model.PerVarRevEstOverBudgEstCurrFin.Insert(Count, (details!=null && details.BudEstCurrFin!=Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(details.RevEstCurrFin)- Convert.ToDecimal(details.BudEstCurrFin))/Convert.ToDecimal(details.BudEstCurrFin))*100)  : (0).ToString("F2"));
                                                                } 
                                                                @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name5, @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                                <div class="form-group">
                                                                 @{
                                                                    Model.PerVarRevEstOverBudgEstCurrFin.Insert(Count, (PrevYearApp!=null && PrevYearApp.BudEstNextFin!=Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(PrevYearApp.BudEstNextFin)- Convert.ToDecimal(PrevYearApp.BudEstNextFin))/Convert.ToDecimal(PrevYearApp.BudEstNextFin))*100)   : (0).ToString("F2"));
                                                                  }
                                                                     @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name5, @readonly = "readonly"})
                                                                     @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            }
                                                        </td>
                                                        
                                                        <td style= "background-color: aliceblue;">
                                                                                    @if ((!DelegateEditStatus && !@Subs.RequireInput) || (!User.IsInRole("Admin") && IsDelegateSaved))
                                                                                    {
                                                                                            <div class="form-group">
                                                                                             @{  
                                                                                                Model.DelegateJustificationRevEst.Insert(Count, (details != null && details.DelegateJustificationRevEst!=null) ? details.DelegateJustificationRevEst.ToString(): "");
                                                                                              }  
                                                                                            @Html.TextBoxFor(model => model.DelegateJustificationRevEst[Count], new { @class = "form-control", @id = @name14, @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.DelegateJustificationRevEst[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                        
                                                                                    }
                                                                                    else if((User.IsInRole("Admin") && DelegateEditStatus) || @Subs.RequireInput )
                                                                                    {
                                                                                        <div class="form-group">
                                                                                             @{  
                                                                                                Model.DelegateJustificationRevEst.Insert(Count, "");
                                                                                              }  
                                                                                            @Html.TextBoxFor(model => model.DelegateJustificationRevEst[Count], new { @class = "form-control", @id = @name14, @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.DelegateJustificationRevEst[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <div class="form-group">
                                                                                           @{ 
                                                                                              Model.DelegateJustificationRevEst.Insert(Count, (details != null && details.DelegateJustificationRevEst!=null) ? details.DelegateJustificationRevEst.ToString() : "");
                                                                                             }   
                                                                                            @Html.TextAreaFor(model => model.DelegateJustificationRevEst[Count], new { @class = "form-control", @id = @name14})
                                                                                            @Html.ValidationMessageFor(model => model.DelegateJustificationRevEst[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                            
                                                                                    }
                                                        </td>
                                                        @if (((User.IsInRole("Admin") && (AdminEditStatus||!AdminEditStatus))||(!User.IsInRole("Admin")&& !FinalAdminEditStatus && FinalAdminEditCount>0 )) && @Subs.RequireInput)
                                                        {
                                                            var LedgerSumACAndBWPropRECurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRECurrFin).Sum();
                                                            <td style= "background-color: aliceblue;">
                                                              <div class="form-group">
                                                               @{
                                                                 Model.ACAndBWPropRECurrFin.Insert(Count, LedgerSumACAndBWPropRECurrFin!=null ? Convert.ToDecimal(LedgerSumACAndBWPropRECurrFin) : Convert.ToDecimal(0.00));
                                                                }
                                                                 @Html.TextBoxFor(model => model.ACAndBWPropRECurrFin[Count],new { @class = "form-control", @id = @name6, @dir = "rtl", @readonly = "readonly"})
                                                                 @Html.ValidationMessageFor(model => model.ACAndBWPropRECurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                              </div>
                                                            </td>
                                                        }
                                                        else if (User.IsInRole("Admin") && !@Subs.RequireInput && AdminEditStatus && (!IsAdminSaved || (Model.EditEnabled == @Subs.SubGroupNo)))
                                                        {
                                                            <td style= "background-color: aliceblue;">
                                                                <div class="form-group">
                                                               @{ 
                                                                Model.ACAndBWPropRECurrFin.Insert(Count, details!=null ? Convert.ToDecimal(details.ACAndBWPropRECurrFin) : Convert.ToDecimal(0.00));
                                                                } 
                                                                @Html.TextBoxFor(model => model.ACAndBWPropRECurrFin[Count],new { @class = "form-control", @id = @name6})
                                                                @Html.ValidationMessageFor(model => model.ACAndBWPropRECurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            </td>
                                                        }
                                                        else if (((User.IsInRole("Admin") && (!AdminEditStatus || IsAdminSaved)) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0) ) && !@Subs.RequireInput)
                                                        {
                                                            <td style= "background-color: aliceblue;">
                                                                <div class="form-group">
                                                                 @{   
                                                                    Model.ACAndBWPropRECurrFin.Insert(Count, details != null ? Convert.ToDecimal(details.ACAndBWPropRECurrFin) : Convert.ToDecimal(0.00));
                                                                  } 
                                                                    @Html.TextBoxFor(model => model.ACAndBWPropRECurrFin[Count], new { @class = "form-control", @id = @name6, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ACAndBWPropRECurrFin[Count],null, new { @class = "text-danger", @style="font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            </td>
                                                        }
                                                       @*else if (User.IsInRole("Admin") && @Subs.RequireInput && !AdminEditStatus)
                                                        {
                                                            var LedgerSumACAndBWPropRECurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRECurrFin).Sum();
                                                            <td>
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ACAndBWPropRECurrFin.Insert(Count, LedgerSumACAndBWPropRECurrFin!=null ? Convert.ToDecimal(LedgerSumACAndBWPropRECurrFin) : Convert.ToDecimal(0.00));
                                                                    }
                                                                Html.TextBox(@name6, @dir = "rtl", details!=null ? details.ACAndBWPropRECurrFin.ToString("F4") : " ", new { @class = "form-control", @id = @name6, @dir = "rtl", @readonly = "readonly"})
                                                                @Html.ValidationMessage(@name6, @dir = "rtl",  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                    @Html.TextBoxFor(model => model.ACAndBWPropRECurrFin[Count], new { @class = "form-control", @id = @name6, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ACAndBWPropRECurrFin[Count],null, new { @class = "text-danger" })
                                                                </div>
                                                            </td>
                                                        }*@
                                                       
                                                        else
                                                        {
                                                           Model.ACAndBWPropRECurrFin.Insert(Count, Convert.ToDecimal(0.00));                                                    
                                                            
                                                        }
                                                        
                                                        @if (User.IsInRole("Admin") && @Subs.RequireInput && AdminEditStatus && !IsAdminSaved)
                                                        {
                                                         var PastYearSumBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();                                                                                                                           
                                                         <td style= "background-color: aliceblue;">
                                                              <div class="form-group">
                                                              @{
                                                                        Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(Count, PastYearSumBudEstCurrFin != Convert.ToDecimal(0.0000) ? Convert.ToString(((Convert.ToDecimal(PastYearSumBudEstCurrFin) - Convert.ToDecimal(PastYearSumBudEstCurrFin)) / Convert.ToDecimal(PastYearSumBudEstCurrFin)) * 100) : (0).ToString("F2"));
                                                               }
                                                                @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name17, @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                         </td>
                                                         
                                                        }
                                                        else if((User.IsInRole("Admin") && @Subs.RequireInput && IsAdminSaved))
                                                        {
                                                            var LedgerSumACAndBWPropRECurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRECurrFin).Sum();
                                                            var LedgerSumBudEstCurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstCurrFin).Sum();
                                                            <td style= "background-color: aliceblue;">
                                                                <div class="form-group">
                                                                @{
                                                                    Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(Count, LedgerSumBudEstCurrFin!=Convert.ToDecimal(0.0000) ? Convert.ToString(((Convert.ToDecimal(LedgerSumACAndBWPropRECurrFin)- Convert.ToDecimal(LedgerSumBudEstCurrFin))/Convert.ToDecimal(LedgerSumBudEstCurrFin))*100): (0).ToString("F2"));
                                                                 }
                                                                    @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name17,  @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            </td>
                                                        }                                                     
                                                        
                                                        else if (User.IsInRole("Admin") && IsAdminSaved)
                                                        {
                                                          <td style= "background-color: aliceblue;">
                                                            <div class="form-group">
                                                               @{ 
                                                                  Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(Count, (details!=null && details.BudEstCurrFin!=Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(details.ACAndBWPropRECurrFin)- Convert.ToDecimal(details.BudEstCurrFin))/Convert.ToDecimal(details.BudEstCurrFin))*100)  : (0).ToString("F2"));
                                                                } 
                                                                @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name17, @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                          </td>
                                                        }
                                                       else if (User.IsInRole("Admin") && !IsAdminSaved)
                                                        {
                                                            <td style= "background-color: aliceblue;">
                                                                <div class="form-group">
                                                                 @{
                                                                    Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(Count, (PrevYearApp!=null && PrevYearApp.BudEstNextFin!=Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(PrevYearApp.BudEstNextFin)- Convert.ToDecimal(PrevYearApp.BudEstNextFin))/Convert.ToDecimal(PrevYearApp.BudEstNextFin))*100)   : (0).ToString("F2"));
                                                                  }
                                                                     @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name17,  @readonly = "readonly"})
                                                                     @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                             </td>
                                                            }
                                                            else
                                                            {
                                                                Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(Count, (0).ToString("F2"));
                                                            }
                                                       
                                                        @if (User.IsInRole("Admin") && AdminEditStatus && !@Subs.RequireInput && (!IsAdminSaved || (Model.EditEnabled == @Subs.SubGroupNo)))
                                                        {
                                                                                        <td style= "background-color: aliceblue;">
                                                                                            <div class="form-group"> 
                                                                                                @{
                                                                                                  Model.ACBWJustificationRevEst.Insert(Count, details!=null && details.ACBWJustificationRevEst!=null && details.ACBWJustificationRevEst!=" " ? details.ACBWJustificationRevEst.ToString()  : " ");
                                                                                               }
                                                                                                
                                                                                                @Html.TextBoxFor(model => model.ACBWJustificationRevEst[Count], new { @class = "form-control", @id = @name15})
                                                                                                @Html.ValidationMessageFor(model => model.ACBWJustificationRevEst[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                        </td>
                                                        }
                                                       else if ((User.IsInRole("Admin") && (!AdminEditStatus ||IsAdminSaved) ) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                       {
                                                                                      <td style= "background-color: aliceblue;">
                                                                                          <div class="form-group">
                                                                                              @{
                                                                                                 Model.ACBWJustificationRevEst.Insert(Count, (details!=null && details.ACBWJustificationRevEst!=" " && details.ACBWJustificationRevEst!=null) ? details.ACBWJustificationRevEst.ToString() : "");
                                                                                               }
                                                                                            
                                                                                            @Html.TextBoxFor(model => model.ACBWJustificationRevEst[Count], new { @class = "form-control", @id = @name15,@readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.ACBWJustificationRevEst[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                          </div>
                                                                                        </td>
                                                        }
                                                        else if(User.IsInRole("Admin") && (DelegateEditStatus || @Subs.RequireInput) )
                                                                                    {
                                                                                        <td style= "background-color: aliceblue;">
                                                                                        <div class="form-group">
                                                                                             @{  
                                                                                                Model.ACBWJustificationRevEst.Insert(Count, "");
                                                                                              }  
                                                                                            @Html.TextBoxFor(model => model.ACBWJustificationRevEst[Count], new { @class = "form-control", @id = @name14, @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.ACBWJustificationRevEst[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                        </td>
                                                                                    }
                                                        else
                                                        {
                                                             Model.ACBWJustificationRevEst.Insert(Count, " ");
                                                        }
                                                        <td style= "background-color:whitesmoke;">
                                                        @if (@Subs.RequireInput && DelegateEditStatus && !IsDelegateSaved)
                                                        {
                                                                var PastYearBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin ).Sum();
                                                            <div class="form-group">
                                                                @{
                                                                    Model.BudgEstNexFin.Insert(Count, PastYearBudEstCurrFin != null ? Convert.ToDecimal(PastYearBudEstCurrFin) : Convert.ToDecimal(0.00));
                                                                 }
                                                                
                                                                @Html.TextBoxFor(model => model.BudgEstNexFin[Count],new { @class = "form-control", @id = @name7, @dir = "rtl", @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.BudgEstNexFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        else if ((@Subs.RequireInput && !DelegateEditStatus) || (@Subs.RequireInput && !User.IsInRole("Admin") && IsDelegateSaved && Model.EditEnabled!=@Subs.SubGroupNo))
                                                        {
                                                                var ThisYearBudEstNextFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudgEstNexFin).Sum();
                                                            <div class="form-group">
                                                            @{
                                                                 Model.BudgEstNexFin.Insert(Count,ThisYearBudEstNextFin!=null ? Convert.ToDecimal(ThisYearBudEstNextFin) : Convert.ToDecimal(0.00));
                                                             }
                                                                
                                                                @Html.TextBoxFor(model => model.BudgEstNexFin[Count],new { @class = "form-control", @id = @name7, @dir = "rtl", @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.BudgEstNexFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        else if (User.IsInRole("Admin") && DelegateEditStatus)
                                                        {
                                                            <div class="form-group">
                                                               @{
                                                                  Model.BudgEstNexFin.Insert(Count, PrevYearApp != null ? Convert.ToDecimal(PrevYearApp.BudEstNextFin) : Convert.ToDecimal(0.00));
                                                                }
                                                                
                                                                @Html.TextBoxFor(model => model.BudgEstNexFin[Count],new { @class = "form-control", @id = @name7, @dir = "rtl", @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.BudgEstNexFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                           
                                                        }
                                                        else if (!DelegateEditStatus || (!User.IsInRole("Admin") && IsDelegateSaved && Model.EditEnabled!=@Subs.SubGroupNo) )
                                                        {
                                                              <div class="form-group">
                                                               @{
                                                                 Model.BudgEstNexFin.Insert(Count, details!=null ? Convert.ToDecimal(details.BudgEstNexFin) : Convert.ToDecimal(0.00));
                                                               }
                                                               
                                                               @Html.TextBoxFor(model => model.BudgEstNexFin[Count],new { @class = "form-control", @id = @name7, @dir = "rtl", @readonly = "readonly"})
                                                               @Html.ValidationMessageFor(model => model.BudgEstNexFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                              </div>
                                                        }
                                                        else
                                                        {
                                                            <div class="form-group">
                                                                    @if(details!=null && !@details.ProvisionalRevEst.Equals(Convert.ToDecimal(0.00)) && !IsDelegateSaved)
                                                                    {
                                                                       Model.BudgEstNexFin.Insert(Count, details != null ? Convert.ToDecimal(details.ProvisionalRevEst) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    else
                                                                    {
                                                                        Model.BudgEstNexFin.Insert(Count, PrevYearApp != null ? Convert.ToDecimal(PrevYearApp.BudEstNextFin) : Convert.ToDecimal(0.00));
                                                                    }
                                                                
                                                                @Html.TextBoxFor(model => model.BudgEstNexFin[Count],new { @class = "form-control", @dir = "rtl", @id = @name7})
                                                                @Html.ValidationMessageFor(model => model.BudgEstNexFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                           
                                                        }
                                                        </td>
                                                        <td style= "background-color:whitesmoke;">
                                                            @if (@Subs.RequireInput && DelegateEditStatus && !IsDelegateSaved)
                                                            {

                                                                var PastYearSumBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();
                                                                <div class="form-group">
                                                                @{
                                                                    Model.PerVarRevEstOverBudgEstNxtFin.Insert(Count, PastYearSumBudEstCurrFin!=Convert.ToDecimal(0.0000) ? Convert.ToString(((Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F"))- Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F")))/Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F")))*100) : (0).ToString("F2"));
                                                                 }
                                                                   
                                                                    @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name8, @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            }
                                                            else if ((@Subs.RequireInput && !DelegateEditStatus)||(@Subs.RequireInput && !User.IsInRole("Admin") && IsDelegateSaved))
                                                            {
                                                                var LedgerSumRevEstCurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.RevEstCurrFin).Sum();
                                                                var LedgerSumBudEstNextFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudgEstNexFin).Sum();
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.PerVarRevEstOverBudgEstNxtFin.Insert(Count, LedgerSumBudEstNextFin!=Convert.ToDecimal(0.0000) ? Convert.ToString(((Convert.ToDecimal(LedgerSumBudEstNextFin.ToString("F"))- Convert.ToDecimal(LedgerSumRevEstCurrFin.ToString("F")))/Convert.ToDecimal(LedgerSumRevEstCurrFin.ToString("F")))*100) : (0).ToString("F2"));
                                                                    }
                                                                    
                                                                    @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name8, @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            }

                                                            else if (User.IsInRole("Admin") || !DelegateEditStatus || (!User.IsInRole("Admin") && IsDelegateSaved))
                                                            {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.PerVarRevEstOverBudgEstNxtFin.Insert(Count, (details!=null && details.RevEstCurrFin!=Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(details.BudgEstNexFin.ToString("F"))- Convert.ToDecimal(details.RevEstCurrFin.ToString("F")))/Convert.ToDecimal(details.RevEstCurrFin.ToString("F")))*100) : (0).ToString("F2"));
                                                                    }
                                                                    
                                                                    @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name8, @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                               <div class="form-group">
                                                                    @{ 
                                                                        Model.PerVarRevEstOverBudgEstNxtFin.Insert(Count, (PrevYearApp!=null && PrevYearApp.BudEstNextFin!=Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F"))- Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F")))/Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F")))*100) : (0).ToString("F2"));
                                                                   }
                                                                    
                                                                    @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name8, @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            }
                                                        </td>
                                                        <td style= "background-color:whitesmoke;">
                                                            @if ((!DelegateEditStatus && !@Subs.RequireInput) || (!User.IsInRole("Admin") && IsDelegateSaved && Model.EditEnabled!=@Subs.SubGroupNo))
                                                        {
                                                            <div class="form-group">
                                                                @{
                                                                    Model.Justification.Insert(Count, (details != null && details.Justification!=null) ? details.Justification.ToString(): "");
                                                                 }
                                                                
                                                                @Html.TextBoxFor(model => model.Justification[Count] , new { @class = "form-control", @id = @name10, @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.Justification[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        else if((User.IsInRole("Admin") && DelegateEditStatus) || @Subs.RequireInput)
                                                        {
                                                             <div class="form-group">
                                                                @{
                                                                    Model.Justification.Insert(Count, "");
                                                                 }
                                                                
                                                                @Html.TextBoxFor(model => model.Justification[Count] , new { @class = "form-control", @id = @name10, @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.Justification[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>   
                                                        }
                                                        else
                                                        {                                                                                                             
                                                            <div class="form-group">
                                                                @{
                                                                     Model.Justification.Insert(Count, (details != null && details.Justification!=null) ? details.Justification.ToString(): "");
                                                                 }
                                                                 @*Html.TextArea(@name10, @dir = "rtl", details!=null ? details.Justification.ToString() : " ", new { @class = "form-control", @id = @name10})
                                                                 @Html.ValidationMessage(@name10, @dir = "rtl",  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                 @Html.TextAreaFor(model => model.Justification[Count] , new { @class = "form-control", @id = @name10 })
                                                                 @Html.ValidationMessageFor(model => model.Justification[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        </td>
                                                        @if (((User.IsInRole("Admin") && (AdminEditStatus || !AdminEditStatus)) ||(!User.IsInRole("Admin")&& !FinalAdminEditStatus && FinalAdminEditCount>0)) && @Subs.RequireInput )
                                                        {
                                                            var LedgerSumACAndBWPropRENxtFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRENxtFin).Sum();
                                                            <td style= "background-color:whitesmoke;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ACAndBWPropRENxtFin.Insert(Count, LedgerSumACAndBWPropRENxtFin!=null ? Convert.ToDecimal(LedgerSumACAndBWPropRENxtFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    
                                                                    @Html.TextBoxFor(model => model.ACAndBWPropRENxtFin[Count],new { @class = "form-control", @id = @name9, @dir = "rtl", @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.ACAndBWPropRENxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            </td>
                                                        }
                                                        else if (User.IsInRole("Admin") && !@Subs.RequireInput && AdminEditStatus && (!IsAdminSaved || (Model.EditEnabled == @Subs.SubGroupNo))) 
                                                        {
                                                            <td style= "background-color:whitesmoke;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ACAndBWPropRENxtFin.Insert(Count, details != null ? Convert.ToDecimal(details.ACAndBWPropRENxtFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    
                                                                    @Html.TextBoxFor(model => model.ACAndBWPropRENxtFin[Count], new {@class = "form-control", @id = @name9})
                                                                    @Html.ValidationMessageFor(model => model.ACAndBWPropRENxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            </td>
                                                        }
                                                        else if (((User.IsInRole("Admin") && (!AdminEditStatus || IsAdminSaved)) || (!User.IsInRole("Admin")&& !FinalAdminEditStatus && FinalAdminEditCount>0)) && !@Subs.RequireInput ) 
                                                        {
                                                            <td style= "background-color:whitesmoke;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ACAndBWPropRENxtFin.Insert(Count, details != null ? Convert.ToDecimal(details.ACAndBWPropRENxtFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    
                                                                    @Html.TextBoxFor(model => model.ACAndBWPropRENxtFin[Count], new {@class = "form-control", @id = @name9, @dir = "rtl", @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.ACAndBWPropRENxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                
                                                            </td>
                                                        }
                                                        @*else if (User.IsInRole("Admin") && @Subs.RequireInput && !AdminEditStatus)
                                                        {
                                                            var LedgerSumACAndBWPropRENxtFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRENxtFin).Sum();
                                                            <td>
                                                                <div class="form-group">
                                                               @{
                                                                  Model.ACAndBWPropRENxtFin.Insert(Count, LedgerSumACAndBWPropRENxtFin!=null ? Convert.ToDecimal(LedgerSumACAndBWPropRENxtFin.ToString("F4"))  : Convert.ToDecimal(0.00));
                                                                }
                                                              @Html.TextBox(@name9, @dir = "rtl", details!=null ? details.ACAndBWPropRENxtFin.ToString("F4") : " ", new { @class = "form-control", @id = @name9, @dir = "rtl", @readonly = "readonly"})
                                                                    @Html.ValidationMessage(@name9, @dir = "rtl",  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) 
                                                                    @Html.TextBoxFor(model => model.ACAndBWPropRENxtFin[Count],   new { @class = "form-control", @id = @name9, @dir = "rtl", @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.ACAndBWPropRENxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            </td>
                                                        }*@
                                                        else
                                                        {
                                                           Model.ACAndBWPropRENxtFin.Insert(Count, Convert.ToDecimal(0.00));                                                   
                                                        }
                                                        
                                                            @if (User.IsInRole("Admin") && @Subs.RequireInput && AdminEditStatus && !IsAdminSaved)
                                                            {
                                                                var PastYearSumBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();
                                                                <td style= "background-color:whitesmoke;">
                                                                <div class="form-group">
                                                                @{
                                                                    Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(Count, PastYearSumBudEstCurrFin!=Convert.ToDecimal(0.0000) ? Convert.ToString(((Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F4"))- Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F4")))/Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F4")))*100) : (0).ToString("F2"));
                                                                 }
                                                                    
                                                                    @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name18,  @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                </td>
                                                            }
                                                            else if (User.IsInRole("Admin") && @Subs.RequireInput && IsAdminSaved)
                                                            {
                                                                var LedgerSumACAndBWPropRECurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRECurrFin).Sum();
                                                                var LedgerSumACAndBWPropRENxtFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRENxtFin).Sum();
                                                              <td style= "background-color:whitesmoke;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(Count, LedgerSumACAndBWPropRENxtFin!=Convert.ToDecimal(0.0000) ? Convert.ToString(((Convert.ToDecimal(LedgerSumACAndBWPropRENxtFin.ToString("F4"))- Convert.ToDecimal(LedgerSumACAndBWPropRECurrFin.ToString("F4")))/Convert.ToDecimal(LedgerSumACAndBWPropRECurrFin.ToString("F4")))*100) : (0).ToString("F2"));
                                                                    }
                                                                    
                                                                    @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name18,  @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                             </td>
                                                            }

                                                            else if (User.IsInRole("Admin") && IsAdminSaved)
                                                            {
                                                                <td style= "background-color:whitesmoke;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(Count, (details!=null && details.ACAndBWPropRECurrFin!=Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(details.ACAndBWPropRENxtFin.ToString("F4"))- Convert.ToDecimal(details.ACAndBWPropRECurrFin.ToString("F4")))/Convert.ToDecimal(details.ACAndBWPropRECurrFin.ToString("F4")))*100) : (0).ToString("F2"));
                                                                    }
                                                                   
                                                                    @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name18,  @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                </td>
                                                            }
                                                           else if (User.IsInRole("Admin") && !IsAdminSaved)
                                                            {
                                                                <td style= "background-color:whitesmoke;">
                                                                <div class="form-group"> 
                                                                    @{
                                                                        Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(Count, (PrevYearApp!=null && PrevYearApp.BudEstNextFin!=Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F4"))- Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F4")))/Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F4")))*100) : (0).ToString("F2"));
                                                                    }
                                                                    
                                                                    @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name18, @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                </td>
                                                            }
                                                        else
                                                        {
                                                            Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(Count, (0).ToString("F2"));
                                                        }
                                                        @if (User.IsInRole("Admin") && AdminEditStatus && !@Subs.RequireInput && (!IsAdminSaved || (Model.EditEnabled == @Subs.SubGroupNo)))
                                                                                    {
                                                                                        <td style= "background-color:whitesmoke;">
                                                                                            <div class="form-group"> 
                                                                                                @{
                                                                                                  Model.ACBWJustificationBudgEstNxtFin.Insert(Count, details!=null && details.ACBWJustificationBudgEstNxtFin!=null && details.ACBWJustificationBudgEstNxtFin!=" " ? details.ACBWJustificationBudgEstNxtFin.ToString()  : " ");
                                                                                               }
                                                                                                
                                                                                                @Html.TextBoxFor(model => model.ACBWJustificationBudgEstNxtFin[Count], new { @class = "form-control", @id = @name16})
                                                                                                @Html.ValidationMessageFor(model => model.ACBWJustificationBudgEstNxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                        </td>
                                                                                    }
                                                                                    else if ((User.IsInRole("Admin") && (!AdminEditStatus || IsAdminSaved ) && !@Subs.RequireInput) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                                                    {
                                                                                      <td style= "background-color:whitesmoke;">
                                                                                          <div class="form-group">
                                                                                              @{
                                                                                                 Model.ACBWJustificationBudgEstNxtFin.Insert(Count, details!=null && details.ACBWJustificationBudgEstNxtFin!=null && details.ACBWJustificationBudgEstNxtFin!=" "? details.ACBWJustificationBudgEstNxtFin.ToString() : "");
                                                                                               }
                                                                                            
                                                                                            @Html.TextBoxFor(model => model.ACBWJustificationBudgEstNxtFin[Count], new { @class = "form-control", @id = @name16, @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.ACBWJustificationBudgEstNxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                          </div>
                                                                                        </td>
                                                                                    }
                                                        else if(User.IsInRole("Admin") && (DelegateEditStatus || @Subs.RequireInput))
                                                        {
                                                            <td style= "background-color:whitesmoke;">
                                                             <div class="form-group">
                                                                @{
                                                                    Model.ACBWJustificationBudgEstNxtFin.Insert(Count, "");
                                                                 }
                                                                
                                                                @Html.TextBoxFor(model => model.ACBWJustificationBudgEstNxtFin[Count] , new { @class = "form-control", @id = @name16, @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.ACBWJustificationBudgEstNxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>   
                                                            </td>
                                                        }
                                                                                    else
                                                                                    {
                                                                                        Model.ACBWJustificationBudgEstNxtFin.Insert(Count, " ");
                                                                                    }
                                                        <td  style="background-color:honeydew;"> 
                                                                                    
                                                            @if(!@Subs.RequireInput) 
                                                            {
                                                              <table class="table">
                                                              <thead> </thead>
                                                              <tbody>
                                                              @if (!User.IsInRole("Admin") && GroupsStatusRowCount == 0 && Model.IsEnabled.Equals(true) && (!IsDelegateSaved || Model.EditEnabled ==@Subs.SubGroupNo))
                                                              {
                                                                   <tr><td  style="border:none"> @Html.TextBoxFor(m => m.File, new { type = "file", @id = @name11})</td></tr>
                                                                   <tr><td  style="border:none"> @Html.ValidationMessage("Caution"+Count,"* only .pdf files with size 1 MB are allowed",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})</td></tr>
                                                                   <tr><td  style="border:none"> @Html.ValidationMessage("FileMessage_"+Count,null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})</td></tr>
                                                                   <br/>
                                                                   <tr><td style="border:none"><input id="@upload" class="Submit" formaction="~/Tabs/Upload" type="submit" value="Upload" /></td></tr>
                                                              }
                                                             
                                                                                    @foreach(var Files in Model.Filess.Where(a => a.SubGroupNumber.Equals(@Subs.SubGroupNo)))
                                                                                    {
                                                                                        var FinalSubmitStatus = (from a in Model.Statuss where (a.SectionNumber == 0 && a.GroupNumber.Equals("0")) select a.AdminEditStatus).Count();
                                                                                     <tr>
                                                                                      @if((User.IsInRole("Admin") && AdminEditStatus) || !User.IsInRole("Admin") || (User.IsInRole("Admin") && FinalSubmitStatus > 0))
                                                                                      {
                                                                                       <td style="border:none">@Html.ActionLink(@Files.FileName,null,null,null,new{href =@Files.SupportingDocumentPath, target = "_blank"} )</td>
                                                                                       /*<td><input id="@view" class="ViewFile  btn-link" style="border:none; outline:none;  background-color: transparent;" formaction="~/Tabs/ViewFile" type="submit" value= "@Files.FileName" /></td>*/
                                                                                      }
                                                                                        @if (!User.IsInRole("Admin") && GroupsStatusRowCount == 0 && !IsDelegateSaved)
                                                                                        {
                                                                                           <td style="border:none"><input id="@delete" class="Submit  btn-link" style="border:none; outline:none;  background-color: transparent;" formaction="~/Tabs/Delete" type="submit" value="Delete"/></td>
                                                                                        }
                                                                                     </tr>      
                                                                                         
                                                                                    }
                                                         </tbody>
                                                             </table>
                                                         }
                                                        </td>
                                                        <td style="background-color:honeydew;">
                                                        @if((!User.IsInRole("Admin") && !@Subs.RequireInput && DelegateEditStatus && (!IsDelegateSaved || Model.EditEnabled==@Subs.SubGroupNo))||(User.IsInRole("Admin") && !@Subs.RequireInput && AdminEditStatus && (!IsAdminSaved|| (Model.EditEnabled == @Subs.SubGroupNo)) ))
                                                        {
                                                                                   <button style="border:none;background-color:white" id="@save" class="Submit" formaction="~/Tabs/Save" type="submit" value="Save Budget" style="align-self:center">
                                                                                   <i class='bx bx-check' style="color:limegreen"></i></button>
                                                          }
                                                          @if((!User.IsInRole("Admin") && IsDelegateSaved && !@Subs.RequireInput && DelegateEditStatus && (Model.EditEnabled != @Subs.SubGroupNo) )||(User.IsInRole("Admin") && IsAdminSaved && !@Subs.RequireInput && AdminEditStatus && (Model.EditEnabled != @Subs.SubGroupNo)))
                                                          {
                                                                                   <button style="border:none;background-color:white" id="@edit" class="Submit" formaction="~/Tabs/Edit" type="submit" value="Edit Budget" style="align-self:center">
                                                                                   <i class='bx bxs-pencil' style="color:blue"></i></button>
                                                           }
                                                           @if((!User.IsInRole("Admin") && !@Subs.RequireInput && DelegateEditStatus && (IsDelegateSaved  || (Model.EditEnabled == @Subs.SubGroupNo)))||(User.IsInRole("Admin") && !@Subs.RequireInput && AdminEditStatus && (IsAdminSaved|| (Model.EditEnabled == @Subs.SubGroupNo)) ))
                                                           {
                                                                                    <button style="border:none;background-color:white" id="@Budgetdelete" class="Submit" formaction="~/Tabs/BudgetDelete" type="submit" value="Delete Budget" style="align-self:center">
                                                                                    <i class='bx bx-x' style="color:red"></i>     
                                                                                    </button>
                                                           }
                                                           </td>
                                                    </tr>
                                                    
                                                            @if(LedgerCount > 0)
                                                            {
                                                                 LedgerNo = ++Count;
                                                                       @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                                                                       {

                                                                         var Ledgerdetails = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a).FirstOrDefault();
                                                                         var LedPrevYearApp = (from a in Model.Approved where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a).FirstOrDefault(); 
                                                                         
                                                                         Boolean LedgerIsDelegateSaved = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo)&& a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.HasDelegateSaved).FirstOrDefault();
                                                                         Boolean LedgerIsAdminSaved = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo)&& a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.HasAdminSaved).FirstOrDefault();

                                                                         <tr>
                                                                                <!--td></td -->
                                                                                <td style= "background-color:honeydew;"></td>
                                                                                <td style= "background-color:honeydew;">
                                                                                    @{
                                                                                        Model.SubGroupNameOrLedgerName.Insert(LedgerNo, Ledgers.LedgerNo);
                                                                                     }

                                                                                     @Html.DisplayFor(model => model.SubGroupNameOrLedgerName[LedgerNo])


                                                                                    @Html.HiddenFor(model => model.SubGroupNameOrLedgerName[LedgerNo])
                                                                                 </td>
                                                                                <td style= "background-color:honeydew;">@Ledgers.LedgerName</td>
                                                                                <td style= "background-color: floralwhite;">
                                                                                   
                                                                                    @if ((!DelegateEditStatus && IsSubmittedToACBW) || (!User.IsInRole("Admin") && LedgerIsDelegateSaved))
                                                                                    {
                                                                                       <div class="form-group"> 
                                                                                         
                                                                                         @{
                                                                                          Model.BudEstCurrFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.BudEstCurrFin.ToString("F4")): Convert.ToDecimal(0.00));
                                                                                          }     
                                                                                          @Html.TextBoxFor(model => model.BudEstCurrFin[LedgerNo], new { @class = "form-control", id = @name1 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly"})
                                                                                          @Html.ValidationMessageFor(model => model.BudEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div> 
                                                                                            
                                                                                    }
                                                                                        else
                                                                                        {
                                                                                            <div class="form-group">
                                                                                                @{
                                                                                                  Model.BudEstCurrFin.Insert(LedgerNo, LedPrevYearApp != null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                                }
                                                                                                @Html.TextBoxFor(model => model.BudEstCurrFin[LedgerNo], new { @class = "form-control", @id = @name1 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                                                @Html.ValidationMessageFor(model => model.BudEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                        }
                                                                                </td>
                                                                                <td style= "background-color: floralwhite;">
                                                                                        <div class="form-group">
                                                                                        @{
                                                                                            Model.InterimRevEst.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.InterimRevEst.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                        }
                                                                                            @Html.TextBoxFor(model => model.InterimRevEst[LedgerNo], new { @class = "form-control", @id = @name12+@Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.InterimRevEst[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                </td>
                                                                                <td style= "background-color: floralwhite;">
                                                                                        <div class="form-group">
                                                                                        @{
                                                                                            Model.ProvisionalRevEst.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.ProvisionalRevEst.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                        }
                                                                                            @Html.TextBoxFor(model => model.ProvisionalRevEst[LedgerNo], new { @class = "form-control", @id = @name13+@Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.ProvisionalRevEst[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                </td>
                                                                                <td style= "background-color: aliceblue;">
                                                                                    @if ((!DelegateEditStatus ) || (!User.IsInRole("Admin") && LedgerIsDelegateSaved && Model.EditEnabled!=@Ledgers.LedgerNo))
                                                                                    {
                                                                                        <div class="form-group"> 
                                                                                          @{
                                                                                            Model.ActPrevFin.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.ActPrevFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                           } 
                                                                                            @Html.TextBoxFor(model => model.ActPrevFin[LedgerNo], new { @class = "form-control", @id = @name2 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                                            @Html.ValidationMessageFor(model => model.ActPrevFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>  
                                                                                    }
                                                                                    else if(DelegateEditStatus && User.IsInRole("Admin"))
                                                                                    {
                                                                                        <div class="form-group"> 
                                                                                          @{
                                                                                            Model.ActPrevFin.Insert(LedgerNo, Convert.ToDecimal(0.00));
                                                                                           } 
                                                                                            @Html.TextBoxFor(model => model.ActPrevFin[LedgerNo], new { @class = "form-control", @id = @name2 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                                            @Html.ValidationMessageFor(model => model.ActPrevFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>  
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                       <div class="form-group">
                                                                                           @{
                                                                                              Model.ActPrevFin.Insert(LedgerNo,Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ActPrevFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                            }
                                                                                                @Html.TextBoxFor(model => model.ActPrevFin[LedgerNo], new { @class = "form-control", @id = @name2 + @Ledgers.LedgerNo, @dir = "rtl"})
                                                                                                @Html.ValidationMessageFor(model => model.ActPrevFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                      </div>  
                                                                                       
                                                                                    }
                                                                                </td>
                                                                                <td style= "background-color: aliceblue;">
                                                                                    @if ((!DelegateEditStatus)|| (!User.IsInRole("Admin") && LedgerIsDelegateSaved && Model.EditEnabled!=@Ledgers.LedgerNo))
                                                                                    {
                                                                                       <div class="form-group">
                                                                                           @{
                                                                                               Model.ActCurrFinTillsecondQuart.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ActCurrFinTill2ndQuart.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                            }
                                                                                               @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[LedgerNo], new { @class = "form-control", @id = @name3 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                                               @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                      </div>  
                                                                                    }
                                                                                    else if(DelegateEditStatus && User.IsInRole("Admin"))
                                                                                    {
                                                                                        <div class="form-group">
                                                                                           @{
                                                                                               Model.ActCurrFinTillsecondQuart.Insert(LedgerNo, Convert.ToDecimal(0.00));
                                                                                            }
                                                                                               @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[LedgerNo], new { @class = "form-control", @id = @name3 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                                               @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                      </div>  
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                       <div class="form-group">
                                                                                           @{
                                                                                            Model.ActCurrFinTillsecondQuart.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ActCurrFinTill2ndQuart.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                            }
                                                                                            @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[LedgerNo], new { @class = "form-control", @id = @name3+@Ledgers.LedgerNo, @dir = "rtl"})
                                                                                            @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                       </div> 
                                                                                    }
                                                                                </td>
                                                                                <td style= "background-color: aliceblue;">
                                                                                     @if(User.IsInRole("Admin") && DelegateEditStatus)
                                                                                    {
                                                                                        <div class="form-group">
                                                                                            @{
                                                                                            Model.RevEstCurrFin.Insert(LedgerNo, LedPrevYearApp != null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                            }   
                                                                                            @Html.TextBoxFor(model => model.RevEstCurrFin[LedgerNo], new { @type = "number", @class = "form-control", @id = @name4+@Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly"}) 
                                                                                            @Html.ValidationMessageFor(model => model.RevEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    }
                                                                                    else if (!DelegateEditStatus || (!User.IsInRole("Admin") && LedgerIsDelegateSaved && Model.EditEnabled!=@Ledgers.LedgerNo))
                                                                                    {
                                                                                        <div class="form-group">
                                                                                            @{
                                                                                            Model.RevEstCurrFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.RevEstCurrFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                           }
                                                                                            @Html.TextBoxFor(model => model.RevEstCurrFin[LedgerNo],new { @class = "form-control", @id = @name4+@Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.RevEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    } 
                                                                                    
                                                                                    else
                                                                                    {
                                                                                       <div class="form-group">
                                                                                           @if(Ledgerdetails!=null && !@Ledgerdetails.ProvisionalRevEst.Equals(Convert.ToDecimal(0.00)) && !LedgerIsDelegateSaved)
                                                                                           {
                                                                                               Model.RevEstCurrFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ProvisionalRevEst.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                           }
                                                                                           else
                                                                                           {
                                                                                               Model.RevEstCurrFin.Insert(LedgerNo, LedPrevYearApp != null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                           }
                                                                                            @Html.TextBoxFor(model => model.RevEstCurrFin[LedgerNo], new { @class = "form-control", @id = @name4+@Ledgers.LedgerNo, @dir = "rtl"}) 
                                                                                            @Html.ValidationMessageFor(model => model.RevEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                       </div>
                                                                                    }
                                                                                </td>
                                                                                    <td style= "background-color: aliceblue;">
                                                                                        @if (!DelegateEditStatus || (!User.IsInRole("Admin") && LedgerIsDelegateSaved))
                                                                                        {
                                                                                          <div class="form-group"> 
                                                                                              @{
                                                                                                    Model.PerVarRevEstOverBudgEstCurrFin.Insert(LedgerNo, (Ledgerdetails != null && Ledgerdetails.BudEstCurrFin != Convert.ToDecimal(0.0000)) ? (Convert.ToString(((Convert.ToDecimal(Convert.ToDecimal(Ledgerdetails.RevEstCurrFin.ToString("F4")) - Convert.ToDecimal(Ledgerdetails.BudEstCurrFin.ToString("F4"))) / Convert.ToDecimal(Ledgerdetails.BudEstCurrFin.ToString("F4")))) * 100)) : (0).ToString("F2"));
                                                                                              }
                                                                                              @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstCurrFin[LedgerNo],"{0:#.##}%", new { @class = "form-control", @id = @name5+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                              @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                          </div>
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                           <div class="form-group"> 
                                                                                               @{
                                                                                                    Model.PerVarRevEstOverBudgEstCurrFin.Insert(LedgerNo, (LedPrevYearApp != null && LedPrevYearApp.BudEstNextFin != Convert.ToDecimal(0.0000)) ? (Convert.ToString(((Convert.ToDecimal(Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4"))- Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4"))) / Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")))) * 100)) : (0).ToString("F2"));
                                                                                               }
                                                                                                @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstCurrFin[LedgerNo], "{0:#.##}%",new { @class = "form-control", @id = @name5+@Ledgers.LedgerNo,   @readonly = "readonly"})
                                                                                                @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                           </div>
                                                                                        }
                                                                                    </td>
                                                                                   
                                                                                    <td style= "background-color: aliceblue;">
                                                                                    @if (!DelegateEditStatus|| (!User.IsInRole("Admin") && LedgerIsDelegateSaved) && Model.EditEnabled!=@Ledgers.LedgerNo)
                                                                                    {
                                                                                            <div class="form-group">
                                                                                             @{  
                                                                                                Model.DelegateJustificationRevEst.Insert(LedgerNo, (Ledgerdetails != null && Ledgerdetails.DelegateJustificationRevEst!=null) ? Ledgerdetails.DelegateJustificationRevEst.ToString(): "");
                                                                                              }  
                                                                                            @Html.TextAreaFor(model => model.DelegateJustificationRevEst[LedgerNo], new { @class = "form-control", @id = @name14+@Ledgers.LedgerNo,@readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.DelegateJustificationRevEst[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                        
                                                                                    }
                                                                                    else if(User.IsInRole("Admin") && DelegateEditStatus)
                                                                                    {
                                                                                        <div class="form-group">
                                                                                             @{  
                                                                                                Model.DelegateJustificationRevEst.Insert(LedgerNo, "");
                                                                                              }  
                                                                                            @Html.TextAreaFor(model => model.DelegateJustificationRevEst[LedgerNo], new { @class = "form-control", @id = @name14+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.DelegateJustificationRevEst[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <div class="form-group">
                                                                                           @{ 
                                                                                              Model.DelegateJustificationRevEst.Insert(LedgerNo, (Ledgerdetails != null && Ledgerdetails.DelegateJustificationRevEst!=null) ? Ledgerdetails.DelegateJustificationRevEst.ToString() : "");
                                                                                             }   
                                                                                            @Html.TextAreaFor(model => model.DelegateJustificationRevEst[LedgerNo], new { @class = "form-control", @id = @name14+@Ledgers.LedgerNo})
                                                                                            @Html.ValidationMessageFor(model => model.DelegateJustificationRevEst[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                            
                                                                                    }
                                                                                </td>
                                                                                    @if (User.IsInRole("Admin") && AdminEditStatus && (!LedgerIsAdminSaved || Model.EditEnabled == @Ledgers.LedgerNo))
                                                                                    {
                                                                                        <td style= "background-color: aliceblue;">
                                                                                            <div class="form-group"> 
                                                                                                @{
                                                                                                  Model.ACAndBWPropRECurrFin.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.ACAndBWPropRECurrFin.ToString("F4"))  : Convert.ToDecimal(0.00));
                                                                                               }
                                                                                                
                                                                                                @Html.TextBoxFor(model => model.ACAndBWPropRECurrFin[LedgerNo], new { @class = "form-control", @id = @name6+@Ledgers.LedgerNo, @dir = "rtl"})
                                                                                                @Html.ValidationMessageFor(model => model.ACAndBWPropRECurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                        </td>
                                                                                    }
                                                                                    else if ((User.IsInRole("Admin") && !AdminEditStatus) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0) || (User.IsInRole("Admin") && LedgerIsAdminSaved))
                                                                                    {
                                                                                      <td style= "background-color: aliceblue;">
                                                                                          <div class="form-group">
                                                                                              @{
                                                                                                 Model.ACAndBWPropRECurrFin.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.ACAndBWPropRECurrFin.ToString("F4"))  : Convert.ToDecimal(0.00));
                                                                                               }
                                                                                            
                                                                                            @Html.TextBoxFor(model => model.ACAndBWPropRECurrFin[LedgerNo], new { @class = "form-control", @id = @name6+@Ledgers.LedgerNo, @dir = "rtl",@readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.ACAndBWPropRECurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                          </div>
                                                                                        </td>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        Model.ACAndBWPropRECurrFin.Insert(LedgerNo, Convert.ToDecimal(0.00));
                                                                                    }
                                                                                    
                                                                                        @if (User.IsInRole("Admin") && LedgerIsAdminSaved)
                                                                                        {
                                                                                            <td style= "background-color: aliceblue;">
                                                                                          <div class="form-group"> 
                                                                                              @{                                                                                                                                          
                                                                                              Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(LedgerNo, (Ledgerdetails!=null && Ledgerdetails.BudEstCurrFin!=Convert.ToDecimal(0.0000)) ? (Convert.ToString(((Convert.ToDecimal(Convert.ToDecimal(Ledgerdetails.ACAndBWPropRECurrFin.ToString("F4")) - Convert.ToDecimal(Ledgerdetails.BudEstCurrFin.ToString("F4"))) / Convert.ToDecimal(Ledgerdetails.BudEstCurrFin.ToString("F4"))))*100)) : (0).ToString("F2"));
                                                                                              }
                                                                                              @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[LedgerNo], "{0:#.##}%",new { @class = "form-control", @id = @name17+@Ledgers.LedgerNo,  @readonly = "readonly"})
                                                                                              @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                          </div>
                                                                                          </td>
                                                                                          
                                                                                          
                                                                                        }
                                                                                        else if(User.IsInRole("Admin") && !LedgerIsAdminSaved)
                                                                                        {
                                                                                            <td style= "background-color: aliceblue;">
                                                                                           <div class="form-group"> 
                                                                                               @{
                                                                                                 Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(LedgerNo, (LedPrevYearApp!=null && LedPrevYearApp.BudEstNextFin!=Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4"))- Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")))/Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")))*100) : (0).ToString("F2"));
                                                                                               }
                                                                                                @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[LedgerNo],"{0:#.##}%",new { @class = "form-control", @id = @name17+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                                @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                           </div>
                                                                                           </td>
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(LedgerNo, (0).ToString("F2"));
                                                                                        }
                                                                                    
                                                                                
                                                                                @if (User.IsInRole("Admin") && AdminEditStatus && (!LedgerIsAdminSaved || (Model.EditEnabled == @Ledgers.LedgerNo)))
                                                                                    {
                                                                                        <td style= "background-color: aliceblue;">
                                                                                            <div class="form-group"> 
                                                                                                @{
                                                                                                  Model.ACBWJustificationRevEst.Insert(LedgerNo, Ledgerdetails!=null && Ledgerdetails.ACBWJustificationRevEst!=null && Ledgerdetails.ACBWJustificationRevEst!=" " ? Ledgerdetails.ACBWJustificationRevEst.ToString()  : " ");
                                                                                               }
                                                                                                
                                                                                                @Html.TextBoxFor(model => model.ACBWJustificationRevEst[LedgerNo], new { @class = "form-control", @id = @name15+@Ledgers.LedgerNo})
                                                                                                @Html.ValidationMessageFor(model => model.ACBWJustificationRevEst[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                        </td>
                                                                                    }
                                                                                    else if ((User.IsInRole("Admin") && (!AdminEditStatus || LedgerIsAdminSaved)) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                                                    {
                                                                                      <td style= "background-color: aliceblue;">
                                                                                          <div class="form-group">
                                                                                              @{
                                                                                                 Model.ACBWJustificationRevEst.Insert(LedgerNo, Ledgerdetails!=null && Ledgerdetails.ACBWJustificationRevEst!=null && Ledgerdetails.ACBWJustificationRevEst!=" "? Ledgerdetails.ACBWJustificationRevEst.ToString() : "");
                                                                                               }
                                                                                            
                                                                                            @Html.TextBoxFor(model => model.ACBWJustificationRevEst[LedgerNo], new { @class = "form-control", @id = @name15+@Ledgers.LedgerNo,@readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.ACBWJustificationRevEst[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                          </div>
                                                                                        </td>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        Model.ACBWJustificationRevEst.Insert(LedgerNo, " ");
                                                                                    }
                                                                                <td style= "background-color:whitesmoke;">
                                                                                    @if (User.IsInRole("Admin") && DelegateEditStatus )
                                                                                    {
                                                                                        <div class="form-group">
                                                                                          @{
                                                                                            Model.BudgEstNexFin.Insert(LedgerNo, LedPrevYearApp!=null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                           }  
                                                                                            
                                                                                            @Html.TextBoxFor(model => model.BudgEstNexFin[LedgerNo], new { @class = "form-control", @id = @name7+@Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.BudgEstNexFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                      
                                                                                    }
                                                                                    else if (!DelegateEditStatus || (!User.IsInRole("Admin") && LedgerIsDelegateSaved && Model.EditEnabled!=@Ledgers.LedgerNo) )
                                                                                    {
                                                                                        <div class="form-group">
                                                                                          @{
                                                                                            Model.BudgEstNexFin.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.BudgEstNexFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                          }
                                                                                            
                                                                                            @Html.TextBoxFor(model => model.BudgEstNexFin[LedgerNo], new { @class = "form-control", @id = @name7+@Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.BudgEstNexFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                      
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <div class="form-group">
                                                                                          @if(Ledgerdetails!=null && !@Ledgerdetails.ProvisionalRevEst.Equals(Convert.ToDecimal(0.00)) && !LedgerIsDelegateSaved)
                                                                                          {
                                                                                             Model.BudgEstNexFin.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.ProvisionalRevEst.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                          }
                                                                                          else
                                                                                          {
                                                                                            Model.BudgEstNexFin.Insert(LedgerNo, LedPrevYearApp!=null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                          }
                                                                                            @Html.TextBoxFor(model => model.BudgEstNexFin[LedgerNo], new { @class = "form-control", @id = @name7+@Ledgers.LedgerNo, @dir = "rtl"})
                                                                                            @Html.ValidationMessageFor(model => model.BudgEstNexFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                      
                                                                                    }
                                                                                </td>
                                                                                    <td style= "background-color:whitesmoke;">
                                                                                        @if ((User.IsInRole("Admin") && (!AdminEditStatus || LedgerIsAdminSaved)))
                                                                                        {
                                                                                            <div class="form-group">
                                                                                             
                                                                                             @{
                                                                                                 Model.PerVarRevEstOverBudgEstNxtFin.Insert(LedgerNo, (Ledgerdetails!=null && Ledgerdetails.RevEstCurrFin!=Convert.ToDecimal(0.0000))  ? Convert.ToString(((Convert.ToDecimal(Ledgerdetails.BudgEstNexFin.ToString("F4"))- Convert.ToDecimal(Ledgerdetails.RevEstCurrFin.ToString("F4")))/Convert.ToDecimal(Ledgerdetails.RevEstCurrFin.ToString("F4")))*100) : (0).ToString("F2"));
                                                                                             }  
                                                                                             
                                                                                              @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstNxtFin[LedgerNo], "{0:#.##}%",new { @class = "form-control", @id = @name8+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                              @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstNxtFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                            
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <div class="form-group">
                                                                                            @{
                                                                                              Model.PerVarRevEstOverBudgEstNxtFin.Insert(LedgerNo, (LedPrevYearApp!=null && LedPrevYearApp.BudEstNextFin!=Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4"))- Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")))/Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")))*100) : (0).ToString("F2"));
                                                                                              }   
                                                                                              @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstNxtFin[LedgerNo],"{0:#.##}%",new { @class = "form-control", @id = @name8+@Ledgers.LedgerNo,  @readonly = "readonly"})
                                                                                              @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstNxtFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                            
                                                                                        }
                                                                                    </td>
                                                                                    <td style= "background-color:whitesmoke;">
                                                                                    @if (!DelegateEditStatus || (!User.IsInRole("Admin") && LedgerIsDelegateSaved && Model.EditEnabled!=@Ledgers.LedgerNo))
                                                                                    {
                                                                                            <div class="form-group">
                                                                                             @{  
                                                                                                Model.Justification.Insert(LedgerNo, (Ledgerdetails != null && Ledgerdetails.Justification!=null) ? Ledgerdetails.Justification.ToString(): "");
                                                                                              }  
                                                                                            @Html.TextAreaFor(model => model.Justification[LedgerNo], new { @class = "form-control", @id = @name10+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.Justification[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                        
                                                                                    }
                                                                                    else if(User.IsInRole("Admin") && DelegateEditStatus )
                                                                                    {
                                                                                        <div class="form-group">
                                                                                             @{  
                                                                                                Model.Justification.Insert(LedgerNo, "");
                                                                                              }  
                                                                                            @Html.TextAreaFor(model => model.Justification[LedgerNo], new { @class = "form-control", @id = @name10+@Ledgers.LedgerNo,@readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.Justification[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <div class="form-group">
                                                                                           @{ 
                                                                                              Model.Justification.Insert(LedgerNo, (Ledgerdetails != null && Ledgerdetails.Justification!=null) ? Ledgerdetails.Justification.ToString() : "");
                                                                                             }   
                                                                                            @Html.TextAreaFor(model => model.Justification[LedgerNo], new { @class = "form-control", @id = @name10+@Ledgers.LedgerNo})
                                                                                            @Html.ValidationMessageFor(model => model.Justification[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                            
                                                                                    }
                                                                                </td>
                                                                                @if (User.IsInRole("Admin") && AdminEditStatus && (!LedgerIsAdminSaved || (Model.EditEnabled == @Ledgers.LedgerNo)))
                                                                                {
                                                                                    <td style= "background-color:whitesmoke;">
                                                                                        <div class="form-group">
                                                                                          @{
                                                                                              Model.ACAndBWPropRENxtFin.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.ACAndBWPropRENxtFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                            }
                                                                                            @Html.TextBoxFor(model => model.ACAndBWPropRENxtFin[LedgerNo], new { @class = "form-control", @id = @name9+@Ledgers.LedgerNo, @dir = "rtl"})
                                                                                            @Html.ValidationMessageFor(model => model.ACAndBWPropRENxtFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                        
                                                                                    </td>
                                                                                }
                                                                                else if ((User.IsInRole("Admin") && (!AdminEditStatus || LedgerIsAdminSaved)) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                                                {
                                                                                    <td style= "background-color:whitesmoke;">
                                                                                        <div class="form-group">
                                                                                           @{
                                                                                              Model.ACAndBWPropRENxtFin.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.ACAndBWPropRENxtFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                             }   
                                                                                              @Html.TextBoxFor(model => model.ACAndBWPropRENxtFin[LedgerNo], new { @class = "form-control", @id = @name9+@Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly"})
                                                                                              @Html.ValidationMessageFor(model => model.ACAndBWPropRENxtFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                        
                                                                                    </td>
                                                                                }
                                                                                else
                                                                                    {
                                                                                        Model.ACAndBWPropRENxtFin.Insert(LedgerNo, Convert.ToDecimal(0.00));
                                                                                    }
                                                                                
                                                                                        @if ((User.IsInRole("Admin") && LedgerIsAdminSaved) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                                                        {
                                                                                          <td style= "background-color:whitesmoke;">
                                                                                            <div class="form-group">
                                                                                             
                                                                                             @{
                                                                                                 Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(LedgerNo, (Ledgerdetails!=null && Ledgerdetails.ACAndBWPropRECurrFin!=Convert.ToDecimal(0.0000))  ? Convert.ToString(((Convert.ToDecimal(Ledgerdetails.ACAndBWPropRENxtFin.ToString("F4"))- Convert.ToDecimal(Ledgerdetails.ACAndBWPropRECurrFin.ToString("F4")))/Convert.ToDecimal(Ledgerdetails.ACAndBWPropRECurrFin.ToString("F4")))*100) : (0).ToString("F2"));
                                                                                             }  
                                                                                             
                                                                                              @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[LedgerNo], "{0:#.##}%",new { @class = "form-control", @id = @name18+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                              @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                          </td>
                                                                                            
                                                                                        }
                                                                                        else if (User.IsInRole("Admin") && !LedgerIsAdminSaved)
                                                                                        {
                                                                                          <td style= "background-color:whitesmoke;">
                                                                                            <div class="form-group">
                                                                                            @{
                                                                                              Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(LedgerNo, (LedPrevYearApp!=null && LedPrevYearApp.BudEstNextFin!=Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4"))- Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")))/Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")))*100) : (0).ToString("F2"));
                                                                                              }   
                                                                                              @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[LedgerNo],"{0:#.##}%",new { @class = "form-control", @id = @name18+@Ledgers.LedgerNo,  @readonly = "readonly"})
                                                                                              @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                           </td>
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(LedgerNo,(0).ToString("F2"));
                                                                                        }
                                                                                    
                                                                                @if (User.IsInRole("Admin") && AdminEditStatus && (!LedgerIsAdminSaved || (Model.EditEnabled == @Ledgers.LedgerNo)))
                                                                                    {
                                                                                        <td style= "background-color:whitesmoke;">
                                                                                            <div class="form-group"> 
                                                                                                @{
                                                                                                  Model.ACBWJustificationBudgEstNxtFin.Insert(LedgerNo, Ledgerdetails!=null && Ledgerdetails.ACBWJustificationBudgEstNxtFin!=null && Ledgerdetails.ACBWJustificationBudgEstNxtFin!=" "? Ledgerdetails.ACBWJustificationBudgEstNxtFin.ToString()  : " ");
                                                                                               }
                                                                                                
                                                                                                @Html.TextAreaFor(model => model.ACBWJustificationBudgEstNxtFin[LedgerNo], new { @class = "form-control", @id = @name16+@Ledgers.LedgerNo})
                                                                                                @Html.ValidationMessageFor(model => model.ACBWJustificationBudgEstNxtFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                        </td>
                                                                                    }
                                                                                    else if ((User.IsInRole("Admin") && (!AdminEditStatus || LedgerIsAdminSaved)) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                                                    {
                                                                                      <td style= "background-color:whitesmoke;">
                                                                                          <div class="form-group">
                                                                                              @{
                                                                                                 Model.ACBWJustificationBudgEstNxtFin.Insert(LedgerNo, Ledgerdetails!=null && Ledgerdetails.ACBWJustificationBudgEstNxtFin!=null && Ledgerdetails.ACBWJustificationBudgEstNxtFin!=" " ? Ledgerdetails.ACBWJustificationBudgEstNxtFin.ToString() : "");
                                                                                               }
                                                                                            
                                                                                            @Html.TextAreaFor(model => model.ACBWJustificationBudgEstNxtFin[LedgerNo], new { @class = "form-control", @id = @name16+@Ledgers.LedgerNo,@readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.ACBWJustificationBudgEstNxtFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                          </div>
                                                                                        </td>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        Model.ACBWJustificationBudgEstNxtFin.Insert(LedgerNo, " ");
                                                                                    }
                                                                                <td style="background-color:honeydew;">  
                                                                                    <table class="table" >
                                                                                    <thead> </thead>
                                                                                    <tbody>
                                                                                       @if ((!User.IsInRole("Admin") && GroupsStatusRowCount == 0 && Model.IsEnabled.Equals(true) && (!LedgerIsDelegateSaved || Model.EditEnabled ==@Ledgers.LedgerNo)))
                                                                                        {
                                                                                            <tr><td  style="border:none"> @Html.TextBoxFor(m => m.File, new { type = "file", @id = @name11+@Ledgers.LedgerNo, @dir = "rtl"})</td> </tr>
                                                                                            <tr><td  style="border:none"> @Html.ValidationMessage("Caution"+LedgerNo,"* only .pdf files with size 1 MB are allowed",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})</td></tr>
                                                                                            <tr><td  style="border:none"> @Html.ValidationMessage("FileMessage_"+LedgerNo,null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})</td></tr>
                                                                                            <br/>
                                                                                            <tr><td style="border:none"> <input id="@upload@Ledgers.LedgerNo" class="Submit" formaction="~/Tabs/Upload" type="submit" value="Upload" /></td> </tr>
                                                                                        }
                                                                                        
                                                                                    @foreach(var LedgerFiles in Model.Filess.Where (a => (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo))))
                                                                                    {
                                                                                        var FinalSubmitStatus = (from a in Model.Statuss where (a.SectionNumber == 0 && a.GroupNumber.Equals("0")) select a.AdminEditStatus).Count();
                                                                                                    <tr>
                                                                                                        @if ((User.IsInRole("Admin") && AdminEditStatus) || !User.IsInRole("Admin") || (User.IsInRole("Admin") && (FinalSubmitStatus > 0)))
                                                                                                        {
                                                                                                            <td style="border:none">@Html.ActionLink(@LedgerFiles.FileName,null,null,null,new{href =@LedgerFiles.SupportingDocumentPath, target = "_blank"} )</td>
                                                                                                            /*<td><input id="@view" class="ViewFile  btn-link" style="border:none; outline:none;  background-color: transparent;" formaction="~/Tabs/ViewFile" type="submit" value= "@LedgerFiles.FileName" /></td>*/
                                                                                                        }
                                                                                                        @if (!User.IsInRole("Admin") && GroupsStatusRowCount == 0 && !LedgerIsDelegateSaved)
                                                                                                        {
                                                                                                           <td style="border:none"><input id="@delete@Ledgers.LedgerNo" class="Submit btn-link" style="border:none; outline:none;  background-color: transparent;" formaction="~/Tabs/Delete" type="submit" value="Delete"/> </td>
                                                                                                        }
                                                                                                     </tr>      
                                                                                         
                                                                                    }
                                                                                    </tbody>
                                                                                    </table>
                                                                                </td>
                                                                                <td style="background-color:honeydew;">
                                                                                    @if((!User.IsInRole("Admin") && DelegateEditStatus && (!LedgerIsDelegateSaved || Model.EditEnabled==@Ledgers.LedgerNo) )||(User.IsInRole("Admin") && AdminEditStatus && (!LedgerIsAdminSaved  || (Model.EditEnabled == @Ledgers.LedgerNo))))
                                                                                    {
                                                                                
                                                                                   <button style="border:none;background-color:white" id="@save" class="Submit" formaction="~/Tabs/Save" type="submit" value="Save Budget" style="align-self:center">
                                                                                   <i class='bx bx-check' style="color:limegreen"></i></button>
                                                                                    }
                                                                                    @if ((!User.IsInRole("Admin") && LedgerIsDelegateSaved && DelegateEditStatus && (Model.EditEnabled != @Ledgers.LedgerNo)) || (User.IsInRole("Admin") && LedgerIsAdminSaved && AdminEditStatus && (Model.EditEnabled != @Ledgers.LedgerNo)))
                                                                                    {
                                                                                            <button style="border:none;background-color:white" id="@edit" class="Submit" formaction="~/Tabs/Edit" type="submit" value="Edit Budget" style="align-self:center">
                                                                                                <i class='bx bxs-pencil' style="color:blue"></i></button>
                                                                                    }
                                                                                @if((!User.IsInRole("Admin") && DelegateEditStatus && (LedgerIsDelegateSaved || Model.EditEnabled==@Ledgers.LedgerNo ))||(User.IsInRole("Admin") && AdminEditStatus && (LedgerIsAdminSaved || (Model.EditEnabled == @Ledgers.LedgerNo))))
                                                                                {
                                                                                            <button style="border:none;background-color:white" id="@Budgetdelete" class="Submit" formaction="~/Tabs/BudgetDelete" type="submit" value="Delete Budget" style="align-self:center">
                                                                                                <i class='bx bx-x' style="color:red"></i>     
                                                                                            </button>
                                                                                 }
                                                                                 </td>
                                                                         </tr>
                                                                            
                                                                        ++LedgerNo;
                                                                       }
                                                                        
                                                                        Count = LedgerNo-1;
                                                            }
                                                    
                                                    Count++;
                                                    TableCount++;
                                        }
                                                <tr>
                                                    <!--td>
                                                    </td-->
                                                    <td>
                                                    </td>
                                                    <td>
                                                        Sub-Total
                                                    </td>
                                                    <td>
                                                        Sub-Total
                                                    </td>

                                                    <td id="@Sumname1-Total">
                                                        @SumBudEstCurrFin.ToString("F4")
                                                    </td>
                                                    <td></td>
                                                    
                                                    <td></td>
                                                    
                                                    @if((User.IsInRole("Admin") && IsSubmittedToACBW) || !User.IsInRole("Admin") )
                                                    {
                                                    <td id="@Sumname2-Total">
                                                       @SumActPrevFin.ToString("F4")
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                     <td id="@Sumname2-Total">
                                                       0.00
                                                    </td>
                                                    }
                                                    @if((User.IsInRole("Admin") && IsSubmittedToACBW) || !User.IsInRole("Admin"))
                                                    {
                                                    <td id="@Sumname3-Total">
                                                        @SumActCurrFinTill2ndQuart.ToString("F4")
                                                    </td>
                                                    }
                                                    else
                                                    {
                                                     <td id="@Sumname3-Total">
                                                       0.00
                                                    </td>
                                                    }
                                                    @if ((User.IsInRole("Admin") && IsSubmittedToACBW) || !User.IsInRole("Admin"))
                                                    {
                                                        <td id="@Sumname4-Total">
                                                            @SumRevEstCurrFin.ToString("F4")
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                     <td id="@Sumname4-Total">
                                                       0.00
                                                     </td>
                                                    }
                                                    <td id="@Sumname5-Total">
                                                        @SumPerVarRevEstOverBudgEstCurrFin.ToString("F2") %
                                                    </td>
                                                    <td></td>
                                                    @if (User.IsInRole("Admin") || (!User.IsInRole("Admin")&& !FinalAdminEditStatus && FinalAdminEditCount>0))
                                                    {
                                                        <td id="@Sumname6-Total">
                                                            @SumACAndBWPropRECurrFin.ToString("F4")
                                                        </td>
                                                    }
                                                    @if (User.IsInRole("Admin"))
                                                    {
                                                    <td id="@Sumname11-Total">
                                                        @SumPerVarACBWRevEstOverBudgEstCurrFin.ToString("F2") %
                         
                                                    </td>
                                                    }
                                                    @if (User.IsInRole("Admin") || (!User.IsInRole("Admin")&& !FinalAdminEditStatus && FinalAdminEditCount>0))
                                                    {
                                                    <td></td>
                                                    }
                                                    <td id="@Sumname7-Total">
                                                       @SumBudgEstNexFin.ToString("F4")
                                                    </td>
                                                    <td id="@Sumname8-Total">
                                                        @SumPerVarRevEstOverBudgEstNxtFin.ToString("F2") %
                                                    </td>
                                                    <td></td>
                                                    @if (User.IsInRole("Admin") || (!User.IsInRole("Admin")&& !FinalAdminEditStatus && FinalAdminEditCount>0))
                                                    {
                                                        <td id="@Sumname9-Total">
                                                            @SumACAndBWPropRENxtFin.ToString("F4")
                                                        </td>
                                                    }
                                                    @if (User.IsInRole("Admin"))
                                                    {
                                                        <td id="@Sumname12-Total">
                                                            @SumPerVarACBWRevEstOverBudgEstNxtFin.ToString("F2") %
                                                        </td>
                                                    }
                                                    @if (User.IsInRole("Admin") || (!User.IsInRole("Admin")&& !FinalAdminEditStatus && FinalAdminEditCount>0))
                                                    {
                                                        <td></td>
                                                    }
                                                    <td style="border:none;"></td>
                                                    <td style="border:none;"></td>
                                                    
                                                </tr>
                                    </tbody>
                                </table>
                                        @*Html.Hidden("SectionName",Model.SectionName, new{@id = @identi+"-SectionName" })
                                        @Html.Hidden("GroupName",Model.GroupName,  new{@id = @identi+"-GroupName" })
                                        @Html.Hidden("SelectedAcademicYear", Model.SelectedAcademicYear,  new{@id = @identi+"-SelectedAcademicYear" })
                                        @Html.Hidden("SelectedDivisionName",Model.SelectedDivisionName,  new{@id = @identi+"-SelectedDivisionName" })
                                        @{
                                            var TotalDelegateSavedLedgers = (from d in Model.Detailss where d.SectionNumber.Equals(@inner.SectionNo)  && d.GroupNumber.Equals(@item.GroupNo) && d.HasDelegateSaved.Equals(true) select d.SubGroupNumber).Count();
                                            var TotalAdminSavedLedgers = (from e in Model.Detailss where e.SectionNumber.Equals(@inner.SectionNo)  && e.GroupNumber.Equals(@item.GroupNo) && e.HasAdminSaved.Equals(true) select e.SubGroupNumber).Count();
                                            Boolean ACBWSubmission = (from a in Model.Statuss where a.SectionNumber.Equals(@inner.SectionNo)  && a.GroupNumber.Equals(@item.GroupNo) select a.ACBWSubmission).FirstOrDefault();
                                         }
                                        
                                    @if (User.IsInRole("Admin") && AdminEditStatus && (TotalAdminSavedLedgers == TotalSubGroups)  && Model.IsEnabled.Equals(true) && !ACBWSubmission)
                                    {
                                            <input id="@SubmitChairPerson" class="Submit" formaction="~/Tabs/Index" type="submit" value="Submit to Chairperson for Approval" style="align-self:center"/>
                                        }
                                        else if(!User.IsInRole("Admin") && DelegateEditStatus && (TotalDelegateSavedLedgers == TotalSubGroups)  && Model.IsEnabled.Equals(true))
                                        {
                                            <input id="@SubmitACBW" class="Submit" formaction="~/Tabs/Index" type="submit" value="Submit to AC&BW for Approval" style="align-self:center"/>
                                        }
                                        }*@
                            </div>
                          
                          
                        }
                       CounterBody++;
                    }
                  
                </div>
            </div>
          }

           else
           {
             <div id="@inneridenti" class="tab-pane fade" role="tabpanel" aria-labelledby="@inneridenti-tab" aria-selected="false" style="width: 1750px;">

                @*if(GroupsCount>0)
                {
                    <table id="@inneridenti-Totaltable" class="table">
                        <thead>
                            <tr class="text-center">
                                <th colspan="100" style="color:darkcyan;border-bottom:hidden;">@inner.SectionName Section-Total</th>
                            </tr>
                            <tr class="text-center">
                                <th colspan="100" style="color:red;border-bottom:hidden;">(*FIGURES IN CRORES)</th>
                            </tr>
                            <tr>
                                <th>

                                </th>
                                <th class="CurrentBudgetEstimates w-10">

                                </th>
                                <th class="InterimRevEst w-10" >
                                                        
                                </th>
                                <th class="ProvisionalRevEst w-10" >
                                                        
                                </th>
                                <th class="PreviousActualBudget w-10">

                                </th>
                                <th class="PreviousHalfYearActualBudget w-10">

                                </th>
                                <th class="CurrentYearRevisedEstimates w-10">

                                </th>
                                <th class="VariationInRevisedEstimates w-10">

                                </th>
                                @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                {
                                    <th class="ACBWProposalForRevisedEstimates w-10">

                                    </th>
                                }
                                <th class="DelegateJustificationRevEst w-10">
                                                       
                                </th>
                                <th class="ACBWJustificationRevEst w-10">
                                                       
                                </th>
                                <th class="BudgetEstimatesNextYear w-10">

                                </th>
                                <th class="VariationInBudgetEstimates w-10">

                                </th>
                                @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                {
                                    <th class="ACBWProposalForBudgetEstimates w-10">

                                    </th>
                                }

                            </tr>
                        </thead>
                        <tbody>
                            <tr style="border-bottom : hidden;">
                                <td>
                                    @inner.SectionNo @inner.SectionName-Total
                                </td>

                                <td id="SumBudEstCurrFin">
                                    @SectionSumBudEstCurrFin.ToString("F4")
                                </td>
                                <td id="SumActPrevFin">
                                   @SectionSumActPrevFin.ToString("F4")
                                </td>
                                <td id="SumActCurrFinTillsecondQuart">
                                   @SectionSumActCurrFinTill2ndQuart.ToString("F4")
                                </td>
                                        <td id="SumRevEstCurrFin">
                                   @SectionSumRevEstCurrFin.ToString("F4")
                                </td>
                                        <td id="SumPerVarRevEstOverBudgEstCurrFin">
                                   @SectionSumPerVarRevEstOverBudgEstCurrFin
                                </td>
                                @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                {
                                    <td id="SumACAndBWPropRECurrFin">
                                       @SectionSumACAndBWPropRECurrFin.ToString("F4")
                                    </td>
                                }
                                <td id="SumBudgEstNexFin">
                                    @SectionSumBudgEstNexFin.ToString("F4")
                                </td>
                                <td id="SumPerVarRevEstOverBudgEstNxtFin">
                                    @SectionSumPerVarRevEstOverBudgEstNxtFin
                                </td>
                                @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                {
                                            <td id="SumACAndBWPropRENxtFin">
                                        @SectionSumACAndBWPropRENxtFin.ToString("F4")
                                    </td>
                                }
                            </tr>
                        </tbody>
                    </table>
                }*@
                <ul id="innertab2" class="nav nav-pills" role="tablist">

                    @foreach (var item in Model.Groupss.Where(d => d.SectionNo == @inner.SectionNo))
                    {
                        var identi = String.Concat("Budget", Convert.ToInt32((Convert.ToDecimal(@item.GroupNo) * 10)).ToString());
                        if (CountHeader == 0)
                        {
                            <li class="nav-item" role="presentation">
                                <button class="nav-link active" id="@identi-nav" data-bs-toggle="tab" data-bs-target="#@identi" type="button" role="tab" aria-controls="@identi" aria-selected="true">@item.GroupName</button>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item" role="presentation">
                                        <button class="nav-link" id="@identi-nav" data-bs-toggle="tab" data-bs-target="#@identi" type="button" role="tab" aria-controls="@identi" aria-selected="false">@item.GroupName</button>
                            </li>
                        }

                        CountHeader++;
                    }
                </ul>

                <div id="innertabcontent2" class="tab-content">
                    <br />
                    @foreach (var item in Model.Groupss.Where(d => d.SectionNo == @inner.SectionNo))
                    {
                       var GroupsStatusRowCount = (from a in Model.Statuss where (a.SectionNumber == @inner.SectionNo && a.GroupNumber.Equals(@item.GroupNo)) select a.DelegateEditStatus).Count();
                       var AdminStatus = (from a in Model.Statuss where (a.SectionNumber == @inner.SectionNo && a.GroupNumber.Equals(@item.GroupNo)) select a.AdminEditStatus).FirstOrDefault();
                       Boolean GroupACBWSubmissionStatus = (from a in Model.Statuss where (a.SectionNumber == @inner.SectionNo && a.GroupNumber.Equals(@item.GroupNo)) select a.ACBWSubmission).FirstOrDefault();
                       var IsSubmittedToChairman = (from a in Model.Statuss where (a.SectionNumber == 0 && a.GroupNumber.Equals("0")) select a.ACBWSubmission).Count();

                       Boolean IsSubmittedToACBW = (from a in Model.Statuss where (a.SectionNumber.Equals(0) && a.GroupNumber.Equals("0")) select a.ACBWSubmission).FirstOrDefault();

                       var TotalSubGroups = (from b in Model.SubGroupss where b.GroupNo.Equals(@item.GroupNo) && b.RequireInput == false select b.SubGroupNo).Count();

                        if (GroupsStatusRowCount == 0 && Model.IsEnabled.Equals(true))
                        {
                                    DelegateEditStatus = true;
                                    AdminEditStatus = false;
                        }
                        else if (AdminStatus && Model.IsEnabled.Equals(true))
                        {
                                     DelegateEditStatus = false;
                                    AdminEditStatus = true;
                        }
                         else
                        {
                                    DelegateEditStatus = false;
                                    AdminEditStatus = false;
                        }
                        int TableCount = 0;
                        var Submit = String.Concat("Submit", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                        var SubmitACBW = String.Concat("SubmitACBW", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                        var SubmitChairPerson = String.Concat("SubmitChairPerson", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                        var identi = String.Concat("Budget", Convert.ToInt32((Convert.ToDecimal(@item.GroupNo) * 10)).ToString());
                        
                         var SumBudEstCurrFin = (from a in Model.Approved where a.GroupNumber.Equals(@item.GroupNo) select a.BudEstNextFin).Sum();
                         var SumActPrevFin = (from a in Model.Detailss where a.GroupNumber.Equals(@item.GroupNo) select a.ActPrevFin).Sum();
                         var SumActCurrFinTill2ndQuart = (from a in Model.Detailss where a.GroupNumber.Equals(@item.GroupNo) select a.ActCurrFinTill2ndQuart).Sum();
                         var SumRevEstCurrFin = (from a in Model.Detailss where a.GroupNumber.Equals(@item.GroupNo) select a.RevEstCurrFin).Sum();
                         var SumACAndBWPropRECurrFin = (from a in Model.Detailss where a.GroupNumber.Equals(@item.GroupNo) select a.ACAndBWPropRECurrFin).Sum();
                         var SumBudgEstNexFin = (from a in Model.Detailss where a.GroupNumber.Equals(@item.GroupNo) select a.BudgEstNexFin).Sum();
                         var SumACAndBWPropRENxtFin = (from a in Model.Detailss where a.GroupNumber.Equals(@item.GroupNo) select a.ACAndBWPropRENxtFin).Sum();
                         var SumPerVarRevEstOverBudgEstCurrFin = 0.00;
                         var SumPerVarRevEstOverBudgEstNxtFin = 0.00;
                         var SumPerVarACBWRevEstOverBudgEstCurrFin = 0.00;
                         var SumPerVarACBWRevEstOverBudgEstNxtFin = 0.00;

                         @if(Model.IsEnabled.Equals(true) && GroupsStatusRowCount > 0)
                         {
                             SumPerVarRevEstOverBudgEstCurrFin = SumBudEstCurrFin != Convert.ToDecimal(0.00) ? Convert.ToInt32(Convert.ToDecimal((SumRevEstCurrFin - SumBudEstCurrFin) / SumBudEstCurrFin)*100) : Convert.ToInt32(0);
                             SumPerVarRevEstOverBudgEstNxtFin = SumRevEstCurrFin != Convert.ToDecimal(0.00) ? Convert.ToInt32(Convert.ToDecimal((SumBudgEstNexFin - SumRevEstCurrFin) / SumRevEstCurrFin)*100) : Convert.ToInt32(0);
                             SumPerVarACBWRevEstOverBudgEstCurrFin = SumBudEstCurrFin != Convert.ToDecimal(0.00) ? Convert.ToInt32(Convert.ToDecimal((SumACAndBWPropRECurrFin - SumBudEstCurrFin) / SumBudEstCurrFin) * 100) : Convert.ToInt32(0);
                             SumPerVarACBWRevEstOverBudgEstNxtFin = SumACAndBWPropRECurrFin != Convert.ToDecimal(0.00) ? Convert.ToInt32(Convert.ToDecimal((SumACAndBWPropRENxtFin - SumACAndBWPropRECurrFin) / SumACAndBWPropRECurrFin)*100) : Convert.ToInt32(0);
                         }
                         else
                         {
                               SumPerVarRevEstOverBudgEstCurrFin = Convert.ToDouble(0.00);
                               SumPerVarRevEstOverBudgEstNxtFin = Convert.ToDouble(0.00);
                               SumPerVarACBWRevEstOverBudgEstCurrFin = Convert.ToDouble(0.00);
                               SumPerVarACBWRevEstOverBudgEstNxtFin = Convert.ToDouble(0.00);
                         }

                            var Sumname1 = String.Concat("BudEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname2 = String.Concat("ActPrevFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname3 = String.Concat("ActCurrFinTillsecondQuart", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname4 = String.Concat("RevEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname5 = String.Concat("PerVarRevEstOverBudgEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname6 = String.Concat("ACAndBWPropRECurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname7 = String.Concat("BudgEstNexFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname8 = String.Concat("PerVarRevEstOverBudgEstNxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname9 = String.Concat("ACAndBWPropRENxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname10 = String.Concat("Justification", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname11 = String.Concat("PerVarACBWRevEstOverBudgEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                            var Sumname12 = String.Concat("PerVarACBWRevEstOverBudgEstNxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);

                        if (CounterBody == 0)
                        {
                           
                                        
                            <div id="@identi" class="tab-pane fade show active" role="tabpanel" aria-labelledby="@identi-tab" style="width: 1750px;">

                                @if (!User.IsInRole("Admin") && AdminEditStatus  && @Model.ApprovedMessage.Equals(" "))
                                {
                                   <div style="color:green"> * Budget proposal @Model.SelectedAcademicYear for <span style="color:red">'@item.GroupName'</span> has been submitted to AC&BW successfully </div>
                                }
                                else if(User.IsInRole("Admin") && GroupACBWSubmissionStatus && IsSubmittedToChairman==0)
                                {
                                    <div style="color:green"> * Budget values for @Model.SelectedAcademicYear for <span style="color:red">'@item.GroupName'</span> has been saved successfully </div>
                                }
                                <div class="fw-bold text-center">
                                           <span colspan="23" style="color:red;border-bottom:hidden;">(*FIGURES IN CRORES)</span>
                                 </div>
                                <table id="@identi-outertable" class="table table-responsive table-bordered table-hover" style="width:2600px;" >
                                            <!--th></!--th-->
                                    <thead>
                                        
                                        <tr>
                                          @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                          {
                                           <th colspan="3" class="align-text-middle" style="background-color:honeydew;">     </th>
                                           <th colspan="3" class="align-text-middle" style= "background-color: floralwhite;text-align:center;"> Interim Revision Sections </th>
                                           <th colspan="8" class="align-text-middle" style= "background-color: aliceblue;text-align:center;"> Revision Estimates Section of CY    </th>
                                           <th colspan="6" class="align-text-middle" style= "background-color:whitesmoke;text-align:center;">Budget Estimates Section of Next Year   </th>
                                           <th colspan="2" class="align-text-middle" style="background-color:honeydew;">     </th>
                                          }
                                          else
                                          {
                                              <th colspan="3" class="align-text-middle" style="background-color:honeydew;">     </th>
                                              <th colspan="3" class="align-text-middle" style= "background-color: floralwhite;text-align:center;"> Interim Revision Sections </th>
                                              <th colspan="5" class="align-text-middle" style= "background-color: aliceblue;text-align:center;"> Revision Estimates Section of CY    </th>
                                              <th colspan="3" class="align-text-middle" style= "background-color:whitesmoke;text-align:center;">Budget Estimates Section of Next Year   </th>
                                              <th colspan="2" class="align-text-middle" style="background-color:honeydew;">     </th>
                                          }
                                        </tr>
                                        <tr class="align-text-top">
                                            <!--th></!--th-->
                                            <th style="width:100px;background-color:honeydew;">
                                                @*SubGroupNumber*@
                                                HEAD NO.
                                            </th>
                                            <th style="width:100px;background-color:honeydew;">
                                                SUBHEAD NO.
                                            </th>
                                            <th style="width:130px;background-color:honeydew;">
                                                @*SubGroupName*@
                                                HEAD NAME
                                            </th>
                                            <th class="CurrentBudgetEstimates" style= "background-color: floralwhite;width:130px;">
                                                        
                                            </th>
                                            <th class="InterimRevEst" style= "background-color: floralwhite;width:130px;">
                                                        
                                            </th>
                                            <th class="ProvisionalRevEst" style= "background-color: floralwhite;width:130px;">
                                                        
                                            </th>
                                            <th class="PreviousActualBudget" style= "background-color: aliceblue;width:130px;">
                                                
                                            </th>
                                            <th class="PreviousHalfYearActualBudget" style= "background-color: aliceblue;width:130px;">
                                                
                                            </th>
                                            <th class="CurrentYearRevisedEstimates" style= "background-color: aliceblue;width:130px;">
                                                
                                            </th>
                                            <th class="VariationInRevisedEstimates" style= "background-color: aliceblue;width:100px;">
                                                       
                                            </th>
                                            <th class="DelegateJustificationRevEst" style= "background-color: aliceblue;width:130px;">
                                                       
                                            </th>
                                            @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                             {
                                               <th class="ACBWProposalForRevisedEstimates" style= "background-color: aliceblue;width:130px;">
                                                 
                                               </th>
                                               }
                                             @if (User.IsInRole("Admin"))
                                             {
                                             <th class="VariationInRevisedEstimates" style= "background-color: aliceblue;width:100px;">
                                                      
                                            </th>
                                            } 
                                            @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                             {
                                                        <th class="ACBWJustificationRevEst" style= "background-color: aliceblue;width:130px;">

                                                        </th>
                                                    }
                                            <th class="BudgetEstimatesNextYear" style= "background-color:whitesmoke;width:130px;">
                                                
                                            </th>
                                            <th class="VariationInBudgetEstimates" style= "background-color:whitesmoke;width:100px;">
                                                
                                            </th>
                                           
                                            <th class="Justification " style= "background-color:whitesmoke;width: 130px;">
                                                       
                                            </th>
                                            @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                    {
                                                        <th class="ACBWProposalForBudgetEstimates" style= "background-color:whitesmoke;width:130px;">

                                                        </th>

                                                    }
                                                @if (User.IsInRole("Admin"))
                                                {
                                                <th class="VariationInBudgetEstimates" style= "background-color:whitesmoke;width:100px;">
                                                
                                                </th>
                                                
                                                }
                                               @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                               {
                                                        <th class="ACBWJustificationBudgEstNxtFin" style= "background-color:whitesmoke;width:130px;">

                                                        </th>
                                                    }
                                               <th class="UploadDocuments" style="width:130px;background-color:honeydew;">
                                                       
                                               </th>
                                               <th style="width:50px;background-color:honeydew;">Action</th>
                                        </tr>
                                    </thead>
                                    <tbody> 
                                        
                                        @foreach (var Subs in Model.SubGroupss.Where(d => d.GroupNo.Equals(@item.GroupNo)))
                                        {
                                                    var details = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a).FirstOrDefault();
                                                    var PrevYearApp =  (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a).FirstOrDefault();
                                                    
                                                    var TotalLedgers = (from c in Model.Ledgerss where c.SubGroupNo.Equals(@Subs.SubGroupNo) select c.LedgerNo).Count();

                                                    TotalSubGroups = (TotalSubGroups + TotalLedgers);

                                                    @if(@Subs.RequireInput)
                                                    {
                                                        int DelegateSavedCount = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.HasDelegateSaved.Equals(true) select a.SubGroupNumber).Count();
                                                        int AdminSavedCount = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.HasAdminSaved.Equals(true) select a.SubGroupNumber).Count();
                                                        
                                                        @if(DelegateSavedCount > 0)
                                                             IsDelegateSaved = true;
                                                        else
                                                            IsDelegateSaved = false;

                                                        @if(AdminSavedCount > 0)
                                                             IsAdminSaved = true;
                                                        else
                                                            IsAdminSaved = false;
                                                    }
                                                    else
                                                    {
                                                     IsDelegateSaved = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.HasDelegateSaved).FirstOrDefault();
                                                     IsAdminSaved = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.HasAdminSaved).FirstOrDefault();
                                                    }
                                                    var name1 = String.Concat("BudEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name2 = String.Concat("ActPrevFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name3 = String.Concat("ActCurrFinTillsecondQuart", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name4 = String.Concat("RevEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name5 = String.Concat("PerVarRevEstOverBudgEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name6 = String.Concat("ACAndBWPropRECurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name7 = String.Concat("BudgEstNexFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name8 = String.Concat("PerVarRevEstOverBudgEstNxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name9 = String.Concat("ACAndBWPropRENxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name10 = String.Concat("Justification", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name11 = String.Concat("UploadFile", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name12 = String.Concat("InterimRevEst", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name13 = String.Concat("ProvisionalRevEst", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name14 = String.Concat("DelegateJustificationRevEst", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name15 = String.Concat("ACBWJustificationRevEst", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name16 = String.Concat("ACBWJustificationBudgEstNxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name17 = String.Concat("PerVarACBWRevEstOverBudgEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name18 = String.Concat("PerVarACBWRevEstOverBudgEstNxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);


                                                    var upload = String.Concat("UploadButton", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var delete = String.Concat("DeleteButton", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var view = String.Concat("ViewButton", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);

                                                    var save = String.Concat("Save", @inner.SectionNo.ToString(),"_",@item.GroupNo, @TableCount);
                                                    var edit = String.Concat("Edit", @inner.SectionNo.ToString(), "_",@item.GroupNo, @TableCount);
                                                    var Budgetdelete = String.Concat("Delete", @inner.SectionNo.ToString(), "_",@item.GroupNo, @TableCount);

                                                    var LedgerCount = (from a in Model.Ledgerss where a.SubGroupNo.Equals(@Subs.SubGroupNo) select a.LedgerNo).Count();
                                                    
                                                     

                                                    <tr>
                                                        <!--td class=""></!--td-->
                                                        <td style= "background-color:honeydew;">
                                                            @{
                                                              Model.SubGroupNameOrLedgerName.Insert(Count, Subs.SubGroupNo);
                                                             }

                                                            @Html.DisplayFor(model => model.SubGroupNameOrLedgerName[Count])
                                                            @Html.HiddenFor(model => model.SubGroupNameOrLedgerName[Count])
                                                        </td>
                                                        <td style= "background-color:honeydew;"></td>
                                                        <td style= "background-color:honeydew;">
                                                            @Subs.subGroupName
                                                        </td>
                                                        <td style= "background-color: floralwhite;">
                                                        
                                                        @if (@Subs.RequireInput && DelegateEditStatus && !IsDelegateSaved)
                                                        {
                                                            var LedgerPastYearAppBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();

                                                                <div class="form-group text-nowrap"> 
                                                                 @{
                                                                        Model.BudEstCurrFin.Insert(Count, LedgerPastYearAppBudEstCurrFin != null ? Convert.ToDecimal(LedgerPastYearAppBudEstCurrFin) : Convert.ToDecimal(0.00));
                                                                   }
                                                                 @Html.TextBoxFor(model => model.BudEstCurrFin[Count],new { @maxlength="20", @class = "form-control", @id = @name1, @dir = "rtl",@readonly = "readonly"} )
                                                                 @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})

                                                                </div>
                                                            
                                                        }
                                                        else if ((@Subs.RequireInput && !DelegateEditStatus && IsSubmittedToACBW) || (@Subs.RequireInput && !User.IsInRole("Admin") && IsDelegateSaved))
                                                        {
                                                            var LedgerSumBudEstCurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstCurrFin).Sum();                                                                                                                            
                                                            
                                                            <div class="form-group text-nowrap">
                                                                    @{
                                                                        Model.BudEstCurrFin.Insert(Count, LedgerSumBudEstCurrFin != null ? Convert.ToDecimal(LedgerSumBudEstCurrFin) : Convert.ToDecimal(0.00));
                                                                     }
                                                                     @Html.TextBoxFor(model => model.BudEstCurrFin[Count],new { @maxlength="20", @class = "form-control", @id = @name1, @dir = "rtl", @readonly = "readonly"} )
                                                                     @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                
                                                            }

                                                            else if ((!DelegateEditStatus && IsSubmittedToACBW) || (!User.IsInRole("Admin") && IsDelegateSaved))
                                                            {
                                                                <div class="form-group text-nowrap">
                                                                   
                                                                   @{
                                                                        Model.BudEstCurrFin.Insert(Count, details != null ? Convert.ToDecimal(details.BudEstCurrFin) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @maxlength="20",@class = "form-control", @id = @name1, @dir = "rtl", @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})

                                                                </div>
                                                                
                                                            }
                                                            else
                                                            {
                                                                <div class="form-group ">
                                                                    @{
                                                                        Model.BudEstCurrFin.Insert(Count,(PrevYearApp != null) ? Convert.ToDecimal(PrevYearApp.BudEstNextFin) : Convert.ToDecimal(0.00));
                                                                     }
                                                                    @Html.TextBoxFor(model => model.BudEstCurrFin[Count],new { @maxlength="20",@class = "form-control", @id = @name1, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})

                                                                </div>
                                                                
                                                        }
                                                        </td>
                                                        <td style= "background-color: floralwhite;">
                                                        
                                                        @if (@Subs.RequireInput)
                                                        {
                                                            var LedgerSumInterimRevEst = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.InterimRevEst).Sum();                                                                                                                            
                                                            
                                                            <div class="form-group">
                                                                    @{
                                                                        Model.InterimRevEst.Insert(Count, LedgerSumInterimRevEst != null ? Convert.ToDecimal(LedgerSumInterimRevEst) : Convert.ToDecimal(0.00));
                                                                     }
                                                                     @Html.TextBoxFor(model => model.InterimRevEst[Count], new { @maxlength="20",@class = "form-control", @id = @name12, @dir = "rtl", @readonly = "readonly"} )
                                                                     @Html.ValidationMessageFor(model => model.InterimRevEst[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                        }
                                                        else 
                                                        {
                                                                <div class="form-group">
                                                                   @{
                                                                        Model.InterimRevEst.Insert(Count, details != null ? Convert.ToDecimal(details.InterimRevEst) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.InterimRevEst[Count], new { @maxlength="20",@class = "form-control", @id = @name12, @dir = "rtl", @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.InterimRevEst[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                        }
                                                           
                                                        </td>
                                                        <td style= "background-color: floralwhite;">
                                                        
                                                        @if (@Subs.RequireInput)
                                                        {
                                                            var LedgerSumProvisionalRevEst = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ProvisionalRevEst).Sum();                                                                                                                            
                                                            
                                                            <div class="form-group">
                                                                    @{
                                                                        Model.ProvisionalRevEst.Insert(Count, LedgerSumProvisionalRevEst != null ? Convert.ToDecimal(LedgerSumProvisionalRevEst) : Convert.ToDecimal(0.00));
                                                                     }
                                                                     @Html.TextBoxFor(model => model.ProvisionalRevEst[Count], new {@maxlength="20", @class = "form-control", @id = @name13, @dir = "rtl", @readonly = "readonly"} )
                                                                     @Html.ValidationMessageFor(model => model.ProvisionalRevEst[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                        }
                                                        else 
                                                        {
                                                                <div class="form-group">
                                                                   @{
                                                                        Model.ProvisionalRevEst.Insert(Count, details != null ? Convert.ToDecimal(details.ProvisionalRevEst) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.ProvisionalRevEst[Count], new { @maxlength="20",@class = "form-control", @id = @name13, @dir = "rtl", @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.ProvisionalRevEst[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                        }
                                                           
                                                        </td>
                                                        <td style= "background-color: aliceblue;">
                                                        @if(DelegateEditStatus && User.IsInRole("Admin"))
                                                        {
                                                            <div>
                                                               @{
                                                                  Model.ActPrevFin.Insert(Count, Convert.ToDecimal(0.00));
                                                                }   
                                                                @Html.TextBoxFor(model => model.ActPrevFin[Count], new { @maxlength="20",@class = "form-control", @id = @name2, @dir = "rtl", @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.ActPrevFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        else if (@Subs.RequireInput)
                                                        {
                                                            var LedgerSumActPrevFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActPrevFin).Sum();
                                                            <div class="form-group">  
                                                               @{
                                                                  Model.ActPrevFin.Insert(Count, LedgerSumActPrevFin != null ? Convert.ToDecimal(LedgerSumActPrevFin) : Convert.ToDecimal(0.00));
                                                                }   
                                                                @Html.TextBoxFor(model => model.ActPrevFin[Count], new { @maxlength="20",@class = "form-control", @id = @name2, @dir = "rtl", @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.ActPrevFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                            
                                                        }
                                                        else if ((!DelegateEditStatus) || (!User.IsInRole("Admin") && IsDelegateSaved  && Model.EditEnabled!=@Subs.SubGroupNo))
                                                        {
                                                                <div class="form-group">
                                                                  @{ 
                                                                     Model.ActPrevFin.Insert(Count, details != null ? Convert.ToDecimal(details.ActPrevFin) : Convert.ToDecimal(0.00));
                                                                   }
                                                                    @Html.TextBoxFor(model => model.ActPrevFin[Count], new { @maxlength="20",@class = "form-control", @id = @name2, @dir = "rtl", @readonly = "readonly"} )
                                                                    @Html.ValidationMessageFor(model => model.ActPrevFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                
                                                        }
                                                        else
                                                        {
                                                            <div class="form-group">
                                                               @{
                                                                  Model.ActPrevFin.Insert(Count, details != null ? Convert.ToDecimal(details.ActPrevFin) : Convert.ToDecimal(0.00));
                                                                }
                                                                @Html.TextBoxFor(model => model.ActPrevFin[Count], new { @maxlength="20",@class = "form-control", @id = @name2, @dir = "rtl"  })
                                                                @Html.ValidationMessageFor(model => model.ActPrevFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                            
                                                        }
                                                        </td>
                                                        <td style= "background-color: aliceblue;">
                                                        @if(DelegateEditStatus && User.IsInRole("Admin"))
                                                        {
                                                            <div class="form-group">
                                                               @{
                                                                  Model.ActCurrFinTillsecondQuart.Insert(Count, Convert.ToDecimal(0.00));
                                                                 }
                                                                 @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[Count], new { @class = "form-control", @id = @name3, @dir = "rtl", @readonly = "readonly"})
                                                                 @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        
                                                        else if (@Subs.RequireInput)
                                                        {
                                                                var LedgerSumActCurrFinTill2ndQuart = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActCurrFinTill2ndQuart).Sum();
                                                             <div class="form-group">
                                                               @{
                                                                  Model.ActCurrFinTillsecondQuart.Insert(Count, LedgerSumActCurrFinTill2ndQuart != null ? Convert.ToDecimal(LedgerSumActCurrFinTill2ndQuart) : Convert.ToDecimal(0.00));
                                                                 }
                                                                 @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[Count], new { @class = "form-control", @id = @name3, @dir = "rtl", @readonly = "readonly"})
                                                                 @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                
                                                            }
                                                        else if (!DelegateEditStatus || (!User.IsInRole("Admin") && IsDelegateSaved  && Model.EditEnabled!=@Subs.SubGroupNo))                                                       {                                       
                                                              <div class="form-group">
                                                                @{
                                                                   Model.ActCurrFinTillsecondQuart.Insert(Count, details != null ? Convert.ToDecimal(details.ActCurrFinTill2ndQuart) : Convert.ToDecimal(0.00));
                                                                 }
                                                                  @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[Count], new { @class = "form-control", @id = @name3, @dir = "rtl", @readonly = "readonly"})
                                                                 @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                
                                                            }
                                                        else
                                                        {
                                                            <div class="form-group">
                                                               @{ 
                                                                  Model.ActCurrFinTillsecondQuart.Insert(Count, details != null ? Convert.ToDecimal(details.ActCurrFinTill2ndQuart) : Convert.ToDecimal(0.00));
                                                                } 
                                                                @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[Count], new { @class = "form-control", @dir = "rtl", @id = @name3})
                                                                @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                            
                                                        }
                                                        </td>
                                                        <td style= "background-color: aliceblue;">
                                                        @if (@Subs.RequireInput && DelegateEditStatus && !IsDelegateSaved)
                                                        {
                                                                var PastYearBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin ).Sum();
                                                            <div class="form-group">
                                                               @{ 
                                                                 Model.RevEstCurrFin.Insert(Count, PastYearBudEstCurrFin != null ? Convert.ToDecimal(PastYearBudEstCurrFin) : Convert.ToDecimal(0.00));
                                                                } 
                                                                 @Html.TextBoxFor(model => model.RevEstCurrFin[Count], new { @class = "form-control", @id = @name4, @dir = "rtl", @readonly = "readonly"})
                                                                 @Html.ValidationMessageFor(model => model.RevEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                                
                                                            }
                                                        else if ((@Subs.RequireInput && !DelegateEditStatus) || (@Subs.RequireInput && !User.IsInRole("Admin") && IsDelegateSaved && Model.EditEnabled!=@Subs.SubGroupNo))
                                                        {
                                                                var PastYearBudEstCurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.RevEstCurrFin).Sum();
                                                            <div class="form-group">
                                                             @{   
                                                                Model.RevEstCurrFin.Insert(Count, PastYearBudEstCurrFin != null ? Convert.ToDecimal(PastYearBudEstCurrFin) : Convert.ToDecimal(0.00));
                                                              }   
                                                                @Html.TextBoxFor(model => model.RevEstCurrFin[Count], new { @class = "form-control", @id = @name4, @dir = "rtl", @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.RevEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        else if(User.IsInRole("Admin") && DelegateEditStatus )
                                                        {
                                                            <div class="form-group">
                                                             @{  
                                                                Model.RevEstCurrFin.Insert(Count, PrevYearApp != null ? Convert.ToDecimal(PrevYearApp.BudEstNextFin) : Convert.ToDecimal(0.00));
                                                              }  
                                                                @Html.TextBoxFor(model => model.RevEstCurrFin[Count], new { @class = "form-control", @id = @name4, @dir = "rtl", @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.RevEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        else if(!DelegateEditStatus || (!User.IsInRole("Admin") && IsDelegateSaved && Model.EditEnabled!=@Subs.SubGroupNo))
                                                        {
                                                              <div class="form-group">
                                                                @{    
                                                                  Model.RevEstCurrFin.Insert(Count, details != null ? Convert.ToDecimal(details.RevEstCurrFin) : Convert.ToDecimal(0.00));
                                                                 }  
                                                                    @Html.TextBoxFor(model => model.RevEstCurrFin[Count], new { @class = "form-control", @id = @name4, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.RevEstCurrFin[Count],null, new { @class = "text-danger", @style="font-size: 0.8em;font-style: italic;" })
                                                              </div> 
                                                        }
                                                        else
                                                        {
                                                            <div class="form-group">
                                                              @if(details!=null && !@details.ProvisionalRevEst.Equals(Convert.ToDecimal(0.00)) && !IsDelegateSaved)
                                                              {
                                                                Model.RevEstCurrFin.Insert(Count, details != null ? Convert.ToDecimal(@details.ProvisionalRevEst) : Convert.ToDecimal(0.00));
                                                               }
                                                               else
                                                               { 
                                                                Model.RevEstCurrFin.Insert(Count, PrevYearApp != null ? Convert.ToDecimal(PrevYearApp.BudEstNextFin) : Convert.ToDecimal(0.00));
                                                                }
                                                                @Html.TextBoxFor(model => model.RevEstCurrFin[Count], new { @class = "form-control", @dir = "rtl", @id = @name4})
                                                                @Html.ValidationMessageFor(model => model.RevEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        </td>
                                                        <td style= "background-color: aliceblue;">
                                                        @if (@Subs.RequireInput && DelegateEditStatus && !IsDelegateSaved)
                                                        {
                                                            
                                                          var PastYearSumBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();                                                                                                                           
                                                              <div class="form-group">
                                                              @{
                                                                        Model.PerVarRevEstOverBudgEstCurrFin.Insert(Count, PastYearSumBudEstCurrFin != Convert.ToDecimal(0.0000) ? Convert.ToString(((Convert.ToDecimal(PastYearSumBudEstCurrFin) - Convert.ToDecimal(PastYearSumBudEstCurrFin)) / Convert.ToDecimal(PastYearSumBudEstCurrFin)) * 100) : (0).ToString("F2"));
                                                               }
                                                                @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name5,  @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            }
                                                        else if((@Subs.RequireInput && !DelegateEditStatus) || (@Subs.RequireInput && !User.IsInRole("Admin") && IsDelegateSaved))
                                                        {
                                                            var LedgerSumRevEstCurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.RevEstCurrFin).Sum();
                                                            var LedgerSumBudEstCurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstCurrFin).Sum();
                                                                <div class="form-group">
                                                                @{
                                                                    Model.PerVarRevEstOverBudgEstCurrFin.Insert(Count, LedgerSumBudEstCurrFin!=Convert.ToDecimal(0.0000) ? Convert.ToString(((Convert.ToDecimal(LedgerSumRevEstCurrFin)- Convert.ToDecimal(LedgerSumBudEstCurrFin))/Convert.ToDecimal(LedgerSumBudEstCurrFin))*100): (0).ToString("F2"));
                                                                 }
                                                                    @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name5,  @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                        }                                                     
                                                        
                                                        else if (!DelegateEditStatus || (!User.IsInRole("Admin") && IsDelegateSaved))
                                                        {
                                                            <div class="form-group">
                                                               @{ 
                                                                  Model.PerVarRevEstOverBudgEstCurrFin.Insert(Count, (details!=null && details.BudEstCurrFin!=Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(details.RevEstCurrFin)- Convert.ToDecimal(details.BudEstCurrFin))/Convert.ToDecimal(details.BudEstCurrFin))*100)  : (0).ToString("F2"));
                                                                } 
                                                                @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name5, @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                                <div class="form-group">
                                                                 @{
                                                                    Model.PerVarRevEstOverBudgEstCurrFin.Insert(Count, (PrevYearApp!=null && PrevYearApp.BudEstNextFin!=Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(PrevYearApp.BudEstNextFin)- Convert.ToDecimal(PrevYearApp.BudEstNextFin))/Convert.ToDecimal(PrevYearApp.BudEstNextFin))*100)   : (0).ToString("F2"));
                                                                  }
                                                                     @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name5, @readonly = "readonly"})
                                                                     @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            }
                                                        </td>
                                                        
                                                        <td style= "background-color: aliceblue;">
                                                                                    @if ((!DelegateEditStatus && !@Subs.RequireInput) || (!User.IsInRole("Admin") && IsDelegateSaved))
                                                                                    {
                                                                                            <div class="form-group">
                                                                                             @{  
                                                                                                Model.DelegateJustificationRevEst.Insert(Count, (details != null && details.DelegateJustificationRevEst!=null) ? details.DelegateJustificationRevEst.ToString(): "");
                                                                                              }  
                                                                                            @Html.TextBoxFor(model => model.DelegateJustificationRevEst[Count], new { @class = "form-control", @id = @name14, @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.DelegateJustificationRevEst[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                        
                                                                                    }
                                                                                    else if((User.IsInRole("Admin") && DelegateEditStatus) || @Subs.RequireInput )
                                                                                    {
                                                                                        <div class="form-group">
                                                                                             @{  
                                                                                                Model.DelegateJustificationRevEst.Insert(Count, "");
                                                                                              }  
                                                                                            @Html.TextBoxFor(model => model.DelegateJustificationRevEst[Count], new { @class = "form-control", @id = @name14, @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.DelegateJustificationRevEst[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <div class="form-group">
                                                                                           @{ 
                                                                                              Model.DelegateJustificationRevEst.Insert(Count, (details != null && details.DelegateJustificationRevEst!=null) ? details.DelegateJustificationRevEst.ToString() : "");
                                                                                             }   
                                                                                            @Html.TextAreaFor(model => model.DelegateJustificationRevEst[Count], new { @class = "form-control", @id = @name14})
                                                                                            @Html.ValidationMessageFor(model => model.DelegateJustificationRevEst[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                            
                                                                                    }
                                                        </td>
                                                        @if (((User.IsInRole("Admin") && (AdminEditStatus||!AdminEditStatus))||(!User.IsInRole("Admin")&& !FinalAdminEditStatus && FinalAdminEditCount>0 )) && @Subs.RequireInput)
                                                        {
                                                            var LedgerSumACAndBWPropRECurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRECurrFin).Sum();
                                                            <td style= "background-color: aliceblue;">
                                                              <div class="form-group">
                                                               @{
                                                                 Model.ACAndBWPropRECurrFin.Insert(Count, LedgerSumACAndBWPropRECurrFin!=null ? Convert.ToDecimal(LedgerSumACAndBWPropRECurrFin) : Convert.ToDecimal(0.00));
                                                                }
                                                                 @Html.TextBoxFor(model => model.ACAndBWPropRECurrFin[Count],new { @class = "form-control", @id = @name6, @dir = "rtl", @readonly = "readonly"})
                                                                 @Html.ValidationMessageFor(model => model.ACAndBWPropRECurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                              </div>
                                                            </td>
                                                        }
                                                        else if (User.IsInRole("Admin") && !@Subs.RequireInput && AdminEditStatus && (!IsAdminSaved || (Model.EditEnabled == @Subs.SubGroupNo)))
                                                        {
                                                            <td style= "background-color: aliceblue;">
                                                                <div class="form-group">
                                                               @{ 
                                                                Model.ACAndBWPropRECurrFin.Insert(Count, details!=null ? Convert.ToDecimal(details.ACAndBWPropRECurrFin) : Convert.ToDecimal(0.00));
                                                                } 
                                                                @Html.TextBoxFor(model => model.ACAndBWPropRECurrFin[Count],new { @class = "form-control", @id = @name6})
                                                                @Html.ValidationMessageFor(model => model.ACAndBWPropRECurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            </td>
                                                        }
                                                        else if (((User.IsInRole("Admin") && (!AdminEditStatus || IsAdminSaved)) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0) ) && !@Subs.RequireInput)
                                                        {
                                                            <td style= "background-color: aliceblue;">
                                                                <div class="form-group">
                                                                 @{   
                                                                    Model.ACAndBWPropRECurrFin.Insert(Count, details != null ? Convert.ToDecimal(details.ACAndBWPropRECurrFin) : Convert.ToDecimal(0.00));
                                                                  } 
                                                                    @Html.TextBoxFor(model => model.ACAndBWPropRECurrFin[Count], new { @class = "form-control", @id = @name6, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ACAndBWPropRECurrFin[Count],null, new { @class = "text-danger", @style="font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            </td>
                                                        }
                                                       @*else if (User.IsInRole("Admin") && @Subs.RequireInput && !AdminEditStatus)
                                                        {
                                                            var LedgerSumACAndBWPropRECurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRECurrFin).Sum();
                                                            <td>
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ACAndBWPropRECurrFin.Insert(Count, LedgerSumACAndBWPropRECurrFin!=null ? Convert.ToDecimal(LedgerSumACAndBWPropRECurrFin) : Convert.ToDecimal(0.00));
                                                                    }
                                                                Html.TextBox(@name6, @dir = "rtl", details!=null ? details.ACAndBWPropRECurrFin.ToString("F4") : " ", new { @class = "form-control", @id = @name6, @dir = "rtl", @readonly = "readonly"})
                                                                @Html.ValidationMessage(@name6, @dir = "rtl",  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                    @Html.TextBoxFor(model => model.ACAndBWPropRECurrFin[Count], new { @class = "form-control", @id = @name6, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ACAndBWPropRECurrFin[Count],null, new { @class = "text-danger" })
                                                                </div>
                                                            </td>
                                                        }*@
                                                       
                                                        else
                                                        {
                                                           Model.ACAndBWPropRECurrFin.Insert(Count, Convert.ToDecimal(0.00));                                                    
                                                            
                                                        }
                                                        
                                                        @if (User.IsInRole("Admin") && @Subs.RequireInput && AdminEditStatus && !IsAdminSaved)
                                                        {
                                                         var PastYearSumBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();                                                                                                                           
                                                         <td style= "background-color: aliceblue;">
                                                              <div class="form-group">
                                                              @{
                                                                        Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(Count, PastYearSumBudEstCurrFin != Convert.ToDecimal(0.0000) ? Convert.ToString(((Convert.ToDecimal(PastYearSumBudEstCurrFin) - Convert.ToDecimal(PastYearSumBudEstCurrFin)) / Convert.ToDecimal(PastYearSumBudEstCurrFin)) * 100) : (0).ToString("F2"));
                                                               }
                                                                @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name17, @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                         </td>
                                                         
                                                        }
                                                        else if((User.IsInRole("Admin") && @Subs.RequireInput && IsAdminSaved))
                                                        {
                                                            var LedgerSumACAndBWPropRECurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRECurrFin).Sum();
                                                            var LedgerSumBudEstCurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstCurrFin).Sum();
                                                            <td style= "background-color: aliceblue;">
                                                                <div class="form-group">
                                                                @{
                                                                    Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(Count, LedgerSumBudEstCurrFin!=Convert.ToDecimal(0.0000) ? Convert.ToString(((Convert.ToDecimal(LedgerSumACAndBWPropRECurrFin)- Convert.ToDecimal(LedgerSumBudEstCurrFin))/Convert.ToDecimal(LedgerSumBudEstCurrFin))*100): (0).ToString("F2"));
                                                                 }
                                                                    @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name17,  @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            </td>
                                                        }                                                     
                                                        
                                                        else if (User.IsInRole("Admin") && IsAdminSaved)
                                                        {
                                                          <td style= "background-color: aliceblue;">
                                                            <div class="form-group">
                                                               @{ 
                                                                  Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(Count, (details!=null && details.BudEstCurrFin!=Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(details.ACAndBWPropRECurrFin)- Convert.ToDecimal(details.BudEstCurrFin))/Convert.ToDecimal(details.BudEstCurrFin))*100)  : (0).ToString("F2"));
                                                                } 
                                                                @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name17, @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                          </td>
                                                        }
                                                       else if (User.IsInRole("Admin") && !IsAdminSaved)
                                                        {
                                                            <td style= "background-color: aliceblue;">
                                                                <div class="form-group">
                                                                 @{
                                                                    Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(Count, (PrevYearApp!=null && PrevYearApp.BudEstNextFin!=Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(PrevYearApp.BudEstNextFin)- Convert.ToDecimal(PrevYearApp.BudEstNextFin))/Convert.ToDecimal(PrevYearApp.BudEstNextFin))*100)   : (0).ToString("F2"));
                                                                  }
                                                                     @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name17,  @readonly = "readonly"})
                                                                     @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                             </td>
                                                            }
                                                            else
                                                            {
                                                                Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(Count, (0).ToString("F2"));
                                                            }
                                                       
                                                        @if (User.IsInRole("Admin") && AdminEditStatus && !@Subs.RequireInput && (!IsAdminSaved || (Model.EditEnabled == @Subs.SubGroupNo)))
                                                        {
                                                                                        <td style= "background-color: aliceblue;">
                                                                                            <div class="form-group"> 
                                                                                                @{
                                                                                                  Model.ACBWJustificationRevEst.Insert(Count, details!=null && details.ACBWJustificationRevEst!=null && details.ACBWJustificationRevEst!=" " ? details.ACBWJustificationRevEst.ToString()  : " ");
                                                                                               }
                                                                                                
                                                                                                @Html.TextBoxFor(model => model.ACBWJustificationRevEst[Count], new { @class = "form-control", @id = @name15})
                                                                                                @Html.ValidationMessageFor(model => model.ACBWJustificationRevEst[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                        </td>
                                                        }
                                                       else if ((User.IsInRole("Admin") && (!AdminEditStatus ||IsAdminSaved) ) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                       {
                                                                                      <td style= "background-color: aliceblue;">
                                                                                          <div class="form-group">
                                                                                              @{
                                                                                                 Model.ACBWJustificationRevEst.Insert(Count, (details!=null && details.ACBWJustificationRevEst!=" " && details.ACBWJustificationRevEst!=null) ? details.ACBWJustificationRevEst.ToString() : "");
                                                                                               }
                                                                                            
                                                                                            @Html.TextBoxFor(model => model.ACBWJustificationRevEst[Count], new { @class = "form-control", @id = @name15, @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.ACBWJustificationRevEst[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                          </div>
                                                                                        </td>
                                                        }
                                                        else if(User.IsInRole("Admin") && (DelegateEditStatus || @Subs.RequireInput) )
                                                                                    {
                                                                                        <td style= "background-color: aliceblue;">
                                                                                        <div class="form-group">
                                                                                             @{  
                                                                                                Model.ACBWJustificationRevEst.Insert(Count, "");
                                                                                              }  
                                                                                            @Html.TextBoxFor(model => model.ACBWJustificationRevEst[Count], new { @class = "form-control", @id = @name14, @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.ACBWJustificationRevEst[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                        </td>
                                                                                    }
                                                        else
                                                        {
                                                             Model.ACBWJustificationRevEst.Insert(Count, " ");
                                                        }
                                                        <td style= "background-color:whitesmoke;">
                                                        @if (@Subs.RequireInput && DelegateEditStatus && !IsDelegateSaved)
                                                        {
                                                                var PastYearBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin ).Sum();
                                                            <div class="form-group">
                                                                @{
                                                                    Model.BudgEstNexFin.Insert(Count, PastYearBudEstCurrFin != null ? Convert.ToDecimal(PastYearBudEstCurrFin) : Convert.ToDecimal(0.00));
                                                                 }
                                                                
                                                                @Html.TextBoxFor(model => model.BudgEstNexFin[Count],new { @class = "form-control", @id = @name7, @dir = "rtl", @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.BudgEstNexFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        else if ((@Subs.RequireInput && !DelegateEditStatus) || (@Subs.RequireInput && !User.IsInRole("Admin") && IsDelegateSaved && Model.EditEnabled!=@Subs.SubGroupNo))
                                                        {
                                                                var ThisYearBudEstNextFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudgEstNexFin).Sum();
                                                            <div class="form-group">
                                                            @{
                                                                 Model.BudgEstNexFin.Insert(Count,ThisYearBudEstNextFin!=null ? Convert.ToDecimal(ThisYearBudEstNextFin) : Convert.ToDecimal(0.00));
                                                             }
                                                                
                                                                @Html.TextBoxFor(model => model.BudgEstNexFin[Count],new { @class = "form-control", @id = @name7, @dir = "rtl", @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.BudgEstNexFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        else if (User.IsInRole("Admin") && DelegateEditStatus)
                                                        {
                                                            <div class="form-group">
                                                               @{
                                                                  Model.BudgEstNexFin.Insert(Count, PrevYearApp != null ? Convert.ToDecimal(PrevYearApp.BudEstNextFin) : Convert.ToDecimal(0.00));
                                                                }
                                                                
                                                                @Html.TextBoxFor(model => model.BudgEstNexFin[Count],new { @class = "form-control", @id = @name7, @dir = "rtl", @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.BudgEstNexFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                           
                                                        }
                                                        else if (!DelegateEditStatus || (!User.IsInRole("Admin") && IsDelegateSaved && Model.EditEnabled!=@Subs.SubGroupNo) )
                                                        {
                                                              <div class="form-group">
                                                               @{
                                                                 Model.BudgEstNexFin.Insert(Count, details!=null ? Convert.ToDecimal(details.BudgEstNexFin) : Convert.ToDecimal(0.00));
                                                               }
                                                               
                                                               @Html.TextBoxFor(model => model.BudgEstNexFin[Count],new { @class = "form-control", @id = @name7, @dir = "rtl", @readonly = "readonly"})
                                                               @Html.ValidationMessageFor(model => model.BudgEstNexFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                              </div>
                                                        }
                                                        else
                                                        {
                                                            <div class="form-group">
                                                                    @if(details!=null && !@details.ProvisionalRevEst.Equals(Convert.ToDecimal(0.00)) && !IsDelegateSaved)
                                                                    {
                                                                       Model.BudgEstNexFin.Insert(Count, details != null ? Convert.ToDecimal(details.ProvisionalRevEst) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    else
                                                                    {
                                                                        Model.BudgEstNexFin.Insert(Count, PrevYearApp != null ? Convert.ToDecimal(PrevYearApp.BudEstNextFin) : Convert.ToDecimal(0.00));
                                                                    }
                                                                
                                                                @Html.TextBoxFor(model => model.BudgEstNexFin[Count],new { @class = "form-control", @dir = "rtl", @id = @name7})
                                                                @Html.ValidationMessageFor(model => model.BudgEstNexFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                           
                                                        }
                                                        </td>
                                                        <td style= "background-color:whitesmoke;">
                                                            @if (@Subs.RequireInput && DelegateEditStatus && !IsDelegateSaved)
                                                            {

                                                                var PastYearSumBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();
                                                                <div class="form-group">
                                                                @{
                                                                    Model.PerVarRevEstOverBudgEstNxtFin.Insert(Count, PastYearSumBudEstCurrFin!=Convert.ToDecimal(0.0000) ? Convert.ToString(((Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F"))- Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F")))/Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F")))*100) : (0).ToString("F2"));
                                                                 }
                                                                   
                                                                    @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name8, @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            }
                                                            else if ((@Subs.RequireInput && !DelegateEditStatus)||(@Subs.RequireInput && !User.IsInRole("Admin") && IsDelegateSaved))
                                                            {
                                                                var LedgerSumRevEstCurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.RevEstCurrFin).Sum();
                                                                var LedgerSumBudEstNextFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudgEstNexFin).Sum();
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.PerVarRevEstOverBudgEstNxtFin.Insert(Count, LedgerSumBudEstNextFin!=Convert.ToDecimal(0.0000) ? Convert.ToString(((Convert.ToDecimal(LedgerSumBudEstNextFin.ToString("F"))- Convert.ToDecimal(LedgerSumRevEstCurrFin.ToString("F")))/Convert.ToDecimal(LedgerSumRevEstCurrFin.ToString("F")))*100) : (0).ToString("F2"));
                                                                    }
                                                                    
                                                                    @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name8, @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            }

                                                            else if (User.IsInRole("Admin") || !DelegateEditStatus || (!User.IsInRole("Admin") && IsDelegateSaved))
                                                            {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.PerVarRevEstOverBudgEstNxtFin.Insert(Count, (details!=null && details.RevEstCurrFin!=Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(details.BudgEstNexFin.ToString("F"))- Convert.ToDecimal(details.RevEstCurrFin.ToString("F")))/Convert.ToDecimal(details.RevEstCurrFin.ToString("F")))*100) : (0).ToString("F2"));
                                                                    }
                                                                    
                                                                    @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name8, @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                               <div class="form-group">
                                                                    @{ 
                                                                        Model.PerVarRevEstOverBudgEstNxtFin.Insert(Count, (PrevYearApp!=null && PrevYearApp.BudEstNextFin!=Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F"))- Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F")))/Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F")))*100) : (0).ToString("F2"));
                                                                   }
                                                                    
                                                                    @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name8, @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            }
                                                        </td>
                                                        <td style= "background-color:whitesmoke;">
                                                            @if ((!DelegateEditStatus && !@Subs.RequireInput) || (!User.IsInRole("Admin") && IsDelegateSaved && Model.EditEnabled!=@Subs.SubGroupNo))
                                                        {
                                                            <div class="form-group">
                                                                @{
                                                                    Model.Justification.Insert(Count, (details != null && details.Justification!=null) ? details.Justification.ToString(): "");
                                                                 }
                                                                
                                                                @Html.TextBoxFor(model => model.Justification[Count] , new { @class = "form-control", @id = @name10, @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.Justification[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        else if((User.IsInRole("Admin") && DelegateEditStatus) || @Subs.RequireInput)
                                                        {
                                                             <div class="form-group">
                                                                @{
                                                                    Model.Justification.Insert(Count, "");
                                                                 }
                                                                
                                                                @Html.TextBoxFor(model => model.Justification[Count] , new { @class = "form-control", @id = @name10,@readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.Justification[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>   
                                                        }
                                                        else
                                                        {                                                                                                             
                                                            <div class="form-group">
                                                                @{
                                                                     Model.Justification.Insert(Count, (details != null && details.Justification!=null) ? details.Justification.ToString(): "");
                                                                 }
                                                                 @*Html.TextArea(@name10, @dir = "rtl", details!=null ? details.Justification.ToString() : " ", new { @class = "form-control", @id = @name10})
                                                                 @Html.ValidationMessage(@name10, @dir = "rtl",  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                 @Html.TextAreaFor(model => model.Justification[Count] , new { @class = "form-control", @id = @name10 })
                                                                 @Html.ValidationMessageFor(model => model.Justification[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>
                                                        }
                                                        </td>
                                                        @if (((User.IsInRole("Admin") && (AdminEditStatus || !AdminEditStatus)) ||(!User.IsInRole("Admin")&& !FinalAdminEditStatus && FinalAdminEditCount>0)) && @Subs.RequireInput )
                                                        {
                                                            var LedgerSumACAndBWPropRENxtFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRENxtFin).Sum();
                                                            <td style= "background-color:whitesmoke;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ACAndBWPropRENxtFin.Insert(Count, LedgerSumACAndBWPropRENxtFin!=null ? Convert.ToDecimal(LedgerSumACAndBWPropRENxtFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    
                                                                    @Html.TextBoxFor(model => model.ACAndBWPropRENxtFin[Count],new { @class = "form-control", @id = @name9, @dir = "rtl", @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.ACAndBWPropRENxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            </td>
                                                        }
                                                        else if (User.IsInRole("Admin") && !@Subs.RequireInput && AdminEditStatus && (!IsAdminSaved || (Model.EditEnabled == @Subs.SubGroupNo))) 
                                                        {
                                                            <td style= "background-color:whitesmoke;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ACAndBWPropRENxtFin.Insert(Count, details != null ? Convert.ToDecimal(details.ACAndBWPropRENxtFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    
                                                                    @Html.TextBoxFor(model => model.ACAndBWPropRENxtFin[Count], new {@class = "form-control", @id = @name9})
                                                                    @Html.ValidationMessageFor(model => model.ACAndBWPropRENxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            </td>
                                                        }
                                                        else if (((User.IsInRole("Admin") && (!AdminEditStatus || IsAdminSaved)) || (!User.IsInRole("Admin")&& !FinalAdminEditStatus && FinalAdminEditCount>0)) && !@Subs.RequireInput ) 
                                                        {
                                                            <td style= "background-color:whitesmoke;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ACAndBWPropRENxtFin.Insert(Count, details != null ? Convert.ToDecimal(details.ACAndBWPropRENxtFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    
                                                                    @Html.TextBoxFor(model => model.ACAndBWPropRENxtFin[Count], new {@class = "form-control", @id = @name9, @dir = "rtl", @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.ACAndBWPropRENxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                
                                                            </td>
                                                        }
                                                        @*else if (User.IsInRole("Admin") && @Subs.RequireInput && !AdminEditStatus)
                                                        {
                                                            var LedgerSumACAndBWPropRENxtFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRENxtFin).Sum();
                                                            <td>
                                                                <div class="form-group">
                                                               @{
                                                                  Model.ACAndBWPropRENxtFin.Insert(Count, LedgerSumACAndBWPropRENxtFin!=null ? Convert.ToDecimal(LedgerSumACAndBWPropRENxtFin.ToString("F4"))  : Convert.ToDecimal(0.00));
                                                                }
                                                              @Html.TextBox(@name9, @dir = "rtl", details!=null ? details.ACAndBWPropRENxtFin.ToString("F4") : " ", new { @class = "form-control", @id = @name9, @dir = "rtl", @readonly = "readonly"})
                                                                    @Html.ValidationMessage(@name9, @dir = "rtl",  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) 
                                                                    @Html.TextBoxFor(model => model.ACAndBWPropRENxtFin[Count],   new { @class = "form-control", @id = @name9, @dir = "rtl", @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.ACAndBWPropRENxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                            </td>
                                                        }*@
                                                        else
                                                        {
                                                           Model.ACAndBWPropRENxtFin.Insert(Count, Convert.ToDecimal(0.00));                                                   
                                                        }
                                                        
                                                            @if (User.IsInRole("Admin") && @Subs.RequireInput && AdminEditStatus && !IsAdminSaved)
                                                            {
                                                                var PastYearSumBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();
                                                                <td style= "background-color:whitesmoke;">
                                                                <div class="form-group">
                                                                @{
                                                                    Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(Count, PastYearSumBudEstCurrFin!=Convert.ToDecimal(0.0000) ? Convert.ToString(((Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F4"))- Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F4")))/Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F4")))*100) : (0).ToString("F2"));
                                                                 }
                                                                    
                                                                    @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name18,  @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                </td>
                                                            }
                                                            else if (User.IsInRole("Admin") && @Subs.RequireInput && IsAdminSaved)
                                                            {
                                                                var LedgerSumACAndBWPropRECurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRECurrFin).Sum();
                                                                var LedgerSumACAndBWPropRENxtFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRENxtFin).Sum();
                                                              <td style= "background-color:whitesmoke;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(Count, LedgerSumACAndBWPropRENxtFin!=Convert.ToDecimal(0.0000) ? Convert.ToString(((Convert.ToDecimal(LedgerSumACAndBWPropRENxtFin.ToString("F4"))- Convert.ToDecimal(LedgerSumACAndBWPropRECurrFin.ToString("F4")))/Convert.ToDecimal(LedgerSumACAndBWPropRECurrFin.ToString("F4")))*100) : (0).ToString("F2"));
                                                                    }
                                                                    
                                                                    @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name18,  @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                             </td>
                                                            }

                                                            else if (User.IsInRole("Admin") && IsAdminSaved)
                                                            {
                                                                <td style= "background-color:whitesmoke;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(Count, (details!=null && details.ACAndBWPropRECurrFin!=Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(details.ACAndBWPropRENxtFin.ToString("F4"))- Convert.ToDecimal(details.ACAndBWPropRECurrFin.ToString("F4")))/Convert.ToDecimal(details.ACAndBWPropRECurrFin.ToString("F4")))*100) : (0).ToString("F2"));
                                                                    }
                                                                   
                                                                    @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name18,  @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                </td>
                                                            }
                                                           else if (User.IsInRole("Admin") && !IsAdminSaved)
                                                            {
                                                                <td style= "background-color:whitesmoke;">
                                                                <div class="form-group"> 
                                                                    @{
                                                                        Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(Count, (PrevYearApp!=null && PrevYearApp.BudEstNextFin!=Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F4"))- Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F4")))/Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F4")))*100) : (0).ToString("F2"));
                                                                    }
                                                                    
                                                                    @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count],"{0:#.##}%",new { @class = "form-control", @id = @name18, @readonly = "readonly"})
                                                                    @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                </div>
                                                                </td>
                                                            }
                                                        else
                                                        {
                                                            Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(Count, (0).ToString("F2"));
                                                        }
                                                        @if (User.IsInRole("Admin") && AdminEditStatus && !@Subs.RequireInput && (!IsAdminSaved || (Model.EditEnabled == @Subs.SubGroupNo)))
                                                                                    {
                                                                                        <td style= "background-color:whitesmoke;">
                                                                                            <div class="form-group"> 
                                                                                                @{
                                                                                                  Model.ACBWJustificationBudgEstNxtFin.Insert(Count, details!=null && details.ACBWJustificationBudgEstNxtFin!=null && details.ACBWJustificationBudgEstNxtFin!=" " ? details.ACBWJustificationBudgEstNxtFin.ToString()  : " ");
                                                                                               }
                                                                                                
                                                                                                @Html.TextBoxFor(model => model.ACBWJustificationBudgEstNxtFin[Count], new { @class = "form-control", @id = @name16})
                                                                                                @Html.ValidationMessageFor(model => model.ACBWJustificationBudgEstNxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                        </td>
                                                                                    }
                                                                                    else if ((User.IsInRole("Admin") && (!AdminEditStatus || IsAdminSaved ) && !@Subs.RequireInput) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                                                    {
                                                                                      <td style= "background-color:whitesmoke;">
                                                                                          <div class="form-group">
                                                                                              @{
                                                                                                 Model.ACBWJustificationBudgEstNxtFin.Insert(Count, details!=null && details.ACBWJustificationBudgEstNxtFin!=null && details.ACBWJustificationBudgEstNxtFin!=" "? details.ACBWJustificationBudgEstNxtFin.ToString() : "");
                                                                                               }
                                                                                            
                                                                                            @Html.TextBoxFor(model => model.ACBWJustificationBudgEstNxtFin[Count], new { @class = "form-control", @id = @name16, @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.ACBWJustificationBudgEstNxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                          </div>
                                                                                        </td>
                                                                                    }
                                                        else if(User.IsInRole("Admin") && (DelegateEditStatus || @Subs.RequireInput))
                                                        {
                                                            <td style= "background-color:whitesmoke;">
                                                             <div class="form-group">
                                                                @{
                                                                    Model.ACBWJustificationBudgEstNxtFin.Insert(Count, "");
                                                                 }
                                                                
                                                                @Html.TextBoxFor(model => model.ACBWJustificationBudgEstNxtFin[Count] , new { @class = "form-control", @id = @name16, @readonly = "readonly"})
                                                                @Html.ValidationMessageFor(model => model.ACBWJustificationBudgEstNxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                            </div>   
                                                            </td>
                                                        }
                                                                                    else
                                                                                    {
                                                                                        Model.ACBWJustificationBudgEstNxtFin.Insert(Count, " ");
                                                                                    }
                                                        <td  style="background-color:honeydew;"> 
                                                                                    
                                                            @if(!@Subs.RequireInput) 
                                                            {
                                                              <table class="table">
                                                              <thead> </thead>
                                                              <tbody>
                                                              @if (!User.IsInRole("Admin") && GroupsStatusRowCount == 0 && Model.IsEnabled.Equals(true) && (!IsDelegateSaved || Model.EditEnabled ==@Subs.SubGroupNo))
                                                              {
                                                                   <tr><td  style="border:none"> @Html.TextBoxFor(m => m.File, new { type = "file", @id = @name11})</td></tr>
                                                                   <tr><td  style="border:none"> @Html.ValidationMessage("Caution"+Count,"* only .pdf files with size 1 MB are allowed",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})</td></tr>
                                                                   <tr><td  style="border:none"> @Html.ValidationMessage("FileMessage_"+Count,null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})</td></tr>
                                                                   <br/>
                                                                   <tr><td style="border:none"><input id="@upload" class="Submit" formaction="~/Tabs/Upload" type="submit" value="Upload" /></td></tr>
                                                              }
                                                             
                                                                                    @foreach(var Files in Model.Filess.Where(a => a.SubGroupNumber.Equals(@Subs.SubGroupNo)))
                                                                                    {
                                                                                        var FinalSubmitStatus = (from a in Model.Statuss where (a.SectionNumber == 0 && a.GroupNumber.Equals("0")) select a.AdminEditStatus).Count();
                                                                                     <tr>
                                                                                      @if((User.IsInRole("Admin") && AdminEditStatus) || !User.IsInRole("Admin") || (User.IsInRole("Admin") && FinalSubmitStatus > 0))
                                                                                      {
                                                                                       <td style="border:none">@Html.ActionLink(@Files.FileName,null,null,null,new{href =@Files.SupportingDocumentPath, target = "_blank"} )</td>
                                                                                       /*<td><input id="@view" class="ViewFile  btn-link" style="border:none; outline:none;  background-color: transparent;" formaction="~/Tabs/ViewFile" type="submit" value= "@Files.FileName" /></td>*/
                                                                                      }
                                                                                        @if (!User.IsInRole("Admin") && GroupsStatusRowCount == 0 && !IsDelegateSaved)
                                                                                        {
                                                                                           <td style="border:none"><input id="@delete" class="Submit  btn-link" style="border:none; outline:none;  background-color: transparent;" formaction="~/Tabs/Delete" type="submit" value="Delete"/></td>
                                                                                        }
                                                                                     </tr>      
                                                                                         
                                                                                    }
                                                         </tbody>
                                                             </table>
                                                         }
                                                        </td>
                                                        <td style="background-color:honeydew;">
                                                        @if((!User.IsInRole("Admin") && !@Subs.RequireInput && DelegateEditStatus && (!IsDelegateSaved || Model.EditEnabled==@Subs.SubGroupNo))||(User.IsInRole("Admin") && !@Subs.RequireInput && AdminEditStatus && (!IsAdminSaved|| (Model.EditEnabled == @Subs.SubGroupNo)) ))
                                                        {
                                                                                   <button style="border:none;background-color:white" id="@save" class="Submit" formaction="~/Tabs/Save" type="submit" value="Save Budget" style="align-self:center">
                                                                                   <i class='bx bx-check' style="color:limegreen"></i></button>
                                                          }
                                                          @if((!User.IsInRole("Admin") && IsDelegateSaved && !@Subs.RequireInput && DelegateEditStatus && (Model.EditEnabled != @Subs.SubGroupNo) )||(User.IsInRole("Admin") && IsAdminSaved && !@Subs.RequireInput && AdminEditStatus && (Model.EditEnabled != @Subs.SubGroupNo)))
                                                          {
                                                                                   <button style="border:none;background-color:white" id="@edit" class="Submit" formaction="~/Tabs/Edit" type="submit" value="Edit Budget" style="align-self:center">
                                                                                   <i class='bx bxs-pencil' style="color:blue"></i></button>
                                                           }
                                                           @if((!User.IsInRole("Admin") && !@Subs.RequireInput && DelegateEditStatus && (IsDelegateSaved  || (Model.EditEnabled == @Subs.SubGroupNo)))||(User.IsInRole("Admin") && !@Subs.RequireInput && AdminEditStatus && (IsAdminSaved|| (Model.EditEnabled == @Subs.SubGroupNo)) ))
                                                           {
                                                                                    <button style="border:none;background-color:white" id="@Budgetdelete" class="Submit" formaction="~/Tabs/BudgetDelete" type="submit" value="Delete Budget" style="align-self:center">
                                                                                    <i class='bx bx-x' style="color:red"></i>     
                                                                                    </button>
                                                           }
                                                           </td>
                                                    </tr>
                                                    
                                                            @if(LedgerCount > 0)
                                                            {
                                                                 LedgerNo = ++Count;
                                                                       @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                                                                       {

                                                                         var Ledgerdetails = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a).FirstOrDefault();
                                                                         var LedPrevYearApp = (from a in Model.Approved where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a).FirstOrDefault(); 
                                                                         
                                                                         Boolean LedgerIsDelegateSaved = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo)&& a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.HasDelegateSaved).FirstOrDefault();
                                                                         Boolean LedgerIsAdminSaved = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo)&& a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.HasAdminSaved).FirstOrDefault();

                                                                         <tr>
                                                                                <!--td></td -->
                                                                                <td style= "background-color:honeydew;"></td>
                                                                                <td style= "background-color:honeydew;">
                                                                                    @{
                                                                                        Model.SubGroupNameOrLedgerName.Insert(LedgerNo, Ledgers.LedgerNo);
                                                                                     }

                                                                                     @Html.DisplayFor(model => model.SubGroupNameOrLedgerName[LedgerNo])


                                                                                    @Html.HiddenFor(model => model.SubGroupNameOrLedgerName[LedgerNo])
                                                                                 </td>
                                                                                <td style= "background-color:honeydew;">@Ledgers.LedgerName</td>
                                                                                <td style= "background-color: floralwhite;">
                                                                                   
                                                                                    @if ((!DelegateEditStatus && IsSubmittedToACBW) || (!User.IsInRole("Admin") && LedgerIsDelegateSaved))
                                                                                    {
                                                                                       <div class="form-group"> 
                                                                                         
                                                                                         @{
                                                                                          Model.BudEstCurrFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.BudEstCurrFin.ToString("F4")): Convert.ToDecimal(0.00));
                                                                                          }     
                                                                                          @Html.TextBoxFor(model => model.BudEstCurrFin[LedgerNo], new { @class = "form-control", id = @name1 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly"})
                                                                                          @Html.ValidationMessageFor(model => model.BudEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div> 
                                                                                            
                                                                                    }
                                                                                        else
                                                                                        {
                                                                                            <div class="form-group">
                                                                                                @{
                                                                                                  Model.BudEstCurrFin.Insert(LedgerNo, LedPrevYearApp != null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                                }
                                                                                                @Html.TextBoxFor(model => model.BudEstCurrFin[LedgerNo], new { @class = "form-control", @id = @name1 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                                                @Html.ValidationMessageFor(model => model.BudEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                        }
                                                                                </td>
                                                                                <td style= "background-color: floralwhite;">
                                                                                        <div class="form-group">
                                                                                        @{
                                                                                            Model.InterimRevEst.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.InterimRevEst.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                        }
                                                                                            @Html.TextBoxFor(model => model.InterimRevEst[LedgerNo], new { @class = "form-control", @id = @name12+@Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.InterimRevEst[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                </td>
                                                                                <td style= "background-color: floralwhite;">
                                                                                        <div class="form-group">
                                                                                        @{
                                                                                            Model.ProvisionalRevEst.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.ProvisionalRevEst.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                        }
                                                                                            @Html.TextBoxFor(model => model.ProvisionalRevEst[LedgerNo], new { @class = "form-control", @id = @name13+@Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.ProvisionalRevEst[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                </td>
                                                                                <td style= "background-color: aliceblue;">
                                                                                    @if ((!DelegateEditStatus ) || (!User.IsInRole("Admin") && LedgerIsDelegateSaved && Model.EditEnabled!=@Ledgers.LedgerNo))
                                                                                    {
                                                                                        <div class="form-group"> 
                                                                                          @{
                                                                                            Model.ActPrevFin.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.ActPrevFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                           } 
                                                                                            @Html.TextBoxFor(model => model.ActPrevFin[LedgerNo], new { @class = "form-control", @id = @name2 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                                            @Html.ValidationMessageFor(model => model.ActPrevFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>  
                                                                                    }
                                                                                    else if(DelegateEditStatus && User.IsInRole("Admin"))
                                                                                    {
                                                                                        <div class="form-group"> 
                                                                                          @{
                                                                                            Model.ActPrevFin.Insert(LedgerNo, Convert.ToDecimal(0.00));
                                                                                           } 
                                                                                            @Html.TextBoxFor(model => model.ActPrevFin[LedgerNo], new { @class = "form-control", @id = @name2 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                                            @Html.ValidationMessageFor(model => model.ActPrevFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>  
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                       <div class="form-group">
                                                                                           @{
                                                                                              Model.ActPrevFin.Insert(LedgerNo,Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ActPrevFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                            }
                                                                                                @Html.TextBoxFor(model => model.ActPrevFin[LedgerNo], new { @class = "form-control", @id = @name2 + @Ledgers.LedgerNo, @dir = "rtl"})
                                                                                                @Html.ValidationMessageFor(model => model.ActPrevFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                      </div>  
                                                                                       
                                                                                    }
                                                                                </td>
                                                                                <td style= "background-color: aliceblue;">
                                                                                    @if ((!DelegateEditStatus)|| (!User.IsInRole("Admin") && LedgerIsDelegateSaved && Model.EditEnabled!=@Ledgers.LedgerNo))
                                                                                    {
                                                                                       <div class="form-group">
                                                                                           @{
                                                                                               Model.ActCurrFinTillsecondQuart.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ActCurrFinTill2ndQuart.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                            }
                                                                                               @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[LedgerNo], new { @class = "form-control", @id = @name3 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                                               @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                      </div>  
                                                                                    }
                                                                                    else if(DelegateEditStatus && User.IsInRole("Admin"))
                                                                                    {
                                                                                        <div class="form-group">
                                                                                           @{
                                                                                               Model.ActCurrFinTillsecondQuart.Insert(LedgerNo, Convert.ToDecimal(0.00));
                                                                                            }
                                                                                               @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[LedgerNo], new { @class = "form-control", @id = @name3 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                                               @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                      </div>  
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                       <div class="form-group">
                                                                                           @{
                                                                                            Model.ActCurrFinTillsecondQuart.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ActCurrFinTill2ndQuart.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                            }
                                                                                            @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[LedgerNo], new { @class = "form-control", @id = @name3+@Ledgers.LedgerNo, @dir = "rtl"})
                                                                                            @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                       </div> 
                                                                                    }
                                                                                </td>
                                                                                <td style= "background-color: aliceblue;">
                                                                                     @if(User.IsInRole("Admin") && DelegateEditStatus)
                                                                                    {
                                                                                        <div class="form-group">
                                                                                            @{
                                                                                            Model.RevEstCurrFin.Insert(LedgerNo, LedPrevYearApp != null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                            }   
                                                                                            @Html.TextBoxFor(model => model.RevEstCurrFin[LedgerNo], new { @type = "number", @class = "form-control", @id = @name4+@Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly"}) 
                                                                                            @Html.ValidationMessageFor(model => model.RevEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    }
                                                                                    else if (!DelegateEditStatus || (!User.IsInRole("Admin") && LedgerIsDelegateSaved && Model.EditEnabled!=@Ledgers.LedgerNo))
                                                                                    {
                                                                                        <div class="form-group">
                                                                                            @{
                                                                                            Model.RevEstCurrFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.RevEstCurrFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                           }
                                                                                            @Html.TextBoxFor(model => model.RevEstCurrFin[LedgerNo],new { @class = "form-control", @id = @name4+@Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.RevEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    } 
                                                                                    
                                                                                    else
                                                                                    {
                                                                                       <div class="form-group">
                                                                                           @if(Ledgerdetails!=null && !@Ledgerdetails.ProvisionalRevEst.Equals(Convert.ToDecimal(0.00)) && !LedgerIsDelegateSaved)
                                                                                           {
                                                                                               Model.RevEstCurrFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ProvisionalRevEst.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                           }
                                                                                           else
                                                                                           {
                                                                                               Model.RevEstCurrFin.Insert(LedgerNo, LedPrevYearApp != null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                           }
                                                                                            @Html.TextBoxFor(model => model.RevEstCurrFin[LedgerNo], new { @class = "form-control", @id = @name4+@Ledgers.LedgerNo, @dir = "rtl"}) 
                                                                                            @Html.ValidationMessageFor(model => model.RevEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                       </div>
                                                                                    }
                                                                                </td>
                                                                                    <td style= "background-color: aliceblue;">
                                                                                        @if (!DelegateEditStatus || (!User.IsInRole("Admin") && LedgerIsDelegateSaved))
                                                                                        {
                                                                                          <div class="form-group"> 
                                                                                              @{
                                                                                                    Model.PerVarRevEstOverBudgEstCurrFin.Insert(LedgerNo, (Ledgerdetails != null && Ledgerdetails.BudEstCurrFin != Convert.ToDecimal(0.0000)) ? (Convert.ToString(((Convert.ToDecimal(Convert.ToDecimal(Ledgerdetails.RevEstCurrFin.ToString("F4")) - Convert.ToDecimal(Ledgerdetails.BudEstCurrFin.ToString("F4"))) / Convert.ToDecimal(Ledgerdetails.BudEstCurrFin.ToString("F4")))) * 100)) : (0).ToString("F2"));
                                                                                              }
                                                                                              @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstCurrFin[LedgerNo],"{0:#.##}%", new { @class = "form-control", @id = @name5+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                              @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                          </div>
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                           <div class="form-group"> 
                                                                                               @{
                                                                                                    Model.PerVarRevEstOverBudgEstCurrFin.Insert(LedgerNo, (LedPrevYearApp != null && LedPrevYearApp.BudEstNextFin != Convert.ToDecimal(0.0000)) ? (Convert.ToString(((Convert.ToDecimal(Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4"))- Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4"))) / Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")))) * 100)) : (0).ToString("F2"));
                                                                                               }
                                                                                                @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstCurrFin[LedgerNo], "{0:#.##}%",new { @class = "form-control", @id = @name5+@Ledgers.LedgerNo,   @readonly = "readonly"})
                                                                                                @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                           </div>
                                                                                        }
                                                                                    </td>
                                                                                   
                                                                                    <td style= "background-color: aliceblue;">
                                                                                    @if (!DelegateEditStatus|| (!User.IsInRole("Admin") && LedgerIsDelegateSaved) && Model.EditEnabled!=@Ledgers.LedgerNo)
                                                                                    {
                                                                                            <div class="form-group">
                                                                                             @{  
                                                                                                Model.DelegateJustificationRevEst.Insert(LedgerNo, (Ledgerdetails != null && Ledgerdetails.DelegateJustificationRevEst!=null) ? Ledgerdetails.DelegateJustificationRevEst.ToString(): "");
                                                                                              }  
                                                                                            @Html.TextAreaFor(model => model.DelegateJustificationRevEst[LedgerNo], new { @class = "form-control", @id = @name14+@Ledgers.LedgerNo,@readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.DelegateJustificationRevEst[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                        
                                                                                    }
                                                                                    else if(User.IsInRole("Admin") && DelegateEditStatus)
                                                                                    {
                                                                                        <div class="form-group">
                                                                                             @{  
                                                                                                Model.DelegateJustificationRevEst.Insert(LedgerNo, "");
                                                                                              }  
                                                                                            @Html.TextAreaFor(model => model.DelegateJustificationRevEst[LedgerNo], new { @class = "form-control", @id = @name14+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.DelegateJustificationRevEst[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <div class="form-group">
                                                                                           @{ 
                                                                                              Model.DelegateJustificationRevEst.Insert(LedgerNo, (Ledgerdetails != null && Ledgerdetails.DelegateJustificationRevEst!=null) ? Ledgerdetails.DelegateJustificationRevEst.ToString() : "");
                                                                                             }   
                                                                                            @Html.TextAreaFor(model => model.DelegateJustificationRevEst[LedgerNo], new { @class = "form-control", @id = @name14+@Ledgers.LedgerNo})
                                                                                            @Html.ValidationMessageFor(model => model.DelegateJustificationRevEst[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                            
                                                                                    }
                                                                                </td>
                                                                                    @if (User.IsInRole("Admin") && AdminEditStatus && (!LedgerIsAdminSaved || Model.EditEnabled == @Ledgers.LedgerNo))
                                                                                    {
                                                                                        <td style= "background-color: aliceblue;">
                                                                                            <div class="form-group"> 
                                                                                                @{
                                                                                                  Model.ACAndBWPropRECurrFin.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.ACAndBWPropRECurrFin.ToString("F4"))  : Convert.ToDecimal(0.00));
                                                                                               }
                                                                                                
                                                                                                @Html.TextBoxFor(model => model.ACAndBWPropRECurrFin[LedgerNo], new { @class = "form-control", @id = @name6+@Ledgers.LedgerNo, @dir = "rtl"})
                                                                                                @Html.ValidationMessageFor(model => model.ACAndBWPropRECurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                        </td>
                                                                                    }
                                                                                    else if ((User.IsInRole("Admin") && !AdminEditStatus) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0) || (User.IsInRole("Admin") && LedgerIsAdminSaved))
                                                                                    {
                                                                                      <td style= "background-color: aliceblue;">
                                                                                          <div class="form-group">
                                                                                              @{
                                                                                                 Model.ACAndBWPropRECurrFin.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.ACAndBWPropRECurrFin.ToString("F4"))  : Convert.ToDecimal(0.00));
                                                                                               }
                                                                                            
                                                                                            @Html.TextBoxFor(model => model.ACAndBWPropRECurrFin[LedgerNo], new { @class = "form-control", @id = @name6+@Ledgers.LedgerNo, @dir = "rtl",@readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.ACAndBWPropRECurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                          </div>
                                                                                        </td>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        Model.ACAndBWPropRECurrFin.Insert(LedgerNo, Convert.ToDecimal(0.00));
                                                                                    }
                                                                                    
                                                                                        @if (User.IsInRole("Admin") && LedgerIsAdminSaved)
                                                                                        {
                                                                                            <td style= "background-color: aliceblue;">
                                                                                          <div class="form-group"> 
                                                                                              @{                                                                                                                                          
                                                                                              Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(LedgerNo, (Ledgerdetails!=null && Ledgerdetails.BudEstCurrFin!=Convert.ToDecimal(0.0000)) ? (Convert.ToString(((Convert.ToDecimal(Convert.ToDecimal(Ledgerdetails.ACAndBWPropRECurrFin.ToString("F4")) - Convert.ToDecimal(Ledgerdetails.BudEstCurrFin.ToString("F4"))) / Convert.ToDecimal(Ledgerdetails.BudEstCurrFin.ToString("F4"))))*100)) : (0).ToString("F2"));
                                                                                              }
                                                                                              @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[LedgerNo], "{0:#.##}%",new { @class = "form-control", @id = @name17+@Ledgers.LedgerNo,  @readonly = "readonly"})
                                                                                              @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                          </div>
                                                                                          </td>
                                                                                          
                                                                                          
                                                                                        }
                                                                                        else if(User.IsInRole("Admin") && !LedgerIsAdminSaved)
                                                                                        {
                                                                                            <td style= "background-color: aliceblue;">
                                                                                           <div class="form-group"> 
                                                                                               @{
                                                                                                 Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(LedgerNo, (LedPrevYearApp!=null && LedPrevYearApp.BudEstNextFin!=Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4"))- Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")))/Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")))*100) : (0).ToString("F2"));
                                                                                               }
                                                                                                @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[LedgerNo],"{0:#.##}%",new { @class = "form-control", @id = @name17+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                                @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                           </div>
                                                                                           </td>
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(LedgerNo, (0).ToString("F2"));
                                                                                        }
                                                                                    
                                                                                
                                                                                @if (User.IsInRole("Admin") && AdminEditStatus && (!LedgerIsAdminSaved || (Model.EditEnabled == @Ledgers.LedgerNo)))
                                                                                    {
                                                                                        <td style= "background-color: aliceblue;">
                                                                                            <div class="form-group"> 
                                                                                                @{
                                                                                                  Model.ACBWJustificationRevEst.Insert(LedgerNo, Ledgerdetails!=null && Ledgerdetails.ACBWJustificationRevEst!=null && Ledgerdetails.ACBWJustificationRevEst!=" " ? Ledgerdetails.ACBWJustificationRevEst.ToString()  : " ");
                                                                                               }
                                                                                                
                                                                                                @Html.TextBoxFor(model => model.ACBWJustificationRevEst[LedgerNo], new { @class = "form-control", @id = @name15+@Ledgers.LedgerNo})
                                                                                                @Html.ValidationMessageFor(model => model.ACBWJustificationRevEst[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                        </td>
                                                                                    }
                                                                                    else if ((User.IsInRole("Admin") && (!AdminEditStatus || LedgerIsAdminSaved)) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                                                    {
                                                                                      <td style= "background-color: aliceblue;">
                                                                                          <div class="form-group">
                                                                                              @{
                                                                                                 Model.ACBWJustificationRevEst.Insert(LedgerNo, Ledgerdetails!=null && Ledgerdetails.ACBWJustificationRevEst!=null && Ledgerdetails.ACBWJustificationRevEst!=" "? Ledgerdetails.ACBWJustificationRevEst.ToString() : "");
                                                                                               }
                                                                                            
                                                                                            @Html.TextBoxFor(model => model.ACBWJustificationRevEst[LedgerNo], new { @class = "form-control", @id = @name15+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.ACBWJustificationRevEst[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                          </div>
                                                                                        </td>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        Model.ACBWJustificationRevEst.Insert(LedgerNo, " ");
                                                                                    }
                                                                                <td style= "background-color:whitesmoke;">
                                                                                    @if (User.IsInRole("Admin") && DelegateEditStatus )
                                                                                    {
                                                                                        <div class="form-group">
                                                                                          @{
                                                                                            Model.BudgEstNexFin.Insert(LedgerNo, LedPrevYearApp!=null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                           }  
                                                                                            
                                                                                            @Html.TextBoxFor(model => model.BudgEstNexFin[LedgerNo], new { @class = "form-control", @id = @name7+@Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.BudgEstNexFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                      
                                                                                    }
                                                                                    else if (!DelegateEditStatus || (!User.IsInRole("Admin") && LedgerIsDelegateSaved && Model.EditEnabled!=@Ledgers.LedgerNo) )
                                                                                    {
                                                                                        <div class="form-group">
                                                                                          @{
                                                                                            Model.BudgEstNexFin.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.BudgEstNexFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                          }
                                                                                            
                                                                                            @Html.TextBoxFor(model => model.BudgEstNexFin[LedgerNo], new { @class = "form-control", @id = @name7+@Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.BudgEstNexFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                      
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <div class="form-group">
                                                                                          @if(Ledgerdetails!=null && !@Ledgerdetails.ProvisionalRevEst.Equals(Convert.ToDecimal(0.00)) && !LedgerIsDelegateSaved)
                                                                                          {
                                                                                             Model.BudgEstNexFin.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.ProvisionalRevEst.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                          }
                                                                                          else
                                                                                          {
                                                                                            Model.BudgEstNexFin.Insert(LedgerNo, LedPrevYearApp!=null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                          }
                                                                                            @Html.TextBoxFor(model => model.BudgEstNexFin[LedgerNo], new { @class = "form-control", @id = @name7+@Ledgers.LedgerNo, @dir = "rtl"})
                                                                                            @Html.ValidationMessageFor(model => model.BudgEstNexFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                      
                                                                                    }
                                                                                </td>
                                                                                    <td style= "background-color:whitesmoke;">
                                                                                        @if ((User.IsInRole("Admin") && (!AdminEditStatus || LedgerIsAdminSaved)))
                                                                                        {
                                                                                            <div class="form-group">
                                                                                             
                                                                                             @{
                                                                                                 Model.PerVarRevEstOverBudgEstNxtFin.Insert(LedgerNo, (Ledgerdetails!=null && Ledgerdetails.RevEstCurrFin!=Convert.ToDecimal(0.0000))  ? Convert.ToString(((Convert.ToDecimal(Ledgerdetails.BudgEstNexFin.ToString("F4"))- Convert.ToDecimal(Ledgerdetails.RevEstCurrFin.ToString("F4")))/Convert.ToDecimal(Ledgerdetails.RevEstCurrFin.ToString("F4")))*100) : (0).ToString("F2"));
                                                                                             }  
                                                                                             
                                                                                              @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstNxtFin[LedgerNo], "{0:#.##}%",new { @class = "form-control", @id = @name8+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                              @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstNxtFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                            
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <div class="form-group">
                                                                                            @{
                                                                                              Model.PerVarRevEstOverBudgEstNxtFin.Insert(LedgerNo, (LedPrevYearApp!=null && LedPrevYearApp.BudEstNextFin!=Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4"))- Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")))/Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")))*100) : (0).ToString("F2"));
                                                                                              }   
                                                                                              @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstNxtFin[LedgerNo],"{0:#.##}%",new { @class = "form-control", @id = @name8+@Ledgers.LedgerNo,  @readonly = "readonly"})
                                                                                              @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstNxtFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                            
                                                                                        }
                                                                                    </td>
                                                                                    <td style= "background-color:whitesmoke;">
                                                                                    @if (!DelegateEditStatus || (!User.IsInRole("Admin") && LedgerIsDelegateSaved && Model.EditEnabled!=@Ledgers.LedgerNo))
                                                                                    {
                                                                                            <div class="form-group">
                                                                                             @{  
                                                                                                Model.Justification.Insert(LedgerNo, (Ledgerdetails != null && Ledgerdetails.Justification!=null) ? Ledgerdetails.Justification.ToString(): "");
                                                                                              }  
                                                                                            @Html.TextAreaFor(model => model.Justification[LedgerNo], new { @class = "form-control", @id = @name10+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.Justification[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                        
                                                                                    }
                                                                                    else if(User.IsInRole("Admin") && DelegateEditStatus )
                                                                                    {
                                                                                        <div class="form-group">
                                                                                             @{  
                                                                                                Model.Justification.Insert(LedgerNo, "");
                                                                                              }  
                                                                                            @Html.TextAreaFor(model => model.Justification[LedgerNo], new { @class = "form-control", @id = @name10+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.Justification[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <div class="form-group">
                                                                                           @{ 
                                                                                              Model.Justification.Insert(LedgerNo, (Ledgerdetails != null && Ledgerdetails.Justification!=null) ? Ledgerdetails.Justification.ToString() : "");
                                                                                             }   
                                                                                            @Html.TextAreaFor(model => model.Justification[LedgerNo], new { @class = "form-control", @id = @name10+@Ledgers.LedgerNo})
                                                                                            @Html.ValidationMessageFor(model => model.Justification[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                            
                                                                                    }
                                                                                </td>
                                                                                @if (User.IsInRole("Admin") && AdminEditStatus && (!LedgerIsAdminSaved || (Model.EditEnabled == @Ledgers.LedgerNo)))
                                                                                {
                                                                                    <td style= "background-color:whitesmoke;">
                                                                                        <div class="form-group">
                                                                                          @{
                                                                                              Model.ACAndBWPropRENxtFin.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.ACAndBWPropRENxtFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                            }
                                                                                            @Html.TextBoxFor(model => model.ACAndBWPropRENxtFin[LedgerNo], new { @class = "form-control", @id = @name9+@Ledgers.LedgerNo, @dir = "rtl"})
                                                                                            @Html.ValidationMessageFor(model => model.ACAndBWPropRENxtFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                        
                                                                                    </td>
                                                                                }
                                                                                else if ((User.IsInRole("Admin") && (!AdminEditStatus || LedgerIsAdminSaved)) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                                                {
                                                                                    <td style= "background-color:whitesmoke;">
                                                                                        <div class="form-group">
                                                                                           @{
                                                                                              Model.ACAndBWPropRENxtFin.Insert(LedgerNo, Ledgerdetails!=null ? Convert.ToDecimal(Ledgerdetails.ACAndBWPropRENxtFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                                             }   
                                                                                              @Html.TextBoxFor(model => model.ACAndBWPropRENxtFin[LedgerNo], new { @class = "form-control", @id = @name9+@Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly"})
                                                                                              @Html.ValidationMessageFor(model => model.ACAndBWPropRENxtFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                        </div>
                                                                                        
                                                                                    </td>
                                                                                }
                                                                                else
                                                                                    {
                                                                                        Model.ACAndBWPropRENxtFin.Insert(LedgerNo, Convert.ToDecimal(0.00));
                                                                                    }
                                                                                
                                                                                        @if ((User.IsInRole("Admin") && LedgerIsAdminSaved) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                                                        {
                                                                                          <td style= "background-color:whitesmoke;">
                                                                                            <div class="form-group">
                                                                                             
                                                                                             @{
                                                                                                 Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(LedgerNo, (Ledgerdetails!=null && Ledgerdetails.ACAndBWPropRECurrFin!=Convert.ToDecimal(0.0000))  ? Convert.ToString(((Convert.ToDecimal(Ledgerdetails.ACAndBWPropRENxtFin.ToString("F4"))- Convert.ToDecimal(Ledgerdetails.ACAndBWPropRECurrFin.ToString("F4")))/Convert.ToDecimal(Ledgerdetails.ACAndBWPropRECurrFin.ToString("F4")))*100) : (0).ToString("F2"));
                                                                                             }  
                                                                                             
                                                                                              @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[LedgerNo], "{0:#.##}%",new { @class = "form-control", @id = @name18+@Ledgers.LedgerNo, @readonly = "readonly"})
                                                                                              @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                          </td>
                                                                                            
                                                                                        }
                                                                                        else if (User.IsInRole("Admin") && !LedgerIsAdminSaved)
                                                                                        {
                                                                                          <td style= "background-color:whitesmoke;">
                                                                                            <div class="form-group">
                                                                                            @{
                                                                                              Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(LedgerNo, (LedPrevYearApp!=null && LedPrevYearApp.BudEstNextFin!=Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4"))- Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")))/Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")))*100) : (0).ToString("F2"));
                                                                                              }   
                                                                                              @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[LedgerNo],"{0:#.##}%",new { @class = "form-control", @id = @name18+@Ledgers.LedgerNo,  @readonly = "readonly"})
                                                                                              @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                           </td>
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(LedgerNo,(0).ToString("F2"));
                                                                                        }
                                                                                    
                                                                                @if (User.IsInRole("Admin") && AdminEditStatus && (!LedgerIsAdminSaved || (Model.EditEnabled == @Ledgers.LedgerNo)))
                                                                                    {
                                                                                        <td style= "background-color:whitesmoke;">
                                                                                            <div class="form-group"> 
                                                                                                @{
                                                                                                  Model.ACBWJustificationBudgEstNxtFin.Insert(LedgerNo, Ledgerdetails!=null && Ledgerdetails.ACBWJustificationBudgEstNxtFin!=null && Ledgerdetails.ACBWJustificationBudgEstNxtFin!=" "? Ledgerdetails.ACBWJustificationBudgEstNxtFin.ToString()  : " ");
                                                                                               }
                                                                                                
                                                                                                @Html.TextAreaFor(model => model.ACBWJustificationBudgEstNxtFin[LedgerNo], new { @class = "form-control", @id = @name16+@Ledgers.LedgerNo})
                                                                                                @Html.ValidationMessageFor(model => model.ACBWJustificationBudgEstNxtFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                            </div>
                                                                                        </td>
                                                                                    }
                                                                                    else if ((User.IsInRole("Admin") && (!AdminEditStatus || LedgerIsAdminSaved)) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                                                    {
                                                                                      <td style= "background-color:whitesmoke;">
                                                                                          <div class="form-group">
                                                                                              @{
                                                                                                 Model.ACBWJustificationBudgEstNxtFin.Insert(LedgerNo, Ledgerdetails!=null && Ledgerdetails.ACBWJustificationBudgEstNxtFin!=null && Ledgerdetails.ACBWJustificationBudgEstNxtFin!=" " ? Ledgerdetails.ACBWJustificationBudgEstNxtFin.ToString() : "");
                                                                                               }
                                                                                            
                                                                                            @Html.TextAreaFor(model => model.ACBWJustificationBudgEstNxtFin[LedgerNo], new { @class = "form-control", @id = @name16+@Ledgers.LedgerNo,@readonly = "readonly"})
                                                                                            @Html.ValidationMessageFor(model => model.ACBWJustificationBudgEstNxtFin[LedgerNo],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                                          </div>
                                                                                        </td>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        Model.ACBWJustificationBudgEstNxtFin.Insert(LedgerNo, " ");
                                                                                    }
                                                                                <td style="background-color:honeydew;">  
                                                                                    <table class="table" >
                                                                                    <thead> </thead>
                                                                                    <tbody>
                                                                                       @if ((!User.IsInRole("Admin") && GroupsStatusRowCount == 0 && Model.IsEnabled.Equals(true) && (!LedgerIsDelegateSaved || Model.EditEnabled ==@Ledgers.LedgerNo)))
                                                                                        {
                                                                                            <tr><td  style="border:none"> @Html.TextBoxFor(m => m.File, new { type = "file", @id = @name11+@Ledgers.LedgerNo, @dir = "rtl"})</td> </tr>
                                                                                            <tr><td  style="border:none"> @Html.ValidationMessage("Caution"+LedgerNo,"* only .pdf files with size 1 MB are allowed",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})</td></tr>
                                                                                            <tr><td  style="border:none"> @Html.ValidationMessage("FileMessage_"+LedgerNo,null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})</td></tr>
                                                                                            <br/>
                                                                                            <tr><td style="border:none"> <input id="@upload@Ledgers.LedgerNo" class="Submit" formaction="~/Tabs/Upload" type="submit" value="Upload" /></td> </tr>
                                                                                        }
                                                                                        
                                                                                    @foreach(var LedgerFiles in Model.Filess.Where (a => (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo))))
                                                                                    {
                                                                                        var FinalSubmitStatus = (from a in Model.Statuss where (a.SectionNumber == 0 && a.GroupNumber.Equals("0")) select a.AdminEditStatus).Count();
                                                                                                    <tr>
                                                                                                        @if ((User.IsInRole("Admin") && AdminEditStatus) || !User.IsInRole("Admin") || (User.IsInRole("Admin") && (FinalSubmitStatus > 0)))
                                                                                                        {
                                                                                                            <td style="border:none">@Html.ActionLink(@LedgerFiles.FileName,null,null,null,new{href =@LedgerFiles.SupportingDocumentPath, target = "_blank"} )</td>
                                                                                                            /*<td><input id="@view" class="ViewFile  btn-link" style="border:none; outline:none;  background-color: transparent;" formaction="~/Tabs/ViewFile" type="submit" value= "@LedgerFiles.FileName" /></td>*/
                                                                                                        }
                                                                                                        @if (!User.IsInRole("Admin") && GroupsStatusRowCount == 0 && !LedgerIsDelegateSaved)
                                                                                                        {
                                                                                                           <td style="border:none"><input id="@delete@Ledgers.LedgerNo" class="Submit btn-link" style="border:none; outline:none;  background-color: transparent;" formaction="~/Tabs/Delete" type="submit" value="Delete"/> </td>
                                                                                                        }
                                                                                                     </tr>      
                                                                                         
                                                                                    }
                                                                                    </tbody>
                                                                                    </table>
                                                                                </td>
                                                                                <td style="background-color:honeydew;">
                                                                                    @if((!User.IsInRole("Admin") && DelegateEditStatus && (!LedgerIsDelegateSaved || Model.EditEnabled==@Ledgers.LedgerNo) )||(User.IsInRole("Admin") && AdminEditStatus && (!LedgerIsAdminSaved  || (Model.EditEnabled == @Ledgers.LedgerNo))))
                                                                                    {
                                                                                
                                                                                   <button style="border:none;background-color:white" id="@save" class="Submit" formaction="~/Tabs/Save" type="submit" value="Save Budget" style="align-self:center">
                                                                                   <i class='bx bx-check' style="color:limegreen"></i></button>
                                                                                    }
                                                                                    @if ((!User.IsInRole("Admin") && LedgerIsDelegateSaved && DelegateEditStatus && (Model.EditEnabled != @Ledgers.LedgerNo)) || (User.IsInRole("Admin") && LedgerIsAdminSaved && AdminEditStatus && (Model.EditEnabled != @Ledgers.LedgerNo)))
                                                                                    {
                                                                                            <button style="border:none;background-color:white" id="@edit" class="Submit" formaction="~/Tabs/Edit" type="submit" value="Edit Budget" style="align-self:center">
                                                                                                <i class='bx bxs-pencil' style="color:blue"></i></button>
                                                                                    }
                                                                                @if((!User.IsInRole("Admin") && DelegateEditStatus && (LedgerIsDelegateSaved || Model.EditEnabled==@Ledgers.LedgerNo ))||(User.IsInRole("Admin") && AdminEditStatus && (LedgerIsAdminSaved || (Model.EditEnabled == @Ledgers.LedgerNo))))
                                                                                {
                                                                                            <button style="border:none;background-color:white" id="@Budgetdelete" class="Submit" formaction="~/Tabs/BudgetDelete" type="submit" value="Delete Budget" style="align-self:center">
                                                                                                <i class='bx bx-x' style="color:red"></i>     
                                                                                            </button>
                                                                                 }
                                                                                 </td>
                                                                         </tr>
                                                                            
                                                                        ++LedgerNo;
                                                                       }
                                                                        
                                                                        Count = LedgerNo-1;
                                                            }
                                                    
                                                    Count++;
                                                    TableCount++;
                                        }
                                                <tr>
                                                    <!--td>
                                                    </td-->
                                                    <td>
                                                    </td>
                                                    <td>
                                                        Sub-Total
                                                    </td>
                                                    <td>
                                                        Sub-Total
                                                    </td>

                                                    <td id="@Sumname1-Total">
                                                        @SumBudEstCurrFin.ToString("F4")
                                                    </td>
                                                    <td></td>
                                                    
                                                    <td></td>
                                                    
                                                    @if((User.IsInRole("Admin") && IsSubmittedToACBW) || !User.IsInRole("Admin") )
                                                    {
                                                    <td id="@Sumname2-Total">
                                                       @SumActPrevFin.ToString("F4")
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                     <td id="@Sumname2-Total">
                                                       0.00
                                                    </td>
                                                    }
                                                    @if((User.IsInRole("Admin") && IsSubmittedToACBW) || !User.IsInRole("Admin"))
                                                    {
                                                    <td id="@Sumname3-Total">
                                                        @SumActCurrFinTill2ndQuart.ToString("F4")
                                                    </td>
                                                    }
                                                    else
                                                    {
                                                     <td id="@Sumname3-Total">
                                                       0.00
                                                    </td>
                                                    }
                                                    @if ((User.IsInRole("Admin") && IsSubmittedToACBW) || !User.IsInRole("Admin"))
                                                    {
                                                        <td id="@Sumname4-Total">
                                                            @SumRevEstCurrFin.ToString("F4")
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                     <td id="@Sumname4-Total">
                                                       0.00
                                                     </td>
                                                    }
                                                    <td id="@Sumname5-Total">
                                                        @SumPerVarRevEstOverBudgEstCurrFin.ToString("F2") %
                                                    </td>
                                                    <td></td>
                                                    @if (User.IsInRole("Admin") || (!User.IsInRole("Admin")&& !FinalAdminEditStatus && FinalAdminEditCount>0))
                                                    {
                                                        <td id="@Sumname6-Total">
                                                            @SumACAndBWPropRECurrFin.ToString("F4")
                                                        </td>
                                                    }
                                                    @if (User.IsInRole("Admin"))
                                                    {
                                                    <td id="@Sumname11-Total">
                                                        @SumPerVarACBWRevEstOverBudgEstCurrFin.ToString("F2") %
                         
                                                    </td>
                                                    }
                                                    @if (User.IsInRole("Admin") || (!User.IsInRole("Admin")&& !FinalAdminEditStatus && FinalAdminEditCount>0))
                                                    {
                                                    <td></td>
                                                    }
                                                    <td id="@Sumname7-Total">
                                                       @SumBudgEstNexFin.ToString("F4")
                                                    </td>
                                                    <td id="@Sumname8-Total">
                                                        @SumPerVarRevEstOverBudgEstNxtFin.ToString("F2") %
                                                    </td>
                                                    <td></td>
                                                    @if (User.IsInRole("Admin") || (!User.IsInRole("Admin")&& !FinalAdminEditStatus && FinalAdminEditCount>0))
                                                    {
                                                        <td id="@Sumname9-Total">
                                                            @SumACAndBWPropRENxtFin.ToString("F4")
                                                        </td>
                                                    }
                                                    @if (User.IsInRole("Admin"))
                                                    {
                                                        <td id="@Sumname12-Total">
                                                            @SumPerVarACBWRevEstOverBudgEstNxtFin.ToString("F2") %
                                                        </td>
                                                    }
                                                    @if (User.IsInRole("Admin") || (!User.IsInRole("Admin")&& !FinalAdminEditStatus && FinalAdminEditCount>0))
                                                    {
                                                        <td></td>
                                                    }
                                                    <td style="border:none;"></td>
                                                    <td style="border:none;"></td>
                                                    
                                                </tr>
                                    </tbody>
                                </table>
                                        @*Html.Hidden("SectionName",Model.SectionName, new{@id = @identi+"-SectionName" })
                                        @Html.Hidden("GroupName",Model.GroupName,  new{@id = @identi+"-GroupName" })
                                        @Html.Hidden("SelectedAcademicYear", Model.SelectedAcademicYear,  new{@id = @identi+"-SelectedAcademicYear" })
                                        @Html.Hidden("SelectedDivisionName",Model.SelectedDivisionName,  new{@id = @identi+"-SelectedDivisionName" })*@
                                        @{
                                            var TotalDelegateSavedLedgers = (from d in Model.Detailss where d.SectionNumber.Equals(@inner.SectionNo)  && d.GroupNumber.Equals(@item.GroupNo) && d.HasDelegateSaved.Equals(true) select d.SubGroupNumber).Count();
                                            var TotalAdminSavedLedgers = (from e in Model.Detailss where e.SectionNumber.Equals(@inner.SectionNo)  && e.GroupNumber.Equals(@item.GroupNo) && e.HasAdminSaved.Equals(true) select e.SubGroupNumber).Count();
                                            Boolean ACBWSubmission = (from a in Model.Statuss where a.SectionNumber.Equals(@inner.SectionNo)  && a.GroupNumber.Equals(@item.GroupNo) select a.ACBWSubmission).FirstOrDefault();
                                         }
                                        
                                    @if (User.IsInRole("Admin") && AdminEditStatus && (TotalAdminSavedLedgers == TotalSubGroups)  && Model.IsEnabled.Equals(true) && !ACBWSubmission)
                                    {
                                            <input id="@SubmitChairPerson" class="Submit" formaction="~/Tabs/Index" type="submit" value="Submit to Chairperson for Approval" style="align-self:center"/>
                                        }
                                        else if(!User.IsInRole("Admin") && DelegateEditStatus && (TotalDelegateSavedLedgers == TotalSubGroups)  && Model.IsEnabled.Equals(true))
                                        {
                                            <input id="@SubmitACBW" class="Submit" formaction="~/Tabs/Index" type="submit" value="Submit to AC&BW for Approval" style="align-self:center"/>
                                        }
                                        @*}*@
                            </div>
                          
                        }
                        else
                        {
                                                    
                            <div id="@identi" class="tab-pane fade" role="tabpanel" aria-labelledby="@identi-tab" style="width: 1750px;">
                                <br />
                                 @if (!User.IsInRole("Admin") && AdminEditStatus && @Model.ApprovedMessage.Equals(" "))
                                 {
                                   <div style="color:green"> * Budget proposal @Model.SelectedAcademicYear for <span style="color:red">'@item.GroupName'</span> has been submitted to AC&BW successfully </div>
                                 }
                                 else if(User.IsInRole("Admin") && GroupACBWSubmissionStatus && IsSubmittedToChairman==0)
                                {
                                    <div style="color:green"> * Budget values for @Model.SelectedAcademicYear for <span style="color:red">'@item.GroupName'</span> has been saved successfully </div>
                                }
                                        <div class="fw-bold text-center">
                                            <span colspan="23" style="color:red;border-bottom:hidden;">(*FIGURES IN CRORES)</span>
                                        </div>
                                        <table id="@identi-outertable" class="table table-responsive table-bordered table-hover" style="width:2600px;">
                                            <!--th></!--th-->
                                            <thead>

                                                <tr>
                                                    @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                    {
                                                        <th colspan="3" class="align-text-middle" style="background-color:honeydew;">     </th>
                                                        <th colspan="3" class="align-text-middle" style="background-color: floralwhite;text-align:center;"> Interim Revision Sections </th>
                                                        <th colspan="8" class="align-text-middle" style="background-color: aliceblue;text-align:center;"> Revision Estimates Section of CY    </th>
                                                        <th colspan="6" class="align-text-middle" style="background-color:whitesmoke;text-align:center;">Budget Estimates Section of Next Year   </th>
                                                        <th colspan="2" class="align-text-middle" style="background-color:honeydew;">     </th>
                                                    }
                                                    else
                                                    {
                                                        <th colspan="3" class="align-text-middle" style="background-color:honeydew;">     </th>
                                                        <th colspan="3" class="align-text-middle" style="background-color: floralwhite;text-align:center;"> Interim Revision Sections </th>
                                                        <th colspan="5" class="align-text-middle" style="background-color: aliceblue;text-align:center;"> Revision Estimates Section of CY    </th>
                                                        <th colspan="3" class="align-text-middle" style="background-color:whitesmoke;text-align:center;">Budget Estimates Section of Next Year   </th>
                                                        <th colspan="2" class="align-text-middle" style="background-color:honeydew;">     </th>
                                                    }
                                                </tr>
                                                <tr class="align-text-top">
                                                    <!--th></!--th-->
                                                    <th style="width:100px;background-color:honeydew;">
                                                        @*SubGroupNumber*@
                                                        HEAD NO.
                                                    </th>
                                                    <th style="width:100px;background-color:honeydew;">
                                                        SUBHEAD NO.
                                                    </th>
                                                    <th style="width:130px;background-color:honeydew;">
                                                        @*SubGroupName*@
                                                        HEAD NAME
                                                    </th>
                                                    <th class="CurrentBudgetEstimates" style="background-color: floralwhite;width:130px;">

                                                    </th>
                                                    <th class="InterimRevEst" style="background-color: floralwhite;width:130px;">

                                                    </th>
                                                    <th class="ProvisionalRevEst" style="background-color: floralwhite;width:130px;">

                                                    </th>
                                                    <th class="PreviousActualBudget" style="background-color: aliceblue;width:130px;">

                                                    </th>
                                                    <th class="PreviousHalfYearActualBudget" style="background-color: aliceblue;width:130px;">

                                                    </th>
                                                    <th class="CurrentYearRevisedEstimates" style="background-color: aliceblue;width:130px;">

                                                    </th>
                                                    <th class="VariationInRevisedEstimates" style="background-color: aliceblue;width:100px;">

                                                    </th>
                                                    <th class="DelegateJustificationRevEst" style="background-color: aliceblue;width:130px;">

                                                    </th>
                                                    @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                    {
                                                        <th class="ACBWProposalForRevisedEstimates" style="background-color: aliceblue;width:130px;">

                                                        </th>
                                                    }
                                                    @if (User.IsInRole("Admin"))
                                                    {
                                                        <th class="VariationInRevisedEstimates" style="background-color: aliceblue;width:100px;">

                                                        </th>
                                                    }
                                                    @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                    {
                                                        <th class="ACBWJustificationRevEst" style="background-color: aliceblue;width:130px;">

                                                        </th>
                                                    }
                                                    <th class="BudgetEstimatesNextYear" style="background-color:whitesmoke;width:130px;">

                                                    </th>
                                                    <th class="VariationInBudgetEstimates" style="background-color:whitesmoke;width:100px;">

                                                    </th>

                                                    <th class="Justification " style="background-color:whitesmoke;width: 130px;">

                                                    </th>
                                                    @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                    {
                                                        <th class="ACBWProposalForBudgetEstimates" style="background-color:whitesmoke;width:130px;">

                                                        </th>

                                                    }
                                                    @if (User.IsInRole("Admin"))
                                                    {
                                                        <th class="VariationInBudgetEstimates" style="background-color:whitesmoke;width:100px;">

                                                        </th>

                                                    }
                                                    @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                    {
                                                        <th class="ACBWJustificationBudgEstNxtFin" style="background-color:whitesmoke;width:130px;">

                                                        </th>
                                                    }
                                                    <th class="UploadDocuments" style="width:130px;background-color:honeydew;">

                                                    </th>
                                                    <th style="width:50px;background-color:honeydew;">Action</th>
                                                </tr>
                                            </thead>
                                            <tbody>

                                                @foreach (var Subs in Model.SubGroupss.Where(d => d.GroupNo.Equals(@item.GroupNo)))
                                                {
                                                    var details = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a).FirstOrDefault();
                                                    var PrevYearApp = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a).FirstOrDefault();

                                                    var TotalLedgers = (from c in Model.Ledgerss where c.SubGroupNo.Equals(@Subs.SubGroupNo) select c.LedgerNo).Count();

                                                    TotalSubGroups = (TotalSubGroups + TotalLedgers);

                                                    @if (@Subs.RequireInput)
                                                    {
                                                        int DelegateSavedCount = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.HasDelegateSaved.Equals(true) select a.SubGroupNumber).Count();
                                                        int AdminSavedCount = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.HasAdminSaved.Equals(true) select a.SubGroupNumber).Count();

                                                        @if (DelegateSavedCount > 0)
                                                            IsDelegateSaved = true;
                                                        else
                                                            IsDelegateSaved = false;

                                                        @if (AdminSavedCount > 0)
                                                            IsAdminSaved = true;
                                                        else
                                                            IsAdminSaved = false;
                                                    }
                                                    else
                                                    {
                                                        IsDelegateSaved = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.HasDelegateSaved).FirstOrDefault();
                                                        IsAdminSaved = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.HasAdminSaved).FirstOrDefault();
                                                    }
                                                    var name1 = String.Concat("BudEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name2 = String.Concat("ActPrevFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name3 = String.Concat("ActCurrFinTillsecondQuart", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name4 = String.Concat("RevEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name5 = String.Concat("PerVarRevEstOverBudgEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name6 = String.Concat("ACAndBWPropRECurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name7 = String.Concat("BudgEstNexFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name8 = String.Concat("PerVarRevEstOverBudgEstNxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name9 = String.Concat("ACAndBWPropRENxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name10 = String.Concat("Justification", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name11 = String.Concat("UploadFile", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name12 = String.Concat("InterimRevEst", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name13 = String.Concat("ProvisionalRevEst", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name14 = String.Concat("DelegateJustificationRevEst", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name15 = String.Concat("ACBWJustificationRevEst", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name16 = String.Concat("ACBWJustificationBudgEstNxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name17 = String.Concat("PerVarACBWRevEstOverBudgEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name18 = String.Concat("PerVarACBWRevEstOverBudgEstNxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);


                                                    var upload = String.Concat("UploadButton", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var delete = String.Concat("DeleteButton", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var view = String.Concat("ViewButton", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);

                                                    var save = String.Concat("Save", @inner.SectionNo.ToString(), "_", @item.GroupNo, @TableCount);
                                                    var edit = String.Concat("Edit", @inner.SectionNo.ToString(), "_", @item.GroupNo, @TableCount);
                                                    var Budgetdelete = String.Concat("Delete", @inner.SectionNo.ToString(), "_", @item.GroupNo, @TableCount);

                                                    var LedgerCount = (from a in Model.Ledgerss where a.SubGroupNo.Equals(@Subs.SubGroupNo) select a.LedgerNo).Count();



                                                    <tr>
                                                        <!--td class=""></!--td-->
                                                        <td style="background-color:honeydew;">
                                                            @{
                                                                Model.SubGroupNameOrLedgerName.Insert(Count, Subs.SubGroupNo);
                                                            }

                                                            @Html.DisplayFor(model => model.SubGroupNameOrLedgerName[Count])
                                                            @Html.HiddenFor(model => model.SubGroupNameOrLedgerName[Count])
                                                        </td>
                                                        <td style="background-color:honeydew;"></td>
                                                        <td style="background-color:honeydew;">
                                                            @Subs.subGroupName
                                                        </td>
                                                        <td style="background-color: floralwhite;">

                                                            @if (@Subs.RequireInput && DelegateEditStatus && !IsDelegateSaved)
                                                            {
                                                                var LedgerPastYearAppBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();

                                                                <div class="form-group text-nowrap">
                                                                    @{
                                                                        Model.BudEstCurrFin.Insert(Count, LedgerPastYearAppBudEstCurrFin != null ? Convert.ToDecimal(LedgerPastYearAppBudEstCurrFin) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @maxlength = "20", @class = "form-control", @id = @name1, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })

                                                                </div>

                                                            }
                                                            else if ((@Subs.RequireInput && !DelegateEditStatus && IsSubmittedToACBW) || (@Subs.RequireInput && !User.IsInRole("Admin") && IsDelegateSaved))
                                                            {
                                                                var LedgerSumBudEstCurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstCurrFin).Sum();

                                                                <div class="form-group text-nowrap">
                                                                    @{
                                                                        Model.BudEstCurrFin.Insert(Count, LedgerSumBudEstCurrFin != null ? Convert.ToDecimal(LedgerSumBudEstCurrFin) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @maxlength = "20", @class = "form-control", @id = @name1, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>

                                                            }

                                                            else if ((!DelegateEditStatus && IsSubmittedToACBW) || (!User.IsInRole("Admin") && IsDelegateSaved))
                                                            {
                                                                <div class="form-group text-nowrap">

                                                                    @{
                                                                        Model.BudEstCurrFin.Insert(Count, details != null ? Convert.ToDecimal(details.BudEstCurrFin) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @maxlength = "20", @class = "form-control", @id = @name1, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })

                                                                </div>

                                                            }
                                                            else
                                                            {
                                                                <div class="form-group ">
                                                                    @{
                                                                        Model.BudEstCurrFin.Insert(Count, (PrevYearApp != null) ? Convert.ToDecimal(PrevYearApp.BudEstNextFin) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @maxlength = "20", @class = "form-control", @id = @name1, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })

                                                                </div>

                                                            }
                                                        </td>
                                                        <td style="background-color: floralwhite;">

                                                            @if (@Subs.RequireInput)
                                                            {
                                                                var LedgerSumInterimRevEst = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.InterimRevEst).Sum();

                                                                <div class="form-group">
                                                                    @{
                                                                        Model.InterimRevEst.Insert(Count, LedgerSumInterimRevEst != null ? Convert.ToDecimal(LedgerSumInterimRevEst) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.InterimRevEst[Count], new { @maxlength = "20", @class = "form-control", @id = @name12, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.InterimRevEst[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.InterimRevEst.Insert(Count, details != null ? Convert.ToDecimal(details.InterimRevEst) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.InterimRevEst[Count], new { @maxlength = "20", @class = "form-control", @id = @name12, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.InterimRevEst[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            }

                                                        </td>
                                                        <td style="background-color: floralwhite;">

                                                            @if (@Subs.RequireInput)
                                                            {
                                                                var LedgerSumProvisionalRevEst = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ProvisionalRevEst).Sum();

                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ProvisionalRevEst.Insert(Count, LedgerSumProvisionalRevEst != null ? Convert.ToDecimal(LedgerSumProvisionalRevEst) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.ProvisionalRevEst[Count], new { @maxlength = "20", @class = "form-control", @id = @name13, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ProvisionalRevEst[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ProvisionalRevEst.Insert(Count, details != null ? Convert.ToDecimal(details.ProvisionalRevEst) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.ProvisionalRevEst[Count], new { @maxlength = "20", @class = "form-control", @id = @name13, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ProvisionalRevEst[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            }

                                                        </td>
                                                        <td style="background-color: aliceblue;">
                                                            @if (DelegateEditStatus && User.IsInRole("Admin"))
                                                            {
                                                                <div>
                                                                    @{
                                                                        Model.ActPrevFin.Insert(Count, Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.ActPrevFin[Count], new { @maxlength = "20", @class = "form-control", @id = @name2, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ActPrevFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            }
                                                            else if (@Subs.RequireInput)
                                                            {
                                                                var LedgerSumActPrevFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActPrevFin).Sum();
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ActPrevFin.Insert(Count, LedgerSumActPrevFin != null ? Convert.ToDecimal(LedgerSumActPrevFin) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.ActPrevFin[Count], new { @maxlength = "20", @class = "form-control", @id = @name2, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ActPrevFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>

                                                            }
                                                            else if ((!DelegateEditStatus) || (!User.IsInRole("Admin") && IsDelegateSaved && Model.EditEnabled != @Subs.SubGroupNo))
                                                            {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ActPrevFin.Insert(Count, details != null ? Convert.ToDecimal(details.ActPrevFin) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.ActPrevFin[Count], new { @maxlength = "20", @class = "form-control", @id = @name2, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ActPrevFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>

                                                            }
                                                            else
                                                            {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ActPrevFin.Insert(Count, details != null ? Convert.ToDecimal(details.ActPrevFin) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.ActPrevFin[Count], new { @maxlength = "20", @class = "form-control", @id = @name2, @dir = "rtl" })
                                                                    @Html.ValidationMessageFor(model => model.ActPrevFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>

                                                            }
                                                        </td>
                                                        <td style="background-color: aliceblue;">
                                                            @if (DelegateEditStatus && User.IsInRole("Admin"))
                                                            {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ActCurrFinTillsecondQuart.Insert(Count, Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[Count], new { @class = "form-control", @id = @name3, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            }

                                                            else if (@Subs.RequireInput)
                                                            {
                                                                var LedgerSumActCurrFinTill2ndQuart = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActCurrFinTill2ndQuart).Sum();
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ActCurrFinTillsecondQuart.Insert(Count, LedgerSumActCurrFinTill2ndQuart != null ? Convert.ToDecimal(LedgerSumActCurrFinTill2ndQuart) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[Count], new { @class = "form-control", @id = @name3, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>

                                                            }
                                                            else if (!DelegateEditStatus || (!User.IsInRole("Admin") && IsDelegateSaved && Model.EditEnabled != @Subs.SubGroupNo))
                                                            {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ActCurrFinTillsecondQuart.Insert(Count, details != null ? Convert.ToDecimal(details.ActCurrFinTill2ndQuart) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[Count], new { @class = "form-control", @id = @name3, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>

                                                            }
                                                            else
                                                            {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ActCurrFinTillsecondQuart.Insert(Count, details != null ? Convert.ToDecimal(details.ActCurrFinTill2ndQuart) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[Count], new { @class = "form-control", @dir = "rtl", @id = @name3 })
                                                                    @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>

                                                            }
                                                        </td>
                                                        <td style="background-color: aliceblue;">
                                                            @if (@Subs.RequireInput && DelegateEditStatus && !IsDelegateSaved)
                                                            {
                                                                var PastYearBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.RevEstCurrFin.Insert(Count, PastYearBudEstCurrFin != null ? Convert.ToDecimal(PastYearBudEstCurrFin) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.RevEstCurrFin[Count], new { @class = "form-control", @id = @name4, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.RevEstCurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>

                                                            }
                                                            else if ((@Subs.RequireInput && !DelegateEditStatus) || (@Subs.RequireInput && !User.IsInRole("Admin") && IsDelegateSaved && Model.EditEnabled != @Subs.SubGroupNo))
                                                            {
                                                                var PastYearBudEstCurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.RevEstCurrFin).Sum();
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.RevEstCurrFin.Insert(Count, PastYearBudEstCurrFin != null ? Convert.ToDecimal(PastYearBudEstCurrFin) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.RevEstCurrFin[Count], new { @class = "form-control", @id = @name4, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.RevEstCurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            }
                                                            else if (User.IsInRole("Admin") && DelegateEditStatus)
                                                            {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.RevEstCurrFin.Insert(Count, PrevYearApp != null ? Convert.ToDecimal(PrevYearApp.BudEstNextFin) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.RevEstCurrFin[Count], new { @class = "form-control", @id = @name4, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.RevEstCurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            }
                                                            else if (!DelegateEditStatus || (!User.IsInRole("Admin") && IsDelegateSaved && Model.EditEnabled != @Subs.SubGroupNo))
                                                            {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.RevEstCurrFin.Insert(Count, details != null ? Convert.ToDecimal(details.RevEstCurrFin) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.RevEstCurrFin[Count], new { @class = "form-control", @id = @name4, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.RevEstCurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                                <div class="form-group">
                                                                    @if (details != null && !@details.ProvisionalRevEst.Equals(Convert.ToDecimal(0.00)) && !IsDelegateSaved)
                                                                    {
                                                                        Model.RevEstCurrFin.Insert(Count, details != null ? Convert.ToDecimal(@details.ProvisionalRevEst) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    else
                                                                    {
                                                                        Model.RevEstCurrFin.Insert(Count, PrevYearApp != null ? Convert.ToDecimal(PrevYearApp.BudEstNextFin) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.RevEstCurrFin[Count], new { @class = "form-control", @dir = "rtl", @id = @name4 })
                                                                    @Html.ValidationMessageFor(model => model.RevEstCurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            }
                                                        </td>
                                                        <td style="background-color: aliceblue;">
                                                            @if (@Subs.RequireInput && DelegateEditStatus && !IsDelegateSaved)
                                                            {

                                                                var PastYearSumBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.PerVarRevEstOverBudgEstCurrFin.Insert(Count, PastYearSumBudEstCurrFin != Convert.ToDecimal(0.0000) ? Convert.ToString(((Convert.ToDecimal(PastYearSumBudEstCurrFin) - Convert.ToDecimal(PastYearSumBudEstCurrFin)) / Convert.ToDecimal(PastYearSumBudEstCurrFin)) * 100) : (0).ToString("F2"));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count], "{0:#.##}%", new { @class = "form-control", @id = @name5, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            }
                                                            else if ((@Subs.RequireInput && !DelegateEditStatus) || (@Subs.RequireInput && !User.IsInRole("Admin") && IsDelegateSaved))
                                                            {
                                                                var LedgerSumRevEstCurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.RevEstCurrFin).Sum();
                                                                var LedgerSumBudEstCurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstCurrFin).Sum();
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.PerVarRevEstOverBudgEstCurrFin.Insert(Count, LedgerSumBudEstCurrFin != Convert.ToDecimal(0.0000) ? Convert.ToString(((Convert.ToDecimal(LedgerSumRevEstCurrFin) - Convert.ToDecimal(LedgerSumBudEstCurrFin)) / Convert.ToDecimal(LedgerSumBudEstCurrFin)) * 100) : (0).ToString("F2"));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count], "{0:#.##}%", new { @class = "form-control", @id = @name5, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            }

                                                            else if (!DelegateEditStatus || (!User.IsInRole("Admin") && IsDelegateSaved))
                                                            {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.PerVarRevEstOverBudgEstCurrFin.Insert(Count, (details != null && details.BudEstCurrFin != Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(details.RevEstCurrFin) - Convert.ToDecimal(details.BudEstCurrFin)) / Convert.ToDecimal(details.BudEstCurrFin)) * 100) : (0).ToString("F2"));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count], "{0:#.##}%", new { @class = "form-control", @id = @name5, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.PerVarRevEstOverBudgEstCurrFin.Insert(Count, (PrevYearApp != null && PrevYearApp.BudEstNextFin != Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(PrevYearApp.BudEstNextFin) - Convert.ToDecimal(PrevYearApp.BudEstNextFin)) / Convert.ToDecimal(PrevYearApp.BudEstNextFin)) * 100) : (0).ToString("F2"));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count], "{0:#.##}%", new { @class = "form-control", @id = @name5, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            }
                                                        </td>

                                                        <td style="background-color: aliceblue;">
                                                            @if ((!DelegateEditStatus && !@Subs.RequireInput) || (!User.IsInRole("Admin") && IsDelegateSaved))
                                                            {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.DelegateJustificationRevEst.Insert(Count, (details != null && details.DelegateJustificationRevEst != null) ? details.DelegateJustificationRevEst.ToString() : "");
                                                                    }
                                                                    @Html.TextBoxFor(model => model.DelegateJustificationRevEst[Count], new { @class = "form-control", @id = @name14, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.DelegateJustificationRevEst[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>

                                                            }
                                                            else if ((User.IsInRole("Admin") && DelegateEditStatus) || @Subs.RequireInput)
                                                            {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.DelegateJustificationRevEst.Insert(Count, "");
                                                                    }
                                                                    @Html.TextBoxFor(model => model.DelegateJustificationRevEst[Count], new { @class = "form-control", @id = @name14, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.DelegateJustificationRevEst[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.DelegateJustificationRevEst.Insert(Count, (details != null && details.DelegateJustificationRevEst != null) ? details.DelegateJustificationRevEst.ToString() : "");
                                                                    }
                                                                    @Html.TextAreaFor(model => model.DelegateJustificationRevEst[Count], new { @class = "form-control", @id = @name14 })
                                                                    @Html.ValidationMessageFor(model => model.DelegateJustificationRevEst[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>

                                                            }
                                                        </td>
                                                        @if (((User.IsInRole("Admin") && (AdminEditStatus || !AdminEditStatus)) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0)) && @Subs.RequireInput)
                                                        {
                                                            var LedgerSumACAndBWPropRECurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRECurrFin).Sum();
                                                            <td style="background-color: aliceblue;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ACAndBWPropRECurrFin.Insert(Count, LedgerSumACAndBWPropRECurrFin != null ? Convert.ToDecimal(LedgerSumACAndBWPropRECurrFin) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.ACAndBWPropRECurrFin[Count], new { @class = "form-control", @id = @name6, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ACAndBWPropRECurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            </td>
                                                        }
                                                        else if (User.IsInRole("Admin") && !@Subs.RequireInput && AdminEditStatus && (!IsAdminSaved || (Model.EditEnabled == @Subs.SubGroupNo)))
                                                        {
                                                            <td style="background-color: aliceblue;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ACAndBWPropRECurrFin.Insert(Count, details != null ? Convert.ToDecimal(details.ACAndBWPropRECurrFin) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.ACAndBWPropRECurrFin[Count], new { @class = "form-control", @id = @name6 })
                                                                    @Html.ValidationMessageFor(model => model.ACAndBWPropRECurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            </td>
                                                        }
                                                        else if (((User.IsInRole("Admin") && (!AdminEditStatus || IsAdminSaved)) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0)) && !@Subs.RequireInput)
                                                        {
                                                            <td style="background-color: aliceblue;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ACAndBWPropRECurrFin.Insert(Count, details != null ? Convert.ToDecimal(details.ACAndBWPropRECurrFin) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.ACAndBWPropRECurrFin[Count], new { @class = "form-control", @id = @name6, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ACAndBWPropRECurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            </td>
                                                        }
                                                        @*else if (User.IsInRole("Admin") && @Subs.RequireInput && !AdminEditStatus)
                                {
                                var LedgerSumACAndBWPropRECurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRECurrFin).Sum();
                                <td>
                                <div class="form-group">
                                @{
                                Model.ACAndBWPropRECurrFin.Insert(Count, LedgerSumACAndBWPropRECurrFin!=null ? Convert.ToDecimal(LedgerSumACAndBWPropRECurrFin) : Convert.ToDecimal(0.00));
                                }
                                Html.TextBox(@name6, @dir = "rtl", details!=null ? details.ACAndBWPropRECurrFin.ToString("F4") : " ", new { @class = "form-control", @id = @name6, @dir = "rtl", @readonly = "readonly"})
                                @Html.ValidationMessage(@name6, @dir = "rtl",  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                @Html.TextBoxFor(model => model.ACAndBWPropRECurrFin[Count], new { @class = "form-control", @id = @name6, @dir = "rtl", @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.ACAndBWPropRECurrFin[Count],null, new { @class = "text-danger" })
                                </div>
                                </td>
                                }*@

                                                        else
                                                        {
                                                            Model.ACAndBWPropRECurrFin.Insert(Count, Convert.ToDecimal(0.00));

                                                        }

                                                        @if (User.IsInRole("Admin") && @Subs.RequireInput && AdminEditStatus && !IsAdminSaved)
                                                        {
                                                            var PastYearSumBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();
                                                            <td style="background-color: aliceblue;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(Count, PastYearSumBudEstCurrFin != Convert.ToDecimal(0.0000) ? Convert.ToString(((Convert.ToDecimal(PastYearSumBudEstCurrFin) - Convert.ToDecimal(PastYearSumBudEstCurrFin)) / Convert.ToDecimal(PastYearSumBudEstCurrFin)) * 100) : (0).ToString("F2"));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count], "{0:#.##}%", new { @class = "form-control", @id = @name17, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            </td>

                                                        }
                                                        else if ((User.IsInRole("Admin") && @Subs.RequireInput && IsAdminSaved))
                                                        {
                                                            var LedgerSumACAndBWPropRECurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRECurrFin).Sum();
                                                            var LedgerSumBudEstCurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstCurrFin).Sum();
                                                            <td style="background-color: aliceblue;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(Count, LedgerSumBudEstCurrFin != Convert.ToDecimal(0.0000) ? Convert.ToString(((Convert.ToDecimal(LedgerSumACAndBWPropRECurrFin) - Convert.ToDecimal(LedgerSumBudEstCurrFin)) / Convert.ToDecimal(LedgerSumBudEstCurrFin)) * 100) : (0).ToString("F2"));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count], "{0:#.##}%", new { @class = "form-control", @id = @name17, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            </td>
                                                        }

                                                        else if (User.IsInRole("Admin") && IsAdminSaved)
                                                        {
                                                            <td style="background-color: aliceblue;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(Count, (details != null && details.BudEstCurrFin != Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(details.ACAndBWPropRECurrFin) - Convert.ToDecimal(details.BudEstCurrFin)) / Convert.ToDecimal(details.BudEstCurrFin)) * 100) : (0).ToString("F2"));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count], "{0:#.##}%", new { @class = "form-control", @id = @name17, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            </td>
                                                        }
                                                        else if (User.IsInRole("Admin") && !IsAdminSaved)
                                                        {
                                                            <td style="background-color: aliceblue;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(Count, (PrevYearApp != null && PrevYearApp.BudEstNextFin != Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(PrevYearApp.BudEstNextFin) - Convert.ToDecimal(PrevYearApp.BudEstNextFin)) / Convert.ToDecimal(PrevYearApp.BudEstNextFin)) * 100) : (0).ToString("F2"));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count], "{0:#.##}%", new { @class = "form-control", @id = @name17, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(Count, (0).ToString("F2"));
                                                        }

                                                        @if (User.IsInRole("Admin") && AdminEditStatus && !@Subs.RequireInput && (!IsAdminSaved || (Model.EditEnabled == @Subs.SubGroupNo)))
                                                        {
                                                            <td style="background-color: aliceblue;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ACBWJustificationRevEst.Insert(Count, details != null && details.ACBWJustificationRevEst != null && details.ACBWJustificationRevEst != " " ? details.ACBWJustificationRevEst.ToString() : " ");
                                                                    }

                                                                    @Html.TextBoxFor(model => model.ACBWJustificationRevEst[Count], new { @class = "form-control", @id = @name15 })
                                                                    @Html.ValidationMessageFor(model => model.ACBWJustificationRevEst[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            </td>
                                                        }
                                                        else if ((User.IsInRole("Admin") && (!AdminEditStatus || IsAdminSaved)) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                        {
                                                            <td style="background-color: aliceblue;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ACBWJustificationRevEst.Insert(Count, (details != null && details.ACBWJustificationRevEst != " " && details.ACBWJustificationRevEst != null) ? details.ACBWJustificationRevEst.ToString() : "");
                                                                    }

                                                                    @Html.TextBoxFor(model => model.ACBWJustificationRevEst[Count], new { @class = "form-control", @id = @name15, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ACBWJustificationRevEst[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            </td>
                                                        }
                                                        else if (User.IsInRole("Admin") && (DelegateEditStatus || @Subs.RequireInput))
                                                        {
                                                            <td style="background-color: aliceblue;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ACBWJustificationRevEst.Insert(Count, "");
                                                                    }
                                                                    @Html.TextBoxFor(model => model.ACBWJustificationRevEst[Count], new { @class = "form-control", @id = @name14, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ACBWJustificationRevEst[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            Model.ACBWJustificationRevEst.Insert(Count, " ");
                                                        }
                                                        <td style="background-color:whitesmoke;">
                                                            @if (@Subs.RequireInput && DelegateEditStatus && !IsDelegateSaved)
                                                            {
                                                                var PastYearBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.BudgEstNexFin.Insert(Count, PastYearBudEstCurrFin != null ? Convert.ToDecimal(PastYearBudEstCurrFin) : Convert.ToDecimal(0.00));
                                                                    }

                                                                    @Html.TextBoxFor(model => model.BudgEstNexFin[Count], new { @class = "form-control", @id = @name7, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.BudgEstNexFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            }
                                                            else if ((@Subs.RequireInput && !DelegateEditStatus) || (@Subs.RequireInput && !User.IsInRole("Admin") && IsDelegateSaved && Model.EditEnabled != @Subs.SubGroupNo))
                                                            {
                                                                var ThisYearBudEstNextFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudgEstNexFin).Sum();
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.BudgEstNexFin.Insert(Count, ThisYearBudEstNextFin != null ? Convert.ToDecimal(ThisYearBudEstNextFin) : Convert.ToDecimal(0.00));
                                                                    }

                                                                    @Html.TextBoxFor(model => model.BudgEstNexFin[Count], new { @class = "form-control", @id = @name7, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.BudgEstNexFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            }
                                                            else if (User.IsInRole("Admin") && DelegateEditStatus)
                                                            {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.BudgEstNexFin.Insert(Count, PrevYearApp != null ? Convert.ToDecimal(PrevYearApp.BudEstNextFin) : Convert.ToDecimal(0.00));
                                                                    }

                                                                    @Html.TextBoxFor(model => model.BudgEstNexFin[Count], new { @class = "form-control", @id = @name7, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.BudgEstNexFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>

                                                            }
                                                            else if (!DelegateEditStatus || (!User.IsInRole("Admin") && IsDelegateSaved && Model.EditEnabled != @Subs.SubGroupNo))
                                                            {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.BudgEstNexFin.Insert(Count, details != null ? Convert.ToDecimal(details.BudgEstNexFin) : Convert.ToDecimal(0.00));
                                                                    }

                                                                    @Html.TextBoxFor(model => model.BudgEstNexFin[Count], new { @class = "form-control", @id = @name7, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.BudgEstNexFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                                <div class="form-group">
                                                                    @if (details != null && !@details.ProvisionalRevEst.Equals(Convert.ToDecimal(0.00)) && !IsDelegateSaved)
                                                                    {
                                                                        Model.BudgEstNexFin.Insert(Count, details != null ? Convert.ToDecimal(details.ProvisionalRevEst) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    else
                                                                    {
                                                                        Model.BudgEstNexFin.Insert(Count, PrevYearApp != null ? Convert.ToDecimal(PrevYearApp.BudEstNextFin) : Convert.ToDecimal(0.00));
                                                                    }

                                                                    @Html.TextBoxFor(model => model.BudgEstNexFin[Count], new { @class = "form-control", @dir = "rtl", @id = @name7 })
                                                                    @Html.ValidationMessageFor(model => model.BudgEstNexFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>

                                                            }
                                                        </td>
                                                        <td style="background-color:whitesmoke;">
                                                            @if (@Subs.RequireInput && DelegateEditStatus && !IsDelegateSaved)
                                                            {

                                                                var PastYearSumBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.PerVarRevEstOverBudgEstNxtFin.Insert(Count, PastYearSumBudEstCurrFin != Convert.ToDecimal(0.0000) ? Convert.ToString(((Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F")) - Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F"))) / Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F"))) * 100) : (0).ToString("F2"));
                                                                    }

                                                                    @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count], "{0:#.##}%", new { @class = "form-control", @id = @name8, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            }
                                                            else if ((@Subs.RequireInput && !DelegateEditStatus) || (@Subs.RequireInput && !User.IsInRole("Admin") && IsDelegateSaved))
                                                            {
                                                                var LedgerSumRevEstCurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.RevEstCurrFin).Sum();
                                                                var LedgerSumBudEstNextFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudgEstNexFin).Sum();
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.PerVarRevEstOverBudgEstNxtFin.Insert(Count, LedgerSumBudEstNextFin != Convert.ToDecimal(0.0000) ? Convert.ToString(((Convert.ToDecimal(LedgerSumBudEstNextFin.ToString("F")) - Convert.ToDecimal(LedgerSumRevEstCurrFin.ToString("F"))) / Convert.ToDecimal(LedgerSumRevEstCurrFin.ToString("F"))) * 100) : (0).ToString("F2"));
                                                                    }

                                                                    @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count], "{0:#.##}%", new { @class = "form-control", @id = @name8, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            }

                                                            else if (User.IsInRole("Admin") || !DelegateEditStatus || (!User.IsInRole("Admin") && IsDelegateSaved))
                                                            {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.PerVarRevEstOverBudgEstNxtFin.Insert(Count, (details != null && details.RevEstCurrFin != Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(details.BudgEstNexFin.ToString("F")) - Convert.ToDecimal(details.RevEstCurrFin.ToString("F"))) / Convert.ToDecimal(details.RevEstCurrFin.ToString("F"))) * 100) : (0).ToString("F2"));
                                                                    }

                                                                    @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count], "{0:#.##}%", new { @class = "form-control", @id = @name8, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.PerVarRevEstOverBudgEstNxtFin.Insert(Count, (PrevYearApp != null && PrevYearApp.BudEstNextFin != Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F")) - Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F"))) / Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F"))) * 100) : (0).ToString("F2"));
                                                                    }

                                                                    @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count], "{0:#.##}%", new { @class = "form-control", @id = @name8, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            }
                                                        </td>
                                                        <td style="background-color:whitesmoke;">
                                                            @if ((!DelegateEditStatus && !@Subs.RequireInput) || (!User.IsInRole("Admin") && IsDelegateSaved && Model.EditEnabled != @Subs.SubGroupNo))
                                                            {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.Justification.Insert(Count, (details != null && details.Justification != null) ? details.Justification.ToString() : "");
                                                                    }

                                                                    @Html.TextBoxFor(model => model.Justification[Count], new { @class = "form-control", @id = @name10, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.Justification[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            }
                                                            else if ((User.IsInRole("Admin") && DelegateEditStatus) || @Subs.RequireInput)
                                                            {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.Justification.Insert(Count, "");
                                                                    }

                                                                    @Html.TextBoxFor(model => model.Justification[Count], new { @class = "form-control", @id = @name10, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.Justification[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.Justification.Insert(Count, (details != null && details.Justification != null) ? details.Justification.ToString() : "");
                                                                    }
                                                                    @*Html.TextArea(@name10, @dir = "rtl", details!=null ? details.Justification.ToString() : " ", new { @class = "form-control", @id = @name10})
                                        @Html.ValidationMessage(@name10, @dir = "rtl",  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                    @Html.TextAreaFor(model => model.Justification[Count], new { @class = "form-control", @id = @name10 })
                                                                    @Html.ValidationMessageFor(model => model.Justification[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            }
                                                        </td>
                                                        @if (((User.IsInRole("Admin") && (AdminEditStatus || !AdminEditStatus)) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0)) && @Subs.RequireInput)
                                                        {
                                                            var LedgerSumACAndBWPropRENxtFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRENxtFin).Sum();
                                                            <td style="background-color:whitesmoke;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ACAndBWPropRENxtFin.Insert(Count, LedgerSumACAndBWPropRENxtFin != null ? Convert.ToDecimal(LedgerSumACAndBWPropRENxtFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                    }

                                                                    @Html.TextBoxFor(model => model.ACAndBWPropRENxtFin[Count], new { @class = "form-control", @id = @name9, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ACAndBWPropRENxtFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            </td>
                                                        }
                                                        else if (User.IsInRole("Admin") && !@Subs.RequireInput && AdminEditStatus && (!IsAdminSaved || (Model.EditEnabled == @Subs.SubGroupNo)))
                                                        {
                                                            <td style="background-color:whitesmoke;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ACAndBWPropRENxtFin.Insert(Count, details != null ? Convert.ToDecimal(details.ACAndBWPropRENxtFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                    }

                                                                    @Html.TextBoxFor(model => model.ACAndBWPropRENxtFin[Count], new { @class = "form-control", @id = @name9 })
                                                                    @Html.ValidationMessageFor(model => model.ACAndBWPropRENxtFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            </td>
                                                        }
                                                        else if (((User.IsInRole("Admin") && (!AdminEditStatus || IsAdminSaved)) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0)) && !@Subs.RequireInput)
                                                        {
                                                            <td style="background-color:whitesmoke;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ACAndBWPropRENxtFin.Insert(Count, details != null ? Convert.ToDecimal(details.ACAndBWPropRENxtFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                    }

                                                                    @Html.TextBoxFor(model => model.ACAndBWPropRENxtFin[Count], new { @class = "form-control", @id = @name9, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ACAndBWPropRENxtFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>

                                                            </td>
                                                        }
                                                        @*else if (User.IsInRole("Admin") && @Subs.RequireInput && !AdminEditStatus)
                                {
                                var LedgerSumACAndBWPropRENxtFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRENxtFin).Sum();
                                <td>
                                <div class="form-group">
                                @{
                                Model.ACAndBWPropRENxtFin.Insert(Count, LedgerSumACAndBWPropRENxtFin!=null ? Convert.ToDecimal(LedgerSumACAndBWPropRENxtFin.ToString("F4"))  : Convert.ToDecimal(0.00));
                                }
                                @Html.TextBox(@name9, @dir = "rtl", details!=null ? details.ACAndBWPropRENxtFin.ToString("F4") : " ", new { @class = "form-control", @id = @name9, @dir = "rtl", @readonly = "readonly"})
                                @Html.ValidationMessage(@name9, @dir = "rtl",  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                @Html.TextBoxFor(model => model.ACAndBWPropRENxtFin[Count],   new { @class = "form-control", @id = @name9, @dir = "rtl", @readonly = "readonly"})
                                @Html.ValidationMessageFor(model => model.ACAndBWPropRENxtFin[Count],null,new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                </div>
                                </td>
                                }*@
                                                        else
                                                        {
                                                            Model.ACAndBWPropRENxtFin.Insert(Count, Convert.ToDecimal(0.00));
                                                        }

                                                        @if (User.IsInRole("Admin") && @Subs.RequireInput && AdminEditStatus && !IsAdminSaved)
                                                        {
                                                            var PastYearSumBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();
                                                            <td style="background-color:whitesmoke;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(Count, PastYearSumBudEstCurrFin != Convert.ToDecimal(0.0000) ? Convert.ToString(((Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F4")) - Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F4"))) / Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F4"))) * 100) : (0).ToString("F2"));
                                                                    }

                                                                    @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count], "{0:#.##}%", new { @class = "form-control", @id = @name18, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            </td>
                                                        }
                                                        else if (User.IsInRole("Admin") && @Subs.RequireInput && IsAdminSaved)
                                                        {
                                                            var LedgerSumACAndBWPropRECurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRECurrFin).Sum();
                                                            var LedgerSumACAndBWPropRENxtFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRENxtFin).Sum();
                                                            <td style="background-color:whitesmoke;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(Count, LedgerSumACAndBWPropRENxtFin != Convert.ToDecimal(0.0000) ? Convert.ToString(((Convert.ToDecimal(LedgerSumACAndBWPropRENxtFin.ToString("F4")) - Convert.ToDecimal(LedgerSumACAndBWPropRECurrFin.ToString("F4"))) / Convert.ToDecimal(LedgerSumACAndBWPropRECurrFin.ToString("F4"))) * 100) : (0).ToString("F2"));
                                                                    }

                                                                    @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count], "{0:#.##}%", new { @class = "form-control", @id = @name18, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            </td>
                                                        }

                                                        else if (User.IsInRole("Admin") && IsAdminSaved)
                                                        {
                                                            <td style="background-color:whitesmoke;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(Count, (details != null && details.ACAndBWPropRECurrFin != Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(details.ACAndBWPropRENxtFin.ToString("F4")) - Convert.ToDecimal(details.ACAndBWPropRECurrFin.ToString("F4"))) / Convert.ToDecimal(details.ACAndBWPropRECurrFin.ToString("F4"))) * 100) : (0).ToString("F2"));
                                                                    }

                                                                    @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count], "{0:#.##}%", new { @class = "form-control", @id = @name18, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            </td>
                                                        }
                                                        else if (User.IsInRole("Admin") && !IsAdminSaved)
                                                        {
                                                            <td style="background-color:whitesmoke;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(Count, (PrevYearApp != null && PrevYearApp.BudEstNextFin != Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F4")) - Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F4"))) / Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F4"))) * 100) : (0).ToString("F2"));
                                                                    }

                                                                    @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count], "{0:#.##}%", new { @class = "form-control", @id = @name18, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(Count, (0).ToString("F2"));
                                                        }
                                                        @if (User.IsInRole("Admin") && AdminEditStatus && !@Subs.RequireInput && (!IsAdminSaved || (Model.EditEnabled == @Subs.SubGroupNo)))
                                                        {
                                                            <td style="background-color:whitesmoke;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ACBWJustificationBudgEstNxtFin.Insert(Count, details != null && details.ACBWJustificationBudgEstNxtFin != null && details.ACBWJustificationBudgEstNxtFin != " " ? details.ACBWJustificationBudgEstNxtFin.ToString() : " ");
                                                                    }

                                                                    @Html.TextBoxFor(model => model.ACBWJustificationBudgEstNxtFin[Count], new { @class = "form-control", @id = @name16 })
                                                                    @Html.ValidationMessageFor(model => model.ACBWJustificationBudgEstNxtFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            </td>
                                                        }
                                                        else if ((User.IsInRole("Admin") && (!AdminEditStatus || IsAdminSaved) && !@Subs.RequireInput) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                        {
                                                            <td style="background-color:whitesmoke;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ACBWJustificationBudgEstNxtFin.Insert(Count, details != null && details.ACBWJustificationBudgEstNxtFin != null && details.ACBWJustificationBudgEstNxtFin != " " ? details.ACBWJustificationBudgEstNxtFin.ToString() : "");
                                                                    }

                                                                    @Html.TextBoxFor(model => model.ACBWJustificationBudgEstNxtFin[Count], new { @class = "form-control", @id = @name16, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ACBWJustificationBudgEstNxtFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            </td>
                                                        }
                                                        else if (User.IsInRole("Admin") && (DelegateEditStatus || @Subs.RequireInput))
                                                        {
                                                            <td style="background-color:whitesmoke;">
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ACBWJustificationBudgEstNxtFin.Insert(Count, "");
                                                                    }

                                                                    @Html.TextBoxFor(model => model.ACBWJustificationBudgEstNxtFin[Count], new { @class = "form-control", @id = @name16, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ACBWJustificationBudgEstNxtFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            Model.ACBWJustificationBudgEstNxtFin.Insert(Count, " ");
                                                        }
                                                        <td style="background-color:honeydew;">

                                                            @if (!@Subs.RequireInput)
                                                            {
                                                                <table class="table">
                                                                    <thead> </thead>
                                                                    <tbody>
                                                                        @if (!User.IsInRole("Admin") && GroupsStatusRowCount == 0 && Model.IsEnabled.Equals(true) && (!IsDelegateSaved || Model.EditEnabled == @Subs.SubGroupNo))
                                                                        {
                                                                            <tr><td style="border:none"> @Html.TextBoxFor(m => m.File, new { type = "file", @id = @name11 })</td></tr>
                                                                            <tr><td style="border:none"> @Html.ValidationMessage("Caution" + Count, "* only .pdf files with size 1 MB are allowed", new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })</td></tr>
                                                                            <tr><td style="border:none"> @Html.ValidationMessage("FileMessage_" + Count, null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })</td></tr>
                                                                            <br />
                                                                            <tr><td style="border:none"><input id="@upload" class="Submit" formaction="~/Tabs/Upload" type="submit" value="Upload" /></td></tr>
                                                                        }

                                                                        @foreach (var Files in Model.Filess.Where(a => a.SubGroupNumber.Equals(@Subs.SubGroupNo)))
                                                                        {
                                                                            var FinalSubmitStatus = (from a in Model.Statuss where (a.SectionNumber == 0 && a.GroupNumber.Equals("0")) select a.AdminEditStatus).Count();
                                                                            <tr>
                                                                                @if ((User.IsInRole("Admin") && AdminEditStatus) || !User.IsInRole("Admin") || (User.IsInRole("Admin") && FinalSubmitStatus > 0))
                                                                                {
                                                                                    <td style="border:none">@Html.ActionLink(@Files.FileName, null, null, null, new { href = @Files.SupportingDocumentPath, target = "_blank" })</td>
                                                                                    /*<td><input id="@view" class="ViewFile  btn-link" style="border:none; outline:none;  background-color: transparent;" formaction="~/Tabs/ViewFile" type="submit" value= "@Files.FileName" /></td>*/
                                                                                }
                                                                                @if (!User.IsInRole("Admin") && GroupsStatusRowCount == 0 && !IsDelegateSaved)
                                                                                {
                                                                                    <td style="border:none"><input id="@delete" class="Submit  btn-link" style="border:none; outline:none;  background-color: transparent;" formaction="~/Tabs/Delete" type="submit" value="Delete" /></td>
                                                                                }
                                                                            </tr>

                                                                        }
                                                                    </tbody>
                                                                </table>
                                                            }
                                                        </td>
                                                        <td style="background-color:honeydew;">
                                                            @if ((!User.IsInRole("Admin") && !@Subs.RequireInput && DelegateEditStatus && (!IsDelegateSaved || Model.EditEnabled == @Subs.SubGroupNo)) || (User.IsInRole("Admin") && !@Subs.RequireInput && AdminEditStatus && (!IsAdminSaved || (Model.EditEnabled == @Subs.SubGroupNo))))
                                                            {
                                                                <button style="border:none;background-color:white" id="@save" class="Submit" formaction="~/Tabs/Save" type="submit" value="Save Budget" style="align-self:center">
                                                                    <i class='bx bx-check' style="color:limegreen"></i>
                                                                </button>
                                                            }
                                                            @if ((!User.IsInRole("Admin") && IsDelegateSaved && !@Subs.RequireInput && DelegateEditStatus && (Model.EditEnabled != @Subs.SubGroupNo)) || (User.IsInRole("Admin") && IsAdminSaved && !@Subs.RequireInput && AdminEditStatus && (Model.EditEnabled != @Subs.SubGroupNo)))
                                                            {
                                                                <button style="border:none;background-color:white" id="@edit" class="Submit" formaction="~/Tabs/Edit" type="submit" value="Edit Budget" style="align-self:center">
                                                                    <i class='bx bxs-pencil' style="color:blue"></i>
                                                                </button>
                                                            }
                                                            @if ((!User.IsInRole("Admin") && !@Subs.RequireInput && DelegateEditStatus && (IsDelegateSaved || (Model.EditEnabled == @Subs.SubGroupNo))) || (User.IsInRole("Admin") && !@Subs.RequireInput && AdminEditStatus && (IsAdminSaved || (Model.EditEnabled == @Subs.SubGroupNo))))
                                                            {
                                                                <button style="border:none;background-color:white" id="@Budgetdelete" class="Submit" formaction="~/Tabs/BudgetDelete" type="submit" value="Delete Budget" style="align-self:center">
                                                                    <i class='bx bx-x' style="color:red"></i>
                                                                </button>
                                                            }
                                                        </td>
                                                    </tr>

                                                    @if (LedgerCount > 0)
                                                    {
                                                        LedgerNo = ++Count;
                                                        @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                                                        {

                                                            var Ledgerdetails = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a).FirstOrDefault();
                                                            var LedPrevYearApp = (from a in Model.Approved where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a).FirstOrDefault();

                                                            Boolean LedgerIsDelegateSaved = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.HasDelegateSaved).FirstOrDefault();
                                                            Boolean LedgerIsAdminSaved = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.HasAdminSaved).FirstOrDefault();

                                                            <tr>
                                                                <!--td></td -->
                                                                <td style="background-color:honeydew;"></td>
                                                                <td style="background-color:honeydew;">
                                                                    @{
                                                                        Model.SubGroupNameOrLedgerName.Insert(LedgerNo, Ledgers.LedgerNo);
                                                                    }

                                                                    @Html.DisplayFor(model => model.SubGroupNameOrLedgerName[LedgerNo])


                                                                    @Html.HiddenFor(model => model.SubGroupNameOrLedgerName[LedgerNo])
                                                                </td>
                                                                <td style="background-color:honeydew;">@Ledgers.LedgerName</td>
                                                                <td style="background-color: floralwhite;">

                                                                    @if ((!DelegateEditStatus && IsSubmittedToACBW) || (!User.IsInRole("Admin") && LedgerIsDelegateSaved))
                                                                    {
                                                                        <div class="form-group">

                                                                            @{
                                                                                Model.BudEstCurrFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.BudEstCurrFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }
                                                                            @Html.TextBoxFor(model => model.BudEstCurrFin[LedgerNo], new { @class = "form-control", id = @name1 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.BudEstCurrFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>

                                                                    }
                                                                    else
                                                                    {
                                                                        <div class="form-group">
                                                                            @{
                                                                                Model.BudEstCurrFin.Insert(LedgerNo, LedPrevYearApp != null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }
                                                                            @Html.TextBoxFor(model => model.BudEstCurrFin[LedgerNo], new { @class = "form-control", @id = @name1 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.BudEstCurrFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>
                                                                    }
                                                                </td>
                                                                <td style="background-color: floralwhite;">
                                                                    <div class="form-group">
                                                                        @{
                                                                            Model.InterimRevEst.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.InterimRevEst.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                        }
                                                                        @Html.TextBoxFor(model => model.InterimRevEst[LedgerNo], new { @class = "form-control", @id = @name12 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                        @Html.ValidationMessageFor(model => model.InterimRevEst[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                    </div>
                                                                </td>
                                                                <td style="background-color: floralwhite;">
                                                                    <div class="form-group">
                                                                        @{
                                                                            Model.ProvisionalRevEst.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ProvisionalRevEst.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                        }
                                                                        @Html.TextBoxFor(model => model.ProvisionalRevEst[LedgerNo], new { @class = "form-control", @id = @name13 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                        @Html.ValidationMessageFor(model => model.ProvisionalRevEst[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                    </div>
                                                                </td>
                                                                <td style="background-color: aliceblue;">
                                                                    @if ((!DelegateEditStatus) || (!User.IsInRole("Admin") && LedgerIsDelegateSaved && Model.EditEnabled != @Ledgers.LedgerNo))
                                                                    {
                                                                        <div class="form-group">
                                                                            @{
                                                                                Model.ActPrevFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ActPrevFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }
                                                                            @Html.TextBoxFor(model => model.ActPrevFin[LedgerNo], new { @class = "form-control", @id = @name2 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.ActPrevFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>
                                                                    }
                                                                    else if (DelegateEditStatus && User.IsInRole("Admin"))
                                                                    {
                                                                        <div class="form-group">
                                                                            @{
                                                                                Model.ActPrevFin.Insert(LedgerNo, Convert.ToDecimal(0.00));
                                                                            }
                                                                            @Html.TextBoxFor(model => model.ActPrevFin[LedgerNo], new { @class = "form-control", @id = @name2 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.ActPrevFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>
                                                                    }
                                                                    else
                                                                    {
                                                                        <div class="form-group">
                                                                            @{
                                                                                Model.ActPrevFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ActPrevFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }
                                                                            @Html.TextBoxFor(model => model.ActPrevFin[LedgerNo], new { @class = "form-control", @id = @name2 + @Ledgers.LedgerNo, @dir = "rtl" })
                                                                            @Html.ValidationMessageFor(model => model.ActPrevFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>

                                                                    }
                                                                </td>
                                                                <td style="background-color: aliceblue;">
                                                                    @if ((!DelegateEditStatus) || (!User.IsInRole("Admin") && LedgerIsDelegateSaved && Model.EditEnabled != @Ledgers.LedgerNo))
                                                                    {
                                                                        <div class="form-group">
                                                                            @{
                                                                                Model.ActCurrFinTillsecondQuart.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ActCurrFinTill2ndQuart.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }
                                                                            @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[LedgerNo], new { @class = "form-control", @id = @name3 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>
                                                                    }
                                                                    else if (DelegateEditStatus && User.IsInRole("Admin"))
                                                                    {
                                                                        <div class="form-group">
                                                                            @{
                                                                                Model.ActCurrFinTillsecondQuart.Insert(LedgerNo, Convert.ToDecimal(0.00));
                                                                            }
                                                                            @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[LedgerNo], new { @class = "form-control", @id = @name3 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>
                                                                    }
                                                                    else
                                                                    {
                                                                        <div class="form-group">
                                                                            @{
                                                                                Model.ActCurrFinTillsecondQuart.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ActCurrFinTill2ndQuart.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }
                                                                            @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[LedgerNo], new { @class = "form-control", @id = @name3 + @Ledgers.LedgerNo, @dir = "rtl" })
                                                                            @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>
                                                                    }
                                                                </td>
                                                                <td style="background-color: aliceblue;">
                                                                    @if (User.IsInRole("Admin") && DelegateEditStatus)
                                                                    {
                                                                        <div class="form-group">
                                                                            @{
                                                                                Model.RevEstCurrFin.Insert(LedgerNo, LedPrevYearApp != null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }
                                                                            @Html.TextBoxFor(model => model.RevEstCurrFin[LedgerNo], new { @type = "number", @class = "form-control", @id = @name4 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.RevEstCurrFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>
                                                                    }
                                                                    else if (!DelegateEditStatus || (!User.IsInRole("Admin") && LedgerIsDelegateSaved && Model.EditEnabled != @Ledgers.LedgerNo))
                                                                    {
                                                                        <div class="form-group">
                                                                            @{
                                                                                Model.RevEstCurrFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.RevEstCurrFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }
                                                                            @Html.TextBoxFor(model => model.RevEstCurrFin[LedgerNo], new { @class = "form-control", @id = @name4 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.RevEstCurrFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>
                                                                    }

                                                                    else
                                                                    {
                                                                        <div class="form-group">
                                                                            @if (Ledgerdetails != null && !@Ledgerdetails.ProvisionalRevEst.Equals(Convert.ToDecimal(0.00)) && !LedgerIsDelegateSaved)
                                                                            {
                                                                                Model.RevEstCurrFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ProvisionalRevEst.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }
                                                                            else
                                                                            {
                                                                                Model.RevEstCurrFin.Insert(LedgerNo, LedPrevYearApp != null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }
                                                                            @Html.TextBoxFor(model => model.RevEstCurrFin[LedgerNo], new { @class = "form-control", @id = @name4 + @Ledgers.LedgerNo, @dir = "rtl" })
                                                                            @Html.ValidationMessageFor(model => model.RevEstCurrFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>
                                                                    }
                                                                </td>
                                                                <td style="background-color: aliceblue;">
                                                                    @if (!DelegateEditStatus || (!User.IsInRole("Admin") && LedgerIsDelegateSaved))
                                                                    {
                                                                        <div class="form-group">
                                                                            @{
                                                                                Model.PerVarRevEstOverBudgEstCurrFin.Insert(LedgerNo, (Ledgerdetails != null && Ledgerdetails.BudEstCurrFin != Convert.ToDecimal(0.0000)) ? (Convert.ToString(((Convert.ToDecimal(Convert.ToDecimal(Ledgerdetails.RevEstCurrFin.ToString("F4")) - Convert.ToDecimal(Ledgerdetails.BudEstCurrFin.ToString("F4"))) / Convert.ToDecimal(Ledgerdetails.BudEstCurrFin.ToString("F4")))) * 100)) : (0).ToString("F2"));
                                                                            }
                                                                            @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstCurrFin[LedgerNo], "{0:#.##}%", new { @class = "form-control", @id = @name5 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstCurrFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>
                                                                    }
                                                                    else
                                                                    {
                                                                        <div class="form-group">
                                                                            @{
                                                                                Model.PerVarRevEstOverBudgEstCurrFin.Insert(LedgerNo, (LedPrevYearApp != null && LedPrevYearApp.BudEstNextFin != Convert.ToDecimal(0.0000)) ? (Convert.ToString(((Convert.ToDecimal(Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")) - Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4"))) / Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")))) * 100)) : (0).ToString("F2"));
                                                                            }
                                                                            @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstCurrFin[LedgerNo], "{0:#.##}%", new { @class = "form-control", @id = @name5 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstCurrFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>
                                                                    }
                                                                </td>

                                                                <td style="background-color: aliceblue;">
                                                                    @if (!DelegateEditStatus || (!User.IsInRole("Admin") && LedgerIsDelegateSaved) && Model.EditEnabled != @Ledgers.LedgerNo)
                                                                    {
                                                                        <div class="form-group">
                                                                            @{
                                                                                Model.DelegateJustificationRevEst.Insert(LedgerNo, (Ledgerdetails != null && Ledgerdetails.DelegateJustificationRevEst != null) ? Ledgerdetails.DelegateJustificationRevEst.ToString() : "");
                                                                            }
                                                                            @Html.TextAreaFor(model => model.DelegateJustificationRevEst[LedgerNo], new { @class = "form-control", @id = @name14 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.DelegateJustificationRevEst[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>

                                                                    }
                                                                    else if (User.IsInRole("Admin") && DelegateEditStatus)
                                                                    {
                                                                        <div class="form-group">
                                                                            @{
                                                                                Model.DelegateJustificationRevEst.Insert(LedgerNo, "");
                                                                            }
                                                                            @Html.TextAreaFor(model => model.DelegateJustificationRevEst[LedgerNo], new { @class = "form-control", @id = @name14 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.DelegateJustificationRevEst[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>
                                                                    }
                                                                    else
                                                                    {
                                                                        <div class="form-group">
                                                                            @{
                                                                                Model.DelegateJustificationRevEst.Insert(LedgerNo, (Ledgerdetails != null && Ledgerdetails.DelegateJustificationRevEst != null) ? Ledgerdetails.DelegateJustificationRevEst.ToString() : "");
                                                                            }
                                                                            @Html.TextAreaFor(model => model.DelegateJustificationRevEst[LedgerNo], new { @class = "form-control", @id = @name14 + @Ledgers.LedgerNo, @dir = "rtl" })
                                                                            @Html.ValidationMessageFor(model => model.DelegateJustificationRevEst[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>

                                                                    }
                                                                </td>
                                                                @if (User.IsInRole("Admin") && AdminEditStatus && (!LedgerIsAdminSaved || Model.EditEnabled == @Ledgers.LedgerNo))
                                                                {
                                                                    <td style="background-color: aliceblue;">
                                                                        <div class="form-group">
                                                                            @{
                                                                                Model.ACAndBWPropRECurrFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ACAndBWPropRECurrFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }

                                                                            @Html.TextBoxFor(model => model.ACAndBWPropRECurrFin[LedgerNo], new { @class = "form-control", @id = @name6 + @Ledgers.LedgerNo, @dir = "rtl" })
                                                                            @Html.ValidationMessageFor(model => model.ACAndBWPropRECurrFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>
                                                                    </td>
                                                                }
                                                                else if ((User.IsInRole("Admin") && !AdminEditStatus) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0) || (User.IsInRole("Admin") && LedgerIsAdminSaved))
                                                                {
                                                                    <td style="background-color: aliceblue;">
                                                                        <div class="form-group">
                                                                            @{
                                                                                Model.ACAndBWPropRECurrFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ACAndBWPropRECurrFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }

                                                                            @Html.TextBoxFor(model => model.ACAndBWPropRECurrFin[LedgerNo], new { @class = "form-control", @id = @name6 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.ACAndBWPropRECurrFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>
                                                                    </td>
                                                                }
                                                                else
                                                                {
                                                                    Model.ACAndBWPropRECurrFin.Insert(LedgerNo, Convert.ToDecimal(0.00));
                                                                }

                                                                @if (User.IsInRole("Admin") && LedgerIsAdminSaved)
                                                                {
                                                                    <td style="background-color: aliceblue;">
                                                                        <div class="form-group">
                                                                            @{
                                                                                Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(LedgerNo, (Ledgerdetails != null && Ledgerdetails.BudEstCurrFin != Convert.ToDecimal(0.0000)) ? (Convert.ToString(((Convert.ToDecimal(Convert.ToDecimal(Ledgerdetails.ACAndBWPropRECurrFin.ToString("F4")) - Convert.ToDecimal(Ledgerdetails.BudEstCurrFin.ToString("F4"))) / Convert.ToDecimal(Ledgerdetails.BudEstCurrFin.ToString("F4")))) * 100)) : (0).ToString("F2"));
                                                                            }
                                                                            @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[LedgerNo], "{0:#.##}%", new { @class = "form-control", @id = @name17 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>
                                                                    </td>


                                                                }
                                                                else if (User.IsInRole("Admin") && !LedgerIsAdminSaved)
                                                                {
                                                                    <td style="background-color: aliceblue;">
                                                                        <div class="form-group">
                                                                            @{
                                                                                Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(LedgerNo, (LedPrevYearApp != null && LedPrevYearApp.BudEstNextFin != Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")) - Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4"))) / Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4"))) * 100) : (0).ToString("F2"));
                                                                            }
                                                                            @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[LedgerNo], "{0:#.##}%", new { @class = "form-control", @id = @name17 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>
                                                                    </td>
                                                                }
                                                                else
                                                                {
                                                                    Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(LedgerNo, (0).ToString("F2"));
                                                                }


                                                                @if (User.IsInRole("Admin") && AdminEditStatus && (!LedgerIsAdminSaved || (Model.EditEnabled == @Ledgers.LedgerNo)))
                                                                {
                                                                    <td style="background-color: aliceblue;">
                                                                        <div class="form-group">
                                                                            @{
                                                                                Model.ACBWJustificationRevEst.Insert(LedgerNo, Ledgerdetails != null && Ledgerdetails.ACBWJustificationRevEst != null && Ledgerdetails.ACBWJustificationRevEst != " " ? Ledgerdetails.ACBWJustificationRevEst.ToString() : " ");
                                                                            }

                                                                            @Html.TextBoxFor(model => model.ACBWJustificationRevEst[LedgerNo], new { @class = "form-control", @id = @name15 + @Ledgers.LedgerNo, @dir = "rtl" })
                                                                            @Html.ValidationMessageFor(model => model.ACBWJustificationRevEst[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>
                                                                    </td>
                                                                }
                                                                else if ((User.IsInRole("Admin") && (!AdminEditStatus || LedgerIsAdminSaved)) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                                {
                                                                    <td style="background-color: aliceblue;">
                                                                        <div class="form-group">
                                                                            @{
                                                                                Model.ACBWJustificationRevEst.Insert(LedgerNo, Ledgerdetails != null && Ledgerdetails.ACBWJustificationRevEst != null && Ledgerdetails.ACBWJustificationRevEst != " " ? Ledgerdetails.ACBWJustificationRevEst.ToString() : "");
                                                                            }

                                                                            @Html.TextBoxFor(model => model.ACBWJustificationRevEst[LedgerNo], new { @class = "form-control", @id = @name15 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.ACBWJustificationRevEst[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>
                                                                    </td>
                                                                }
                                                                else
                                                                {
                                                                    Model.ACBWJustificationRevEst.Insert(LedgerNo, " ");
                                                                }
                                                                <td style="background-color:whitesmoke;">
                                                                    @if (User.IsInRole("Admin") && DelegateEditStatus)
                                                                    {
                                                                        <div class="form-group">
                                                                            @{
                                                                                Model.BudgEstNexFin.Insert(LedgerNo, LedPrevYearApp != null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }

                                                                            @Html.TextBoxFor(model => model.BudgEstNexFin[LedgerNo], new { @class = "form-control", @id = @name7 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.BudgEstNexFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>

                                                                    }
                                                                    else if (!DelegateEditStatus || (!User.IsInRole("Admin") && LedgerIsDelegateSaved && Model.EditEnabled != @Ledgers.LedgerNo))
                                                                    {
                                                                        <div class="form-group">
                                                                            @{
                                                                                Model.BudgEstNexFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.BudgEstNexFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }

                                                                            @Html.TextBoxFor(model => model.BudgEstNexFin[LedgerNo], new { @class = "form-control", @id = @name7 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.BudgEstNexFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>

                                                                    }
                                                                    else
                                                                    {
                                                                        <div class="form-group">
                                                                            @if (Ledgerdetails != null && !@Ledgerdetails.ProvisionalRevEst.Equals(Convert.ToDecimal(0.00)) && !LedgerIsDelegateSaved)
                                                                            {
                                                                                Model.BudgEstNexFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ProvisionalRevEst.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }
                                                                            else
                                                                            {
                                                                                Model.BudgEstNexFin.Insert(LedgerNo, LedPrevYearApp != null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }
                                                                            @Html.TextBoxFor(model => model.BudgEstNexFin[LedgerNo], new { @class = "form-control", @id = @name7 + @Ledgers.LedgerNo, @dir = "rtl" })
                                                                            @Html.ValidationMessageFor(model => model.BudgEstNexFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>

                                                                    }
                                                                </td>
                                                                <td style="background-color:whitesmoke;">
                                                                    @if ((User.IsInRole("Admin") && (!AdminEditStatus || LedgerIsAdminSaved)))
                                                                    {
                                                                        <div class="form-group">

                                                                            @{
                                                                                Model.PerVarRevEstOverBudgEstNxtFin.Insert(LedgerNo, (Ledgerdetails != null && Ledgerdetails.RevEstCurrFin != Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(Ledgerdetails.BudgEstNexFin.ToString("F4")) - Convert.ToDecimal(Ledgerdetails.RevEstCurrFin.ToString("F4"))) / Convert.ToDecimal(Ledgerdetails.RevEstCurrFin.ToString("F4"))) * 100) : (0).ToString("F2"));
                                                                            }

                                                                            @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstNxtFin[LedgerNo], "{0:#.##}%", new { @class = "form-control", @id = @name8 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstNxtFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>

                                                                    }
                                                                    else
                                                                    {
                                                                        <div class="form-group">
                                                                            @{
                                                                                Model.PerVarRevEstOverBudgEstNxtFin.Insert(LedgerNo, (LedPrevYearApp != null && LedPrevYearApp.BudEstNextFin != Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")) - Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4"))) / Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4"))) * 100) : (0).ToString("F2"));
                                                                            }
                                                                            @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstNxtFin[LedgerNo], "{0:#.##}%", new { @class = "form-control", @id = @name8 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstNxtFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>

                                                                    }
                                                                </td>
                                                                <td style="background-color:whitesmoke;">
                                                                    @if (!DelegateEditStatus || (!User.IsInRole("Admin") && LedgerIsDelegateSaved && Model.EditEnabled != @Ledgers.LedgerNo))
                                                                    {
                                                                        <div class="form-group">
                                                                            @{
                                                                                Model.Justification.Insert(LedgerNo, (Ledgerdetails != null && Ledgerdetails.Justification != null) ? Ledgerdetails.Justification.ToString() : "");
                                                                            }
                                                                            @Html.TextAreaFor(model => model.Justification[LedgerNo], new { @class = "form-control", @id = @name10 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.Justification[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>

                                                                    }
                                                                    else if (User.IsInRole("Admin") && DelegateEditStatus)
                                                                    {
                                                                        <div class="form-group">
                                                                            @{
                                                                                Model.Justification.Insert(LedgerNo, "");
                                                                            }
                                                                            @Html.TextAreaFor(model => model.Justification[LedgerNo], new { @class = "form-control", @id = @name10 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.Justification[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>
                                                                    }
                                                                    else
                                                                    {
                                                                        <div class="form-group">
                                                                            @{
                                                                                Model.Justification.Insert(LedgerNo, (Ledgerdetails != null && Ledgerdetails.Justification != null) ? Ledgerdetails.Justification.ToString() : "");
                                                                            }
                                                                            @Html.TextAreaFor(model => model.Justification[LedgerNo], new { @class = "form-control", @id = @name10 + @Ledgers.LedgerNo, @dir = "rtl" })
                                                                            @Html.ValidationMessageFor(model => model.Justification[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>

                                                                    }
                                                                </td>
                                                                @if (User.IsInRole("Admin") && AdminEditStatus && (!LedgerIsAdminSaved || (Model.EditEnabled == @Ledgers.LedgerNo)))
                                                                {
                                                                    <td style="background-color:whitesmoke;">
                                                                        <div class="form-group">
                                                                            @{
                                                                                Model.ACAndBWPropRENxtFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ACAndBWPropRENxtFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }
                                                                            @Html.TextBoxFor(model => model.ACAndBWPropRENxtFin[LedgerNo], new { @class = "form-control", @id = @name9 + @Ledgers.LedgerNo, @dir = "rtl" })
                                                                            @Html.ValidationMessageFor(model => model.ACAndBWPropRENxtFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>

                                                                    </td>
                                                                }
                                                                else if ((User.IsInRole("Admin") && (!AdminEditStatus || LedgerIsAdminSaved)) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                                {
                                                                    <td style="background-color:whitesmoke;">
                                                                        <div class="form-group">
                                                                            @{
                                                                                Model.ACAndBWPropRENxtFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ACAndBWPropRENxtFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }
                                                                            @Html.TextBoxFor(model => model.ACAndBWPropRENxtFin[LedgerNo], new { @class = "form-control", @id = @name9 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.ACAndBWPropRENxtFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>

                                                                    </td>
                                                                }
                                                                else
                                                                {
                                                                    Model.ACAndBWPropRENxtFin.Insert(LedgerNo, Convert.ToDecimal(0.00));
                                                                }

                                                                @if ((User.IsInRole("Admin") && LedgerIsAdminSaved) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                                {
                                                                    <td style="background-color:whitesmoke;">
                                                                        <div class="form-group">

                                                                            @{
                                                                                Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(LedgerNo, (Ledgerdetails != null && Ledgerdetails.ACAndBWPropRECurrFin != Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(Ledgerdetails.ACAndBWPropRENxtFin.ToString("F4")) - Convert.ToDecimal(Ledgerdetails.ACAndBWPropRECurrFin.ToString("F4"))) / Convert.ToDecimal(Ledgerdetails.ACAndBWPropRECurrFin.ToString("F4"))) * 100) : (0).ToString("F2"));
                                                                            }

                                                                            @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[LedgerNo], "{0:#.##}%", new { @class = "form-control", @id = @name18 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>
                                                                    </td>

                                                                }
                                                                else if (User.IsInRole("Admin") && !LedgerIsAdminSaved)
                                                                {
                                                                    <td style="background-color:whitesmoke;">
                                                                        <div class="form-group">
                                                                            @{
                                                                                Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(LedgerNo, (LedPrevYearApp != null && LedPrevYearApp.BudEstNextFin != Convert.ToDecimal(0.0000)) ? Convert.ToString(((Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")) - Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4"))) / Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4"))) * 100) : (0).ToString("F2"));
                                                                            }
                                                                            @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[LedgerNo], "{0:#.##}%", new { @class = "form-control", @id = @name18 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>
                                                                    </td>
                                                                }
                                                                else
                                                                {
                                                                    Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(LedgerNo, (0).ToString("F2"));
                                                                }

                                                                @if (User.IsInRole("Admin") && AdminEditStatus && (!LedgerIsAdminSaved || (Model.EditEnabled == @Ledgers.LedgerNo)))
                                                                {
                                                                    <td style="background-color:whitesmoke;">
                                                                        <div class="form-group">
                                                                            @{
                                                                                Model.ACBWJustificationBudgEstNxtFin.Insert(LedgerNo, Ledgerdetails != null && Ledgerdetails.ACBWJustificationBudgEstNxtFin != null && Ledgerdetails.ACBWJustificationBudgEstNxtFin != " " ? Ledgerdetails.ACBWJustificationBudgEstNxtFin.ToString() : " ");
                                                                            }

                                                                            @Html.TextAreaFor(model => model.ACBWJustificationBudgEstNxtFin[LedgerNo], new { @class = "form-control", @id = @name16 + @Ledgers.LedgerNo, @dir = "rtl" })
                                                                            @Html.ValidationMessageFor(model => model.ACBWJustificationBudgEstNxtFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>
                                                                    </td>
                                                                }
                                                                else if ((User.IsInRole("Admin") && (!AdminEditStatus || LedgerIsAdminSaved)) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                                {
                                                                    <td style="background-color:whitesmoke;">
                                                                        <div class="form-group">
                                                                            @{
                                                                                Model.ACBWJustificationBudgEstNxtFin.Insert(LedgerNo, Ledgerdetails != null && Ledgerdetails.ACBWJustificationBudgEstNxtFin != null && Ledgerdetails.ACBWJustificationBudgEstNxtFin != " " ? Ledgerdetails.ACBWJustificationBudgEstNxtFin.ToString() : "");
                                                                            }

                                                                            @Html.TextAreaFor(model => model.ACBWJustificationBudgEstNxtFin[LedgerNo], new { @class = "form-control", @id = @name16 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.ACBWJustificationBudgEstNxtFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>
                                                                    </td>
                                                                }
                                                                else
                                                                {
                                                                    Model.ACBWJustificationBudgEstNxtFin.Insert(LedgerNo, " ");
                                                                }
                                                                <td style="background-color:honeydew;">
                                                                    <table class="table">
                                                                        <thead> </thead>
                                                                        <tbody>
                                                                            @if ((!User.IsInRole("Admin") && GroupsStatusRowCount == 0 && Model.IsEnabled.Equals(true) && (!LedgerIsDelegateSaved || Model.EditEnabled == @Ledgers.LedgerNo)))
                                                                            {
                                                                                <tr><td style="border:none"> @Html.TextBoxFor(m => m.File, new { type = "file", @id = @name11 + @Ledgers.LedgerNo, @dir = "rtl" })</td> </tr>
                                                                                <tr><td style="border:none"> @Html.ValidationMessage("Caution" + LedgerNo, "* only .pdf files with size 1 MB are allowed", new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })</td></tr>
                                                                                <tr><td style="border:none"> @Html.ValidationMessage("FileMessage_" + LedgerNo, null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })</td></tr>
                                                                                <br />
                                                                                <tr><td style="border:none"> <input id="@upload@Ledgers.LedgerNo" class="Submit" formaction="~/Tabs/Upload" type="submit" value="Upload" /></td> </tr>
                                                                            }

                                                                            @foreach (var LedgerFiles in Model.Filess.Where(a => (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo))))
                                                                            {
                                                                                var FinalSubmitStatus = (from a in Model.Statuss where (a.SectionNumber == 0 && a.GroupNumber.Equals("0")) select a.AdminEditStatus).Count();
                                                                                <tr>
                                                                                    @if ((User.IsInRole("Admin") && AdminEditStatus) || !User.IsInRole("Admin") || (User.IsInRole("Admin") && (FinalSubmitStatus > 0)))
                                                                                    {
                                                                                        <td style="border:none">@Html.ActionLink(@LedgerFiles.FileName, null, null, null, new { href = @LedgerFiles.SupportingDocumentPath, target = "_blank" })</td>
                                                                                        /*<td><input id="@view" class="ViewFile  btn-link" style="border:none; outline:none;  background-color: transparent;" formaction="~/Tabs/ViewFile" type="submit" value= "@LedgerFiles.FileName" /></td>*/
                                                                                    }
                                                                                    @if (!User.IsInRole("Admin") && GroupsStatusRowCount == 0 && !LedgerIsDelegateSaved)
                                                                                    {
                                                                                        <td style="border:none"><input id="@delete@Ledgers.LedgerNo" class="Submit btn-link" style="border:none; outline:none;  background-color: transparent;" formaction="~/Tabs/Delete" type="submit" value="Delete" /> </td>
                                                                                    }
                                                                                </tr>

                                                                            }
                                                                        </tbody>
                                                                    </table>
                                                                </td>
                                                                <td style="background-color:honeydew;">
                                                                    @if ((!User.IsInRole("Admin") && DelegateEditStatus && (!LedgerIsDelegateSaved || Model.EditEnabled == @Ledgers.LedgerNo)) || (User.IsInRole("Admin") && AdminEditStatus && (!LedgerIsAdminSaved || (Model.EditEnabled == @Ledgers.LedgerNo))))
                                                                    {

                                                                        <button style="border:none;background-color:white" id="@save" class="Submit" formaction="~/Tabs/Save" type="submit" value="Save Budget" style="align-self:center">
                                                                            <i class='bx bx-check' style="color:limegreen"></i>
                                                                        </button>
                                                                    }
                                                                    @if ((!User.IsInRole("Admin") && LedgerIsDelegateSaved && DelegateEditStatus && (Model.EditEnabled != @Ledgers.LedgerNo)) || (User.IsInRole("Admin") && LedgerIsAdminSaved && AdminEditStatus && (Model.EditEnabled != @Ledgers.LedgerNo)))
                                                                    {
                                                                        <button style="border:none;background-color:white" id="@edit" class="Submit" formaction="~/Tabs/Edit" type="submit" value="Edit Budget" style="align-self:center">
                                                                            <i class='bx bxs-pencil' style="color:blue"></i>
                                                                        </button>
                                                                    }
                                                                    @if ((!User.IsInRole("Admin") && DelegateEditStatus && (LedgerIsDelegateSaved || Model.EditEnabled == @Ledgers.LedgerNo)) || (User.IsInRole("Admin") && AdminEditStatus && (LedgerIsAdminSaved || (Model.EditEnabled == @Ledgers.LedgerNo))))
                                                                    {
                                                                        <button style="border:none;background-color:white" id="@Budgetdelete" class="Submit" formaction="~/Tabs/BudgetDelete" type="submit" value="Delete Budget" style="align-self:center">
                                                                            <i class='bx bx-x' style="color:red"></i>
                                                                        </button>
                                                                    }
                                                                </td>
                                                            </tr>

                                                            ++LedgerNo;
                                                        }

                                                        Count = LedgerNo - 1;
                                                    }

                                                    Count++;
                                                    TableCount++;
                                                }
                                                <tr>
                                                    <!--td>
                                                    </td-->
                                                    <td>
                                                    </td>
                                                    <td>
                                                        Sub-Total
                                                    </td>
                                                    <td>
                                                        Sub-Total
                                                    </td>

                                                    <td id="@Sumname1-Total">
                                                        @SumBudEstCurrFin.ToString("F4")
                                                    </td>
                                                    <td></td>

                                                    <td></td>

                                                    @if ((User.IsInRole("Admin") && IsSubmittedToACBW) || !User.IsInRole("Admin"))
                                                    {
                                                        <td id="@Sumname2-Total">
                                                            @SumActPrevFin.ToString("F4")
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td id="@Sumname2-Total">
                                                            0.00
                                                        </td>
                                                    }
                                                    @if ((User.IsInRole("Admin") && IsSubmittedToACBW) || !User.IsInRole("Admin"))
                                                    {
                                                        <td id="@Sumname3-Total">
                                                            @SumActCurrFinTill2ndQuart.ToString("F4")
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td id="@Sumname3-Total">
                                                            0.00
                                                        </td>
                                                    }
                                                    @if ((User.IsInRole("Admin") && IsSubmittedToACBW) || !User.IsInRole("Admin"))
                                                    {
                                                        <td id="@Sumname4-Total">
                                                            @SumRevEstCurrFin.ToString("F4")
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td id="@Sumname4-Total">
                                                            0.00
                                                        </td>
                                                    }
                                                    <td id="@Sumname5-Total">
                                                        @SumPerVarRevEstOverBudgEstCurrFin.ToString("F2") %
                                                    </td>
                                                    <td></td>
                                                    @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                    {
                                                        <td id="@Sumname6-Total">
                                                            @SumACAndBWPropRECurrFin.ToString("F4")
                                                        </td>
                                                    }
                                                    @if (User.IsInRole("Admin"))
                                                    {
                                                        <td id="@Sumname11-Total">
                                                            @SumPerVarACBWRevEstOverBudgEstCurrFin.ToString("F2") %

                                                        </td>
                                                    }
                                                    @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                    {
                                                        <td></td>
                                                    }
                                                    <td id="@Sumname7-Total">
                                                        @SumBudgEstNexFin.ToString("F4")
                                                    </td>
                                                    <td id="@Sumname8-Total">
                                                        @SumPerVarRevEstOverBudgEstNxtFin.ToString("F2") %
                                                    </td>
                                                    <td></td>
                                                    @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                    {
                                                        <td id="@Sumname9-Total">
                                                            @SumACAndBWPropRENxtFin.ToString("F4")
                                                        </td>
                                                    }
                                                    @if (User.IsInRole("Admin"))
                                                    {
                                                        <td id="@Sumname12-Total">
                                                            @SumPerVarACBWRevEstOverBudgEstNxtFin.ToString("F2") %
                                                        </td>
                                                    }
                                                    @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                    {
                                                        <td></td>
                                                    }
                                                    <td style="border:none;"></td>
                                                    <td style="border:none;"></td>

                                                </tr>
                                            </tbody>
                                        </table>
                                        @*Html.Hidden("SectionName",Model.SectionName, new{@id = @identi+"-SectionName" })
                                        @Html.Hidden("GroupName",Model.GroupName,  new{@id = @identi+"-GroupName" })
                                        @Html.Hidden("SelectedAcademicYear", Model.SelectedAcademicYear,  new{@id = @identi+"-SelectedAcademicYear" })
                                        @Html.Hidden("SelectedDivisionName",Model.SelectedDivisionName,  new{@id = @identi+"-SelectedDivisionName" })*@
                                        @{
                                            var TotalDelegateSavedLedgers = (from d in Model.Detailss where d.SectionNumber.Equals(@inner.SectionNo)  && d.GroupNumber.Equals(@item.GroupNo) && d.HasDelegateSaved.Equals(true) select d.SubGroupNumber).Count();
                                            var TotalAdminSavedLedgers = (from e in Model.Detailss where e.SectionNumber.Equals(@inner.SectionNo)  && e.GroupNumber.Equals(@item.GroupNo) && e.HasAdminSaved.Equals(true) select e.SubGroupNumber).Count();
                                            Boolean ACBWSubmission = (from a in Model.Statuss where a.SectionNumber.Equals(@inner.SectionNo)  && a.GroupNumber.Equals(@item.GroupNo) select a.ACBWSubmission).FirstOrDefault();
                                         }
                                        
                                    @if (User.IsInRole("Admin") && AdminEditStatus && (TotalAdminSavedLedgers == TotalSubGroups)  && Model.IsEnabled.Equals(true) && !ACBWSubmission)
                                    {
                                            <input id="@SubmitChairPerson" class="Submit" formaction="~/Tabs/Index" type="submit" value="Submit to Chairperson for Approval" style="align-self:center"/>
                                        }
                                        else if(!User.IsInRole("Admin") && DelegateEditStatus && (TotalDelegateSavedLedgers == TotalSubGroups)  && Model.IsEnabled.Equals(true) )
                                        {
                                            <input id="@SubmitACBW" class="Submit" formaction="~/Tabs/Index" type="submit" value="Submit to AC&BW for Approval" style="align-self:center"/>
                                        }
                                        @*}*@
                            </div>
                          
                          
                        }
                       CounterBody++;
                    }
                </div>
            </div>
          }

           OuterBodyCount++;
       }
 
    </div>
    }
</div>


 

@section Scripts
{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script type="text/javascript" src="~/js/NestedTable.js"></script>
    <script type="text/javascript" src="~/jquery-validate/jquery.validate.min.js"></script>
    <script type="text/javascript" src="~/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

    <script type="text/javascript">
        
      $(document).ready(  
         function() 
         {
               onceDocReady();
               resumeActiveTab();

                $('body').on('change',"#Division",
                    function (evt) {
                        $("#SelectedDivisionName").val($("#Division option:selected").text().trim());

                        var divisionname = $("#SelectedDivisionName").val();

                        $("#SelectedAcademicYear").val($("#AcademicYear option:selected").text().trim());

                        var academicyear = $("#SelectedAcademicYear").val();

                        var year = academicyear.split('-');
                        //alert(year[0]);
                        var sectionnoid = $('#outerTab li button.active').attr('id');
                        //alert(sectionnoid);
                        var section = sectionnoid.split('-');

                        var groupnoid = $('#' + section[0] + ' ul li button.active').attr('id');
                        //alert(groupnoid);
                        var group = groupnoid.split('-');
                        //alert(group[0]);

                        $.ajax
                            ({
                                type: "Get",
                                url: '@Url.Action("GetDetails","Tabs")',
                                data: { Year: year[0], Division: divisionname },
                                dataType: "html",
                                success: function (data) {
                                    //Whatever result you have got from your controller with html partial view replace with a specific html.
                                    //alert("Inside Ajax");
                                    //alert($("#outerdiv", data).html());

                                    //$("#outerdiv").html(data);

                                    //onceDocReady();

                                    $("#outerdiv").html($("#outerdiv",data).html());
                                    
                                    onceDocReady();
                                 
                                    //alert("Yes");
                                    //var activesectionid = $('#outerTab li button.active').attr('id');
                                    //alert("Not active : "+activesectionid);

                                    //$('#'+activesectionid).removeClass("active");
                                    //$('#'+sectionnoid).addClass("active");
                                    //alert("Active : "+sectionnoid);

                                    //var splitsection = activesectionid.split('-');

                                    //var activegroupnoid = $('#' + splitsection[0] + ' ul li button.active').attr('id');
                                    //$('#'+activegroupnoid).removeClass("active");
                                    //$('#'+groupnoid).addClass("active");
                                },
                                error: function (jqXHR, textStatus, errorThrown) {
                                    alert("errorThrown Tabs");
                                }

                            });


                    }

                );

                $('body').on('change',"#AcademicYear",
                    function (evt) {
                        $("#SelectedAcademicYear").val($("#AcademicYear option:selected").text().trim());

                        var academicyear = $("#SelectedAcademicYear").val();

                        $("#SelectedDivisionName").val($("#Division option:selected").text().trim());

                        var divisionname = $("#SelectedDivisionName").val();

                        var year = academicyear.split('-');
                        //alert(year[0]);

                        var sectionnoid = $('#outerTab li button.active').attr('id');

                        var section = sectionnoid.split('-');

                        var groupnoid = $('#' + section[0] + ' ul li button.active').attr('id');
                        //alert(groupnoid);
                        var group = groupnoid.split('-');
                        //alert(group[0]);

                        $.ajax
                            ({
                                type: "Get",
                                url: '@Url.Action("GetDetails","Tabs")',
                                data: { Year: year[0], Division: divisionname },
                                dataType: "html",
                                success: function (data)
                                {
                                    //Whatever result you have got from your controller with html partial view replace with a specific html.
                                    //alert("Inside Ajax");
                                    //alert("Inside Function");
 
                                    //$("#outerdiv").html(data);// HTML DOM replace
                                    
                                    //$("#outerdiv").html(data);
                                    $("#outerdiv").html($("#outerdiv", data).html());
                                    //alert("Function Completed");
                                    
                                    onceDocReady();
                                   
                                    //var activesectionid = $('#outerTab li button.active').attr('id');
                                    //alert("Not active : "+activesectionid);

                                    //$('#'+activesectionid).removeClass("active");
                                    //$('#'+sectionnoid).addClass("active");
                                    //alert("Active : "+sectionnoid);

                                    //var splitsection = activesectionid.split('-');

                                    //var activegroupnoid = $('#' + splitsection[0] + ' ul li button.active').attr('id');
                                    //$('#'+activegroupnoid).removeClass("active");
                                    //$('#'+groupnoid).addClass("active");
                                    //alert("Active : "+groupnoid);
                                  
                                },
                                error: function (jqXHR, textStatus, errorThrown)
                                {
                                    alert("errorThrown");
                                    //alert("Error Thrown");
                                }

                            });
                    }
                );

                $('body').on('click',".Submit",
                    function () {
                       
                             var sectionnoid = $('#outerTab li button.active').attr('id');
                        
                             var section = sectionnoid.split('-');
                        
                             var groupnoid = $('#' + section[0] + ' ul li button.active').attr('id');
                             
                             //alert($(this).val());
                             //alert(groupnoid);
                             
                             if($(this).val()=="Delete" || $(this).val()=="Upload")
                             {
                                    var SubGroupID = $(this).closest('tr').closest('td').closest('tr').children('td').eq(0);
                                     var Ledgerid = $(this).closest('tr').closest('td').closest('tr').children('td').eq(1);
                                  //alert("SubGroupID Delete"+SubGroupID.text());
                                  //alert("LedgerID Delete"+Ledgerid.text());
                             }
                             else
                             {
                                 var SubGroupID = $(this).closest('tr').children('td').eq(0);
                                  var Ledgerid = $(this).closest('tr').children('td').eq(1);
                                  //alert("SubGroupID"+SubGroupID.text());
                                  //alert("LedgerID"+Ledgerid.text());
                             }
                             $("#SelectedAcademicYear").val($("#AcademicYear option:selected").text().trim());
                             //alert($("#SelectedAcademicYear").val());
                       

                             $("#SelectedDivisionName").val($("#Division option:selected").text().trim());
                             //alert($("#SelectedDivisionName").val());
                             
                        
                             $('#SectionName').val($('#' + sectionnoid).text());
                             //alert($('#SectionName').val());
                             //alert($('#' + sectionnoid).text());
                        
                             $('#GroupName').val($('#' + groupnoid).text());
                             //alert($('#'+groupnoid).text());

                             $('#HeaderName').val($(this).attr('id'));
                             //alert($('#HeaderName').val());

                             if(SubGroupID.text().trim() == "")
                             {
                                   $('#SubGroupLedgerName').val(Ledgerid.text().trim());
                                   //alert("SubGroupLedgerName is blank" + $('#SubGroupLedgerName').val());
                             }
                             else
                             {
                                   $('#SubGroupLedgerName').val(SubGroupID.text().trim());
                                   //alert("SubGroupLedgerName is not blank"+ $('#SubGroupLedgerName').val());
                             }

                             //alert($('#SubGroupLedgerName').val());

                             //validateinput();

                             if($(this).val() == "Save Budget")
                             {
                                 var nextelement = $(this).closest('td').next().children('button').val();
                                 
                                 //alert(nextelement);

                                 if(nextelement == "Delete Budget")
                                 {
                                     //alert(Ledgerid.text().trim());
                                    $('#EditEnabled').val(Ledgerid.text().trim());
                                 }
                             }
                    });

                $('body').on('click',".ViewFile",
                    function () {
                        var sectionnoid = $('#outerTab li button.active').attr('id');
                        
                        var section = sectionnoid.split('-');
                        
                        var groupnoid = $('#' + section[0] + ' ul li button.active').attr('id');
                        //alert($(this).val());
                        
                        var Ledgerid = $(this).closest('tr').closest('td').closest('tr').children('td').eq(1);
                        //alert(Ledgerid.text());
                        
                        $("#SelectedAcademicYear").val($("#AcademicYear option:selected").text().trim());
                        //alert($("#SelectedAcademicYear").val());
                       

                        $("#SelectedDivisionName").val($("#Division option:selected").text().trim());
                        //alert($("#SelectedDivisionName").val());
                        
                        $('#SectionName').val($('#' + sectionnoid).text());
                        //alert($('#SectionName').val());
                        
                        $('#GroupName').val($('#' + groupnoid).text());
                        //alert($('#GroupName').val());

                        $('#SubGroupLedgerName').val(Ledgerid.text().trim());
                        
                    });
                
                $('body').on('click',".FinalSubmit",
                    function () {
                        
                        $("#SelectedDivisionName").val($("#Division option:selected").text().trim());
                        //alert($("#SelectedDivisionName").val());

                        $("#SelectedAcademicYear").val($("#AcademicYear option:selected").text().trim());
                        //alert($("#SelectedAcademicYear").val());
                    });
                
                 
                
         });
        
        function onceDocReady()
        {
                 $("#SelectedAcademicYear").val($("#AcademicYear option:selected").text().trim());
                 var academicyear = $("#SelectedAcademicYear").val();
                 //alert('Inside Doc Ready module');
                 var year = academicyear.split('-');
                 //alert(year[1]);

                 $("#SelectedDivisionName").val($("#Division option:selected").text().trim());

                 $(".CurrentBudgetEstimates").text('Budget Estimates ' + $("#SelectedAcademicYear").val());
                 $(".InterimRevEst").text('Interim Revised Estimates ' + $("#SelectedAcademicYear").val());
                 $(".ProvisionalRevEst").text('Provisional Revised Estimates ' + $("#SelectedAcademicYear").val());
                 $(".PreviousActualBudget").text('Actual ' + (Number.parseInt(year[0]) - Number.parseInt(1)) + '-' + Number.parseInt(year[0]));
                 $(".PreviousHalfYearActualBudget").text('Actual upto 30.09.'+Number.parseInt(year[0]));
                 $(".CurrentYearRevisedEstimates").text('Revised Estimates ' + $("#SelectedAcademicYear").val());
                 $(".VariationInRevisedEstimates").text('% Variation in RE over the BE ' + $("#SelectedAcademicYear").val()  );
                 $(".ACBWProposalForRevisedEstimates").text('AC & BW Proposal for RE ' + $("#SelectedAcademicYear").val());
                 $(".DelegateJustificationRevEst").text('Justification(by RO/COE/Unit/HQs)');
                 $(".ACBWJustificationRevEst").text('Justification(by ACBW)');
                 $(".BudgetEstimatesNextYear").text('Budget Estimates ' + Number.parseInt(year[1]) + '-' + (Number.parseInt(year[1]) + Number.parseInt(1)));
                 $(".VariationInBudgetEstimates").text('% Variation in BE ' + Number.parseInt(year[1]) + '-' + (Number.parseInt(year[1]) + Number.parseInt(1)) + 'over the RE ' + $("#SelectedAcademicYear").val());
                 $(".ACBWProposalForBudgetEstimates").text('AC & BW Proposal for BE ' + Number.parseInt(year[1]) + '-' + (Number.parseInt(year[1]) + Number.parseInt(1)));
                 $(".Justification").text('Justification(by RO/COE/Unit/HQs)');
                 $(".ACBWJustificationBudgEstNxtFin").text('Justification(by ACBW)');
                 $(".UploadDocuments").text('Upload Documents');

                 

                 
        } 
        
        function resumeActiveTab()
        {
                var SectionName =  $('#SectionName').val();
                 //alert("Stored Section Name : "+SectionName);

                 var GroupName = $('#GroupName').val();
                 //alert("Stored Group Name :"+ GroupName);

                 var HeaderName = $('#HeaderName').val();
                 
                 var Headerid = HeaderName.split('_');
                 //alert("Stored Header ID :"+ Headerid);

                 if(SectionName!="" && GroupName!="")
                 {
                    var SetSectionNo = $('#outerTab li button:contains('+SectionName+')').attr('id');
                    //alert("Section to be set :"+SetSectionNo);

                    var SetSection = SetSectionNo.split('-');

                    var SetGroupNo = $('#' + SetSection[0] + ' ul li button:contains('+GroupName+')').attr('id');
                    //alert("Group to be set :"+SetGroupNo);
                 
                 }

                 var activesectionno = $('#outerTab li button.active').attr('id');
                 //alert("Active Section Name :"+ activesectionno);
            
                 var secname = $('#outerTab li button.active').text();
                 //alert("sectionname : "+secname);

                 var section = activesectionno.split('-');
               
                 var activegroupno = $('#' + section[0] + ' ul li button.active').attr('id');
                 //alert("Active Group Name :"+ activegroupno); 

                 var groname = $('#' + section[0] + ' ul li button.active').text();

                 var activenavigationid = $('#' + activegroupno).attr('data-bs-target');
                        //alert(activenavigationid);
              //alert("Active Section Name :"+activesectionno);
              //alert("Active Group Name :"+activegroupno);

             if(SectionName!="" && SectionName!=secname)
             {
                   $('#'+activesectionno).removeClass("active");
                   $('#'+activesectionno).removeClass("show");

                   $('#'+SetSectionNo).addClass("active");
                   $('#'+SetSectionNo).addClass("show");
                   //alert("Section class updated");
             }
                        
             if(GroupName!="" && GroupName!=groname)
             {
                    $('#'+activegroupno).removeClass("active");
                    $('#'+activegroupno).removeClass("show");

                    $('#' + SetGroupNo).addClass("active");
                    $('#' + SetGroupNo).addClass("show");
                    //alert("Group class updated");

                    $(activenavigationid).removeClass("active");
                    $(activenavigationid).removeClass("show");

                    var navigationid = $('#'+SetGroupNo).attr('data-bs-target');

                       $(navigationid).addClass("active");
                       $(navigationid).addClass("show");
                   
                   setTimeout(function()
                   {
                       $("button[id*='"+ Headerid[1] +"']").focus();
                   }, 500);
                 
             }
             else
             {
                 setTimeout(function()
                   {
                       $("button[id*='"+ Headerid[1] +"']").focus();
                   }, 500);
             }
        }
       
    </script>
}
