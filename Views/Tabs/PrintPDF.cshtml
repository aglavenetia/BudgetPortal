@model BudgetPortal.ViewModel.MultipleData
@using System.Web;

@using BudgetPortal.Entities;
@using Microsoft.AspNetCore.Mvc;

@using Microsoft.AspNetCore.Identity;
@using BudgetPortal.Data;

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    //Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "ExportBudgetProposal";
    int OuterHeaderCount = 0;
    int OuterBodyCount = 0;
    int CountHeader = 0;
    int CounterBody = 0;


    Model.SubGroupNameOrLedgerName = new List<String>();
    Model.BudEstCurrFin = new List<Decimal>();
    Model.InterimRevEst = new List<Decimal>();
    Model.ProvisionalRevEst = new List<Decimal>();
    Model.ActPrevFin = new List<Decimal>();
    Model.ActCurrFinTillsecondQuart = new List<Decimal>();
    Model.RevEstCurrFin = new List<Decimal>();
    Model.PerVarRevEstOverBudgEstCurrFin = new List<String>();
    Model.ACAndBWPropRECurrFin = new List<Decimal>();
    Model.PerVarACBWRevEstOverBudgEstCurrFin = new List<String>();
    Model.DelegateJustificationRevEst = new List<String>();
    Model.ACBWJustificationRevEst = new List<String>();
    Model.BudgEstNexFin = new List<Decimal>();
    Model.PerVarRevEstOverBudgEstNxtFin = new List<String>();
    Model.ACAndBWPropRENxtFin = new List<Decimal>();
    Model.PerVarACBWRevEstOverBudgEstNxtFin = new List<String>();
    Model.Justification = new List<String>();
    Model.ACBWJustificationBudgEstNxtFin = new List<String>();
    String[] SplitAcademicYear = new String[1];
    var Div = (from a in Model.DivisionNames where a.Selected == true select a.Text).FirstOrDefault();
    var SelectedAcademicYear = (from a in Model.AcademicYears where a.Selected == true select a.Text).FirstOrDefault();

    //Model.File = new List<IFormFile>();

    Boolean AdminEditStatus = false;
    Boolean DelegateEditStatus = false;

    Boolean IsDelegateSaved = false;
    Boolean IsAdminSaved = false;

   Boolean FinalAdminEditStatus = (from a in Model.Statuss where (a.SectionNumber == 0 && a.GroupNumber.Equals("0")) select a.AdminEditStatus).FirstOrDefault();
    //Model.Detailss = new List<BudgetDetails>();

    int FinalAdminEditCount = (from a in Model.Statuss where (a.SectionNumber == 0 && a.GroupNumber.Equals("0")) select a.AdminEditStatus).Count();

    Boolean ACBWSubmissionStatus = (from a in Model.Statuss where (a.SectionNumber == 0 && a.GroupNumber.Equals("0")) select a.ACBWSubmission).FirstOrDefault();

    Boolean ChairpersonApprovalStatus = (from a in Model.Statuss where (a.SectionNumber == 0 && a.GroupNumber.Equals("0")) select a.ChairpersonApproval).FirstOrDefault();

    Boolean FinancialCommiteeApprovalStatus = (from a in Model.Statuss where (a.SectionNumber == 0 && a.GroupNumber.Equals("0")) select a.FinCommitteeApproval).FirstOrDefault();

    Boolean GenBodyApprovalStatus = (from a in Model.Statuss where (a.SectionNumber == 0 && a.GroupNumber.Equals("0")) select a.GenBodyApproval).FirstOrDefault();

}
<br />

<table class="table" style="align-content:center">
    <tr>Report Generated on : @DateTime.Now</tr>
    <thead>
        <tr class="text-center" style="color:green;">
            <th colspan="100" style="border-left-style:hidden;border-right-style:hidden;border-top-style:hidden;border-bottom-style:hidden;font-weight:bold;"><h1><bold>Budget @SelectedAcademicYear for @Div </bold></h1></th>
        </tr>
        <tr class="text-center" style="color:chocolate;">
            <th colspan="100" style="border-left-style:hidden;border-right-style:hidden;border-top-style:hidden;border-bottom-style:hidden;font-weight:bold;">CENTRAL BOARD OF SECONDARY EDUCATION</th>
        </tr>
        <tr class="text-center" style="color:chocolate;">
            <th colspan="100" style="border-left-style:hidden;border-right-style:hidden;border-top-style:hidden;border-bottom-style:hidden;font-weight:bold;">Shiksha Kendra 2, Community Centre, Preet Vihar, Delhi - 110 092</th>
        </tr>
        <tr class="text-center" style="color:red;">
            <th colspan="100" style="border-left-style:hidden;border-right-style:hidden;border-top-style:hidden;border-bottom-style:hidden;font-weight:bold;">(*FIGURES IN CRORES)</th>
        </tr>
    </thead>
</table>
   

        
  @foreach (var inner in Model.Sectionss)
  {
                var GroupsStatRowCount = (from a in Model.Statuss where (a.SectionNumber == @inner.SectionNo) select a.DelegateEditStatus).Count();

                var inneridenti = String.Concat("Budget", @inner.SectionNo.ToString());

                CountHeader = 0;
                CounterBody = 0;
                int Count = 0;
                int LedgerNo = 0;

                var SectionSumBudEstCurrFin = (from a in Model.Approved where a.SectionNumber.Equals(@inner.SectionNo) select a.BudEstNextFin).Sum();
                var SectionSumActPrevFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.ActPrevFin).Sum();
                var SectionSumActCurrFinTill2ndQuart = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.ActCurrFinTill2ndQuart).Sum();
                var SectionSumRevEstCurrFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.RevEstCurrFin).Sum();
                var SectionSumACAndBWPropRECurrFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.ACAndBWPropRECurrFin).Sum();
                var SectionSumBudgEstNexFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.BudgEstNexFin).Sum();
                var SectionSumACAndBWPropRENxtFin = (from a in Model.Detailss where a.SectionNumber.Equals(@inner.SectionNo) select a.ACAndBWPropRENxtFin).Sum();
                var SectionSumPerVarRevEstOverBudgEstCurrFin = 0.00;
                var SectionSumPerVarRevEstOverBudgEstNxtFin = 0.00;

                @if (Model.IsEnabled.Equals(true) && GroupsStatRowCount > 0)
                {
                    SectionSumPerVarRevEstOverBudgEstCurrFin = Convert.ToInt32(Convert.ToDecimal((SectionSumRevEstCurrFin - SectionSumBudEstCurrFin) / SectionSumBudEstCurrFin) * 100);
                    SectionSumPerVarRevEstOverBudgEstNxtFin = Convert.ToInt32(Convert.ToDecimal((SectionSumBudgEstNexFin - SectionSumRevEstCurrFin) / SectionSumRevEstCurrFin) * 100);
                }
                else
                {
                    SectionSumPerVarRevEstOverBudgEstCurrFin = Convert.ToDouble(0.00);
                    SectionSumPerVarRevEstOverBudgEstNxtFin = Convert.ToDouble(0.00);
                }
                var GroupsCount = (from a in Model.Groupss where a.SectionNo.Equals(@inner.SectionNo) select a.GroupNo).Count();

                @* Boolean AdminEditStatus = false; *@
               
                @foreach (var item in Model.Groupss.Where(d => d.SectionNo == @inner.SectionNo))
                {
                   
                                var GroupsStatusRowCount = (from a in Model.Statuss where (a.SectionNumber == @inner.SectionNo && a.GroupNumber.Equals(@item.GroupNo)) select a.DelegateEditStatus).Count();
                                var AdminStatus = (from a in Model.Statuss where (a.SectionNumber == @inner.SectionNo && a.GroupNumber.Equals(@item.GroupNo)) select a.AdminEditStatus).FirstOrDefault();
                                var GenBodyAppStatus = (from a in Model.Statuss where (a.SectionNumber == 0 && a.GroupNumber.Equals("0")) select a.GenBodyApproval).FirstOrDefault();

                                Boolean GroupACBWSubmissionStatus = (from a in Model.Statuss where (a.SectionNumber == @inner.SectionNo && a.GroupNumber.Equals(@item.GroupNo)) select a.ACBWSubmission).FirstOrDefault();
                                var IsSubmittedToChairman = (from a in Model.Statuss where (a.SectionNumber == 0 && a.GroupNumber.Equals("0")) select a.ACBWSubmission).Count();

                                Boolean IsSubmittedToACBW = (from a in Model.Statuss where (a.SectionNumber.Equals(0) && a.GroupNumber.Equals("0")) select a.ACBWSubmission).FirstOrDefault();

                                var TotalSubGroups = (from b in Model.SubGroupss where b.GroupNo.Equals(@item.GroupNo) && b.RequireInput == false select b.SubGroupNo).Count();

                                if (GroupsStatusRowCount == 0 && Model.IsEnabled.Equals(true))
                                {
                                    DelegateEditStatus = true;
                                    AdminEditStatus = false;
                                }
                                else if (AdminStatus && Model.IsEnabled.Equals(true))
                                {
                                    DelegateEditStatus = false;
                                    AdminEditStatus = true;
                                }
                                else
                                {
                                    DelegateEditStatus = false;
                                    AdminEditStatus = false;
                                }
                                int TableCount = 0;
                                var SubmitACBW = String.Concat("SubmitACBW", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                var SubmitChairPerson = String.Concat("SubmitChairPerson", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                var identi = String.Concat("Budget", Convert.ToInt32((Convert.ToDecimal(@item.GroupNo) * 10)).ToString());

                                var SumBudEstCurrFin = (from a in Model.Approved where a.GroupNumber.Equals(@item.GroupNo) select a.BudEstNextFin).Sum();
                                var SumActPrevFin = (from a in Model.Detailss where a.GroupNumber.Equals(@item.GroupNo) select a.ActPrevFin).Sum();
                                var SumActCurrFinTill2ndQuart = (from a in Model.Detailss where a.GroupNumber.Equals(@item.GroupNo) select a.ActCurrFinTill2ndQuart).Sum();
                                var SumRevEstCurrFin = (from a in Model.Detailss where a.GroupNumber.Equals(@item.GroupNo) select a.RevEstCurrFin).Sum();
                                var SumACAndBWPropRECurrFin = (from a in Model.Detailss where a.GroupNumber.Equals(@item.GroupNo) select a.ACAndBWPropRECurrFin).Sum();
                                var SumBudgEstNexFin = (from a in Model.Detailss where a.GroupNumber.Equals(@item.GroupNo) select a.BudgEstNexFin).Sum();
                                var SumACAndBWPropRENxtFin = (from a in Model.Detailss where a.GroupNumber.Equals(@item.GroupNo) select a.ACAndBWPropRENxtFin).Sum();
                                var SumPerVarRevEstOverBudgEstCurrFin = 0.00;
                                var SumPerVarRevEstOverBudgEstNxtFin = 0.00;
                                var SumPerVarACBWRevEstOverBudgEstCurrFin = 0.00;
                                var SumPerVarACBWRevEstOverBudgEstNxtFin = 0.00;

                                @if ((User.IsInRole("Admin") && IsSubmittedToACBW) || (!User.IsInRole("Admin")))
                                {
                                    SumPerVarRevEstOverBudgEstCurrFin = SumBudEstCurrFin != Convert.ToDecimal(0.00) ? Convert.ToInt32(Convert.ToDecimal((SumRevEstCurrFin - SumBudEstCurrFin) / SumBudEstCurrFin) * 100) : Convert.ToInt32(0.00);
                                    SumPerVarRevEstOverBudgEstNxtFin = SumRevEstCurrFin != Convert.ToDecimal(0.00) ? Convert.ToInt32(Convert.ToDecimal((SumBudgEstNexFin - SumRevEstCurrFin) / SumRevEstCurrFin) * 100) : Convert.ToInt32(0);
                                    SumPerVarACBWRevEstOverBudgEstCurrFin = SumBudEstCurrFin != Convert.ToDecimal(0.00) ? Convert.ToInt32(Convert.ToDecimal((SumACAndBWPropRECurrFin - SumBudEstCurrFin) / SumBudEstCurrFin) * 100) : Convert.ToInt32(0);
                                    SumPerVarACBWRevEstOverBudgEstNxtFin = SumACAndBWPropRECurrFin != Convert.ToDecimal(0.00) ? Convert.ToInt32(Convert.ToDecimal((SumACAndBWPropRENxtFin - SumACAndBWPropRECurrFin) / SumACAndBWPropRECurrFin) * 100) : Convert.ToInt32(0);
                                }
                                else
                                {
                                    SumPerVarRevEstOverBudgEstCurrFin = Convert.ToDouble(0.00);
                                    SumPerVarRevEstOverBudgEstNxtFin = Convert.ToDouble(0.00);
                                    SumPerVarACBWRevEstOverBudgEstCurrFin = Convert.ToDouble(0.00);
                                    SumPerVarACBWRevEstOverBudgEstNxtFin = Convert.ToDouble(0.00);
                                }

                                var Sumname1 = String.Concat("BudEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                var Sumname2 = String.Concat("ActPrevFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                var Sumname3 = String.Concat("ActCurrFinTillsecondQuart", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                var Sumname4 = String.Concat("RevEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                var Sumname5 = String.Concat("PerVarRevEstOverBudgEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                var Sumname6 = String.Concat("ACAndBWPropRECurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                var Sumname7 = String.Concat("BudgEstNexFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                var Sumname8 = String.Concat("PerVarRevEstOverBudgEstNxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                var Sumname9 = String.Concat("ACAndBWPropRENxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                var Sumname10 = String.Concat("Justification", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                var Sumname11 = String.Concat("PerVarACBWRevEstOverBudgEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                var Sumname12 = String.Concat("PerVarACBWRevEstOverBudgEstNxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
        
                                <table id="@identi-outertable" class="table table-responsive table-bordered table-hover" style="width:2600px;" >
                                          
                                          <thead>
                                              <tr>
                                                 <th colspan="4" style="background-color:darkkhaki">@item.GroupName</th>
                                              </tr>
                                              <tr>
                                                    @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                    {
                                                                   <th colspan="3" class="align-text-middle" style="background-color:honeydew;position:sticky;top:0;">     </th>
                                                                   <th colspan="3" class="align-text-middle" style= "background-color: floralwhite;text-align:center;position:sticky;top:0;"> Interim Revision Sections </th>
                                                                   <th colspan="8" class="align-text-middle" style= "background-color: aliceblue;text-align:center;position:sticky;top:0;"> Revision Estimates Section of CY    </th>
                                                                   <th colspan="6" class="align-text-middle" style= "background-color:whitesmoke;text-align:center;position:sticky;top:0;">Budget Estimates Section of Next Year   </th>
                                                                   <th colspan="2" class="align-text-middle" style="background-color:honeydew;position:sticky;top:0;">     </th>
                                                    }
                                                    else
                                                    {
                                                                      <th colspan="3" class="align-text-middle" style="background-color:honeydew;position:sticky;top:0;">     </th>
                                                                      <th colspan="3" class="align-text-middle" style= "background-color: floralwhite;text-align:center;position:sticky;top:0;"> Interim Revision Sections </th>
                                                                      <th colspan="5" class="align-text-middle" style= "background-color: aliceblue;text-align:center;position:sticky;top:0;"> Revision Estimates Section of CY    </th>
                                                                      <th colspan="3" class="align-text-middle" style= "background-color:whitesmoke;text-align:center;position:sticky;top:0;">Budget Estimates Section of Next Year   </th>
                                                                                <th colspan="2" class="align-text-middle" style="background-color:honeydew;position:sticky;top:0;">     </th>
                                                    }
                                              </tr>
                                                            <tr class="align-text-top">
                                                                <!--th></!--th-->
                                                                <th style="width:100px;background-color:honeydew;">
                                                        @*SubGroupNumber*@
                                                                    HEAD NO.
                                                                </th>
                                                                <th style="width:100px;background-color:honeydew;">
                                                                    SUBHEAD NO.
                                                                </th>
                                                                <th style="width:130px;background-color:honeydew;">
                                                        @*SubGroupName*@
                                                                    HEAD NAME
                                                                </th>
                                                                <th class="CurrentBudgetEstimates" style= "background-color: floralwhite;width:130px;">
                                                                    Budget Estimates @SelectedAcademicYear
                                                                </th>
                                                                <th class="InterimRevEst" style= "background-color: floralwhite;width:130px;">
                                                                    Interim Revised Estimates @SelectedAcademicYear
                                                                </th>
                                                                <th class="ProvisionalRevEst" style= "background-color: floralwhite;width:130px;">
                                                                     Provisional Revised Estimates @SelectedAcademicYear
                                                                </th>
                                                                <th class="PreviousActualBudget" style= "background-color: aliceblue;width:130px;">

                                                                </th>
                                                                <th class="PreviousHalfYearActualBudget" style= "background-color: aliceblue;width:130px;">

                                                                </th>
                                                                <th class="CurrentYearRevisedEstimates" style= "background-color: aliceblue;width:130px;">
                                                                      Revised Estimates @SelectedAcademicYear
                                                                </th>
                                                                <th class="VariationInRevisedEstimates" style= "background-color: aliceblue;width:100px;">
                                                                      % Variation in RE over the BE @SelectedAcademicYear
                    </th>
                                                                <th class="DelegateJustificationRevEst" style= "background-color: aliceblue;width:130px;">
                                                                     Justification(by RO/COE/Unit/HQs)
                                                                </th>
                                                    @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                    {
                                                                       <th class="ACBWProposalForRevisedEstimates" style= "background-color: aliceblue;width:130px;">
                                                                           AC & BW Proposal for RE @SelectedAcademicYear
                                                                       </th>
                                                    }
                                                    @if (User.IsInRole("Admin"))
                                                    {
                                                                     <th class="VariationInRevisedEstimates" style= "background-color: aliceblue;width:100px;">

                                                                    </th>
                                                    } 
                                                    @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                    {
                                                                                <th class="ACBWJustificationRevEst" style= "background-color: aliceblue;width:130px;">
                                                                                      Justification(by ACBW)
                                                                                </th>
                                                    }
                                                                <th class="BudgetEstimatesNextYear" style= "background-color:whitesmoke;width:130px;">

                                                                </th>
                                                                <th class="VariationInBudgetEstimates" style= "background-color:whitesmoke;width:100px;">

                                                                </th>

                                                                <th class="Justification " style= "background-color:whitesmoke;width: 130px;">
                                                                      Justification(by RO/COE/Unit/HQs)
                                                                </th>
                                                    @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                    {
                                                                                <th class="ACBWProposalForBudgetEstimates" style= "background-color:whitesmoke;width:130px;">

                                                                                </th>

                                                    }
                                                    @if (User.IsInRole("Admin"))
                                                    {
                                                                        <th class="VariationInBudgetEstimates" style= "background-color:whitesmoke;width:100px;">

                                                                        </th>

                                                    }
                                                    @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                    {
                                                                                <th class="ACBWJustificationBudgEstNxtFin" style= "background-color:whitesmoke;width:130px;">
                                                                                      Justification(by ACBW)
                                                                                </th>
                                                    }
                                                                   <th class="UploadDocuments" style="width:130px;background-color:honeydew;">
                                                                               Upload Documents
                                                                   </th>
                                                                   <th style="width:50px;background-color:honeydew;">Action</th>
                                                            </tr>
                                                        </thead>
                                          <tbody> 

                                                @foreach (var Subs in Model.SubGroupss.Where(d => d.GroupNo.Equals(@item.GroupNo)))
                                                {
                                                    var details = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a).FirstOrDefault();
                                                    var PrevYearApp = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a).FirstOrDefault();

                                                    var TotalLedgers = (from c in Model.Ledgerss where c.SubGroupNo.Equals(@Subs.SubGroupNo) select c.LedgerNo).Count();

                                                    TotalSubGroups = (TotalSubGroups + TotalLedgers);

                                                    @if (@Subs.RequireInput)
                                                    {
                                                        int DelegateSavedCount = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.HasDelegateSaved.Equals(true) select a.SubGroupNumber).Count();
                                                        int AdminSavedCount = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.HasAdminSaved.Equals(true) select a.SubGroupNumber).Count();

                                                        @if (DelegateSavedCount > 0)
                                                            IsDelegateSaved = true;
                                                        else
                                                            IsDelegateSaved = false;

                                                        @if (AdminSavedCount > 0)
                                                            IsAdminSaved = true;
                                                        else
                                                            IsAdminSaved = false;
                                                    }
                                                    else
                                                    {
                                                        IsDelegateSaved = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.HasDelegateSaved).FirstOrDefault();
                                                        IsAdminSaved = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.HasAdminSaved).FirstOrDefault();
                                                    }
                                                    var name1 = String.Concat("BudEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name2 = String.Concat("ActPrevFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name3 = String.Concat("ActCurrFinTillsecondQuart", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name4 = String.Concat("RevEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name5 = String.Concat("PerVarRevEstOverBudgEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name6 = String.Concat("ACAndBWPropRECurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name7 = String.Concat("BudgEstNexFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name8 = String.Concat("PerVarRevEstOverBudgEstNxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name9 = String.Concat("ACAndBWPropRENxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name10 = String.Concat("Justification", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name11 = String.Concat("UploadFile", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name12 = String.Concat("InterimRevEst", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name13 = String.Concat("ProvisionalRevEst", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name14 = String.Concat("DelegateJustificationRevEst", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name15 = String.Concat("ACBWJustificationRevEst", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name16 = String.Concat("ACBWJustificationBudgEstNxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name17 = String.Concat("PerVarACBWRevEstOverBudgEstCurrFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var name18 = String.Concat("PerVarACBWRevEstOverBudgEstNxtFin", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);


                                                    var upload = String.Concat("UploadButton", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var delete = String.Concat("DeleteButton", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);
                                                    var view = String.Concat("ViewButton", @inner.SectionNo.ToString(), @item.GroupNo, @TableCount);

                                                    var save = String.Concat("Save", @inner.SectionNo.ToString(), "_", @item.GroupNo, @TableCount);
                                                    var edit = String.Concat("Edit", @inner.SectionNo.ToString(), "_", @item.GroupNo, @TableCount);
                                                    var Budgetdelete = String.Concat("Delete", @inner.SectionNo.ToString(), "_", @item.GroupNo, @TableCount);

                                                    var LedgerCount = (from a in Model.Ledgerss where a.SubGroupNo.Equals(@Subs.SubGroupNo) select a.LedgerNo).Count();
                        
                                                     

                                                      <tr>
                        
                                                                                <!--td class=""></!--td-->
                                                            <td style= "background-color:honeydew;">
                                                            @{
                                                                Model.SubGroupNameOrLedgerName.Insert(Count, Subs.SubGroupNo);
                                                            }

                                                            @Html.DisplayFor(model => model.SubGroupNameOrLedgerName[Count])
                                                            @Html.HiddenFor(model => model.SubGroupNameOrLedgerName[Count])
                                                         </td>
                                                         <td style= "background-color:honeydew;"></td>
                                                         <td style= "background-color:honeydew;">
                                                            @Subs.subGroupName
                                                         </td>
                                                         <td style= "background-color: floralwhite;">

                                                            @if (@Subs.RequireInput && DelegateEditStatus && !IsDelegateSaved)
                                                            {
                                                                var LedgerPastYearAppBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();

                                                                                            <div class="form-group text-nowrap"> 
                                                                    @{
                                                                        Model.BudEstCurrFin.Insert(Count, LedgerPastYearAppBudEstCurrFin != null ? Convert.ToDecimal(LedgerPastYearAppBudEstCurrFin) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @maxlength = "20", @class = "form-control", @id = @name1, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })

                                                                                            </div>

                                                            }
                                                            else if ((@Subs.RequireInput && !DelegateEditStatus && IsSubmittedToACBW) || (@Subs.RequireInput && !User.IsInRole("Admin") && IsDelegateSaved))
                                                            {
                                                                var LedgerSumBudEstCurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstCurrFin).Sum();                                                                                                                            

                                                                <div class="form-group text-nowrap">
                                                                    @{
                                                                        Model.BudEstCurrFin.Insert(Count, LedgerSumBudEstCurrFin != null ? Convert.ToDecimal(LedgerSumBudEstCurrFin) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @maxlength = "20", @class = "form-control", @id = @name1, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>

                                                            }

                                                            else if ((!DelegateEditStatus && IsSubmittedToACBW) || (!User.IsInRole("Admin") && IsDelegateSaved))
                                                            {
                                                                 <div class="form-group text-nowrap">

                                                                    @{
                                                                        Model.BudEstCurrFin.Insert(Count, details != null ? Convert.ToDecimal(details.BudEstCurrFin) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @maxlength = "20", @class = "form-control", @id = @name1, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })

                                                                  </div>

                                                            }
                                                            else
                                                            {
                                                                 <div class="form-group ">
                                                                    @{
                                                                        Model.BudEstCurrFin.Insert(Count, (PrevYearApp != null) ? Convert.ToDecimal(PrevYearApp.BudEstNextFin) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.BudEstCurrFin[Count], new { @maxlength = "20", @class = "form-control", @id = @name1, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.BudEstCurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })

                                                                 </div>

                                                            }
                                                         </td>
                                                         <td style= "background-color: floralwhite;">

                                                            @if (@Subs.RequireInput)
                                                            {
                                                                var LedgerSumInterimRevEst = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.InterimRevEst).Sum();                                                                                                                            

                                                                <div class="form-group">
                                                                    @{
                                                                        Model.InterimRevEst.Insert(Count, LedgerSumInterimRevEst != null ? Convert.ToDecimal(LedgerSumInterimRevEst) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.InterimRevEst[Count], new { @maxlength = "20", @class = "form-control", @id = @name12, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.InterimRevEst[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.InterimRevEst.Insert(Count, details != null ? Convert.ToDecimal(details.InterimRevEst) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.InterimRevEst[Count], new { @maxlength = "20", @class = "form-control", @id = @name12, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.InterimRevEst[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            }

                                                         </td>
                                                         <td style= "background-color: floralwhite;">

                                                            @if (@Subs.RequireInput)
                                                            {
                                                                var LedgerSumProvisionalRevEst = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ProvisionalRevEst).Sum();                                                                                                                            

                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ProvisionalRevEst.Insert(Count, LedgerSumProvisionalRevEst != null ? Convert.ToDecimal(LedgerSumProvisionalRevEst) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.ProvisionalRevEst[Count], new { @maxlength = "20", @class = "form-control", @id = @name13, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ProvisionalRevEst[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ProvisionalRevEst.Insert(Count, details != null ? Convert.ToDecimal(details.ProvisionalRevEst) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.ProvisionalRevEst[Count], new { @maxlength = "20", @class = "form-control", @id = @name13, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ProvisionalRevEst[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            }

                                                         </td>
                                                         <td style= "background-color: aliceblue;">
                                                            @if (DelegateEditStatus && User.IsInRole("Admin"))
                                                            {
                                                                <div>
                                                                    @{
                                                                        Model.ActPrevFin.Insert(Count, Convert.ToDecimal(0.00));
                                                                    }   
                                                                    @Html.TextBoxFor(model => model.ActPrevFin[Count], new { @maxlength = "20", @class = "form-control", @id = @name2, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ActPrevFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            }
                                                            else if (@Subs.RequireInput)
                                                            {
                                                                var LedgerSumActPrevFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActPrevFin).Sum();
                                                                 <div class="form-group">  
                                                                    @{
                                                                        Model.ActPrevFin.Insert(Count, LedgerSumActPrevFin != null ? Convert.ToDecimal(LedgerSumActPrevFin) : Convert.ToDecimal(0.00));
                                                                    }   
                                                                    @Html.TextBoxFor(model => model.ActPrevFin[Count], new { @maxlength = "20", @class = "form-control", @id = @name2, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ActPrevFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                 </div>

                                                            }
                                                            else if ((!DelegateEditStatus) || (!User.IsInRole("Admin") && IsDelegateSaved && Model.EditEnabled != @Subs.SubGroupNo))
                                                            {
                                                               <div class="form-group">
                                                                    @{ 
                                                                        Model.ActPrevFin.Insert(Count, details != null ? Convert.ToDecimal(details.ActPrevFin) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.ActPrevFin[Count], new { @maxlength = "20", @class = "form-control", @id = @name2, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ActPrevFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                               </div>

                                                            }
                                                            else
                                                            {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ActPrevFin.Insert(Count, details != null ? Convert.ToDecimal(details.ActPrevFin) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.ActPrevFin[Count], new { @maxlength = "20", @class = "form-control", @id = @name2, @dir = "rtl" })
                                                                    @Html.ValidationMessageFor(model => model.ActPrevFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>

                                                            }
                                                         </td>
                                                         <td style= "background-color: aliceblue;">
                                                            @if (DelegateEditStatus && User.IsInRole("Admin"))
                                                            {
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ActCurrFinTillsecondQuart.Insert(Count, Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[Count], new { @class = "form-control", @id = @name3, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            }

                                                            else if (@Subs.RequireInput)
                                                            {
                                                                var LedgerSumActCurrFinTill2ndQuart = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ActCurrFinTill2ndQuart).Sum();
                                                                 <div class="form-group">
                                                                    @{
                                                                        Model.ActCurrFinTillsecondQuart.Insert(Count, LedgerSumActCurrFinTill2ndQuart != null ? Convert.ToDecimal(LedgerSumActCurrFinTill2ndQuart) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[Count], new { @class = "form-control", @id = @name3, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                 </div>

                                                            }
                                                            else if (!DelegateEditStatus || (!User.IsInRole("Admin") && IsDelegateSaved && Model.EditEnabled != @Subs.SubGroupNo))
                                                            {                                       
                                                               <div class="form-group">
                                                                    @{
                                                                        Model.ActCurrFinTillsecondQuart.Insert(Count, details != null ? Convert.ToDecimal(details.ActCurrFinTill2ndQuart) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[Count], new { @class = "form-control", @id = @name3, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                               </div>

                                                            }
                                                            else
                                                            {
                                                                <div class="form-group">
                                                                    @{ 
                                                                        Model.ActCurrFinTillsecondQuart.Insert(Count, details != null ? Convert.ToDecimal(details.ActCurrFinTill2ndQuart) : Convert.ToDecimal(0.00));
                                                                    } 
                                                                    @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[Count], new { @class = "form-control", @dir = "rtl", @id = @name3 })
                                                                    @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>

                                                            }
                                                         </td>
                                                         <td style= "background-color: aliceblue;">
                                                            @if (@Subs.RequireInput && DelegateEditStatus && !IsDelegateSaved)
                                                            {
                                                                var PastYearBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();
                                                                <div class="form-group">
                                                                    @{ 
                                                                        Model.RevEstCurrFin.Insert(Count, PastYearBudEstCurrFin != null ? Convert.ToDecimal(PastYearBudEstCurrFin) : Convert.ToDecimal(0.00));
                                                                    } 
                                                                    @Html.TextBoxFor(model => model.RevEstCurrFin[Count], new { @class = "form-control", @id = @name4, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.RevEstCurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>

                                                            }
                                                            else if ((@Subs.RequireInput && !DelegateEditStatus) || (@Subs.RequireInput && !User.IsInRole("Admin") && IsDelegateSaved && Model.EditEnabled != @Subs.SubGroupNo))
                                                            {
                                                                var PastYearBudEstCurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.RevEstCurrFin).Sum();
                                                                <div class="form-group">
                                                                    @{   
                                                                        Model.RevEstCurrFin.Insert(Count, PastYearBudEstCurrFin != null ? Convert.ToDecimal(PastYearBudEstCurrFin) : Convert.ToDecimal(0.00));
                                                                    }   
                                                                    @Html.TextBoxFor(model => model.RevEstCurrFin[Count], new { @class = "form-control", @id = @name4, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.RevEstCurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                               </div>
                                                            }
                                                            else if (User.IsInRole("Admin") && DelegateEditStatus)
                                                            {
                                                                <div class="form-group">
                                                                    @{  
                                                                        Model.RevEstCurrFin.Insert(Count, PrevYearApp != null ? Convert.ToDecimal(PrevYearApp.BudEstNextFin) : Convert.ToDecimal(0.00));
                                                                    }  
                                                                    @Html.TextBoxFor(model => model.RevEstCurrFin[Count], new { @class = "form-control", @id = @name4, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.RevEstCurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                </div>
                                                            }
                                                            else if (!DelegateEditStatus || (!User.IsInRole("Admin") && IsDelegateSaved && Model.EditEnabled != @Subs.SubGroupNo))
                                                            {
                                                                                          <div class="form-group">
                                                                    @{    
                                                                        Model.RevEstCurrFin.Insert(Count, details != null ? Convert.ToDecimal(details.RevEstCurrFin) : Convert.ToDecimal(0.00));
                                                                    }  
                                                                    @Html.TextBoxFor(model => model.RevEstCurrFin[Count], new { @class = "form-control", @id = @name4, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.RevEstCurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                          </div> 
                                                            }
                                                            else
                                                            {
                                                                                        <div class="form-group">
                                                                    @if (details != null && !@details.ProvisionalRevEst.Equals(Convert.ToDecimal(0.00)) && !IsDelegateSaved)
                                                                    {
                                                                        Model.RevEstCurrFin.Insert(Count, details != null ? Convert.ToDecimal(@details.ProvisionalRevEst) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    else
                                                                    {
                                                                        Model.RevEstCurrFin.Insert(Count, PrevYearApp != null ? Convert.ToDecimal(PrevYearApp.BudEstNextFin) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.RevEstCurrFin[Count], new { @class = "form-control", @dir = "rtl", @id = @name4 })
                                                                    @Html.ValidationMessageFor(model => model.RevEstCurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                        </div>
                                                            }
                                                                                </td>
                                                                                <td style= "background-color: aliceblue;">
                                                            @if (@Subs.RequireInput && DelegateEditStatus && !IsDelegateSaved)
                                                            {

                                                                var PastYearSumBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();                                                                                                                           
                                                                                          <div class="form-group">
                                                                    @{
                                                                        Model.PerVarRevEstOverBudgEstCurrFin.Insert(Count, PastYearSumBudEstCurrFin != Convert.ToDecimal(0.0000) ? (((Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F4")) - Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F4"))) / Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F4"))) * 100).ToString("F2") : (0).ToString("F2"));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count], "{0:#.##}%", new { @class = "form-control", @id = @name5, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                            </div>
                                                            }
                                                            else if ((@Subs.RequireInput && !DelegateEditStatus) || (@Subs.RequireInput && !User.IsInRole("Admin") && IsDelegateSaved))
                                                            {
                                                                var LedgerSumRevEstCurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.RevEstCurrFin).Sum();
                                                                var LedgerSumBudEstCurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstCurrFin).Sum();
                                                                                            <div class="form-group">
                                                                    @{
                                                                        Model.PerVarRevEstOverBudgEstCurrFin.Insert(Count, LedgerSumBudEstCurrFin != Convert.ToDecimal(0.0000) ? (((Convert.ToDecimal(LedgerSumRevEstCurrFin.ToString("F4")) - Convert.ToDecimal(LedgerSumBudEstCurrFin.ToString("F4"))) / Convert.ToDecimal(LedgerSumBudEstCurrFin.ToString("F4"))) * 100).ToString("F2") : (0).ToString("F2"));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count], "{0:#.##}%", new { @class = "form-control", @id = @name5, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                            </div>
                                                            }

                                                            else if (!DelegateEditStatus || (!User.IsInRole("Admin") && IsDelegateSaved))
                                                            {
                                                                                        <div class="form-group">
                                                                    @{
                                                                        Model.PerVarRevEstOverBudgEstCurrFin.Insert(Count, (details != null && details.BudEstCurrFin != Convert.ToDecimal(0.0000)) ? (((Convert.ToDecimal(details.RevEstCurrFin.ToString("F4")) - Convert.ToDecimal(details.BudEstCurrFin.ToString("F4"))) / Convert.ToDecimal(details.BudEstCurrFin.ToString("F4"))) * 100).ToString("F2") : (0).ToString("F2"));
                                                                    } 
                                                                    @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count], "{0:#.##}%", new { @class = "form-control", @id = @name5, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                        </div>
                                                            }
                                                            else
                                                            {
                                                                                            <div class="form-group">
                                                                    @{
                                                                        Model.PerVarRevEstOverBudgEstCurrFin.Insert(Count, (PrevYearApp != null && PrevYearApp.BudEstNextFin != Convert.ToDecimal(0.0000)) ? (((Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F4")) - Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F4"))) / Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F4"))) * 100).ToString("F2") : (0).ToString("F2"));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count], "{0:#.##}%", new { @class = "form-control", @id = @name5, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstCurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                            </div>
                                                            }
                                                                                </td>

                                                                                <td style= "background-color: aliceblue;">
                                                            @if ((!DelegateEditStatus && !@Subs.RequireInput) || (!User.IsInRole("Admin") && IsDelegateSaved))
                                                            {
                                                                                                                        <div class="form-group">
                                                                    @{  
                                                                        Model.DelegateJustificationRevEst.Insert(Count, (details != null && details.DelegateJustificationRevEst != null) ? details.DelegateJustificationRevEst.ToString() : "");
                                                                    }  
                                                                    @Html.TextBoxFor(model => model.DelegateJustificationRevEst[Count], new { @class = "form-control", @id = @name14, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.DelegateJustificationRevEst[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                    </div>

                                                            }
                                                            else if ((User.IsInRole("Admin") && DelegateEditStatus) || @Subs.RequireInput)
                                                            {
                                                                                                                    <div class="form-group">
                                                                    @{  
                                                                        Model.DelegateJustificationRevEst.Insert(Count, "");
                                                                    }  
                                                                    @Html.TextBoxFor(model => model.DelegateJustificationRevEst[Count], new { @class = "form-control", @id = @name14, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.DelegateJustificationRevEst[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                    </div>
                                                            }
                                                            else
                                                            {
                                                                                                                    <div class="form-group">
                                                                    @{ 
                                                                        Model.DelegateJustificationRevEst.Insert(Count, (details != null && details.DelegateJustificationRevEst != null) ? details.DelegateJustificationRevEst.ToString() : "");
                                                                    }   
                                                                    @Html.TextAreaFor(model => model.DelegateJustificationRevEst[Count], new { @class = "form-control", @id = @name14 })
                                                                    @Html.ValidationMessageFor(model => model.DelegateJustificationRevEst[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                    </div>

                                                            }
                                                                                </td>
                                                        @if (((User.IsInRole("Admin") && (AdminEditStatus || !AdminEditStatus)) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0)) && @Subs.RequireInput)
                                                        {
                                                            var LedgerSumACAndBWPropRECurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRECurrFin).Sum();
                                                                                        <td style= "background-color: aliceblue;">
                                                                                          <div class="form-group">
                                                                    @{
                                                                        Model.ACAndBWPropRECurrFin.Insert(Count, LedgerSumACAndBWPropRECurrFin != null ? Convert.ToDecimal(LedgerSumACAndBWPropRECurrFin) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.ACAndBWPropRECurrFin[Count], new { @class = "form-control", @id = @name6, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ACAndBWPropRECurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                          </div>
                                                                                        </td>
                                                        }
                                                        else if (User.IsInRole("Admin") && !@Subs.RequireInput && AdminEditStatus && (!IsAdminSaved || (Model.EditEnabled == @Subs.SubGroupNo)))
                                                        {
                                                                                        <td style= "background-color: aliceblue;">
                                                                                            <div class="form-group">
                                                                    @{ 
                                                                        Model.ACAndBWPropRECurrFin.Insert(Count, details != null ? Convert.ToDecimal(details.ACAndBWPropRECurrFin) : Convert.ToDecimal(0.00));
                                                                    } 
                                                                    @Html.TextBoxFor(model => model.ACAndBWPropRECurrFin[Count], new { @class = "form-control", @id = @name6 })
                                                                    @Html.ValidationMessageFor(model => model.ACAndBWPropRECurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                            </div>
                                                                                        </td>
                                                        }
                                                        else if (((User.IsInRole("Admin") && (!AdminEditStatus || IsAdminSaved)) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0)) && !@Subs.RequireInput)
                                                        {
                                                                                        <td style= "background-color: aliceblue;">
                                                                                            <div class="form-group">
                                                                    @{   
                                                                        Model.ACAndBWPropRECurrFin.Insert(Count, details != null ? Convert.ToDecimal(details.ACAndBWPropRECurrFin) : Convert.ToDecimal(0.00));
                                                                    } 
                                                                    @Html.TextBoxFor(model => model.ACAndBWPropRECurrFin[Count], new { @class = "form-control", @id = @name6, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ACAndBWPropRECurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                            </div>
                                                                                        </td>
                                                        }
                                                        @*else if (User.IsInRole("Admin") && @Subs.RequireInput && !AdminEditStatus)
                                                        {
                                                            var LedgerSumACAndBWPropRECurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRECurrFin).Sum();
                                                            <td>
                                                                <div class="form-group">
                                                                    @{
                                                                        Model.ACAndBWPropRECurrFin.Insert(Count, LedgerSumACAndBWPropRECurrFin!=null ? Convert.ToDecimal(LedgerSumACAndBWPropRECurrFin) : Convert.ToDecimal(0.00));
                                                                    }
                                                                Html.TextBox(@name6, @dir = "rtl", details!=null ? details.ACAndBWPropRECurrFin.ToString("F4") : " ", new { @class = "form-control", @id = @name6, @dir = "rtl", @readonly = "readonly"})
                                                                @Html.ValidationMessage(@name6, @dir = "rtl",  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"})
                                                                    @Html.TextBoxFor(model => model.ACAndBWPropRECurrFin[Count], new { @class = "form-control", @id = @name6, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ACAndBWPropRECurrFin[Count],null, new { @class = "text-danger" })
                                                                </div>
                                                            </td>
                                                        }*@

                                                        else
                                                        {
                                                            Model.ACAndBWPropRECurrFin.Insert(Count, Convert.ToDecimal(0.00));

                                                        }

                                                        @if (User.IsInRole("Admin") && @Subs.RequireInput && AdminEditStatus && !IsAdminSaved)
                                                        {
                                                            var PastYearSumBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();                                                                                                                           
                                                                                     <td style= "background-color: aliceblue;">
                                                                                          <div class="form-group">
                                                                    @{
                                                                        Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(Count, PastYearSumBudEstCurrFin != Convert.ToDecimal(0.0000) ? (((Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F4")) - Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F4"))) / Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F4"))) * 100).ToString("F2") : (0).ToString("F2"));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count], "{0:#.##}%", new { @class = "form-control", @id = @name17, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                            </div>
                                                                                     </td>

                                                        }
                                                        else if ((User.IsInRole("Admin") && @Subs.RequireInput && IsAdminSaved))
                                                        {
                                                            var LedgerSumACAndBWPropRECurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRECurrFin).Sum();
                                                            var LedgerSumBudEstCurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstCurrFin).Sum();
                                                                                        <td style= "background-color: aliceblue;">
                                                                                            <div class="form-group">
                                                                    @{
                                                                        Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(Count, LedgerSumBudEstCurrFin != Convert.ToDecimal(0.0000) ? (((Convert.ToDecimal(LedgerSumACAndBWPropRECurrFin.ToString("F4")) - Convert.ToDecimal(LedgerSumBudEstCurrFin.ToString("F4"))) / Convert.ToDecimal(LedgerSumBudEstCurrFin.ToString("F4"))) * 100).ToString("F2") : (0).ToString("F2"));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count], "{0:#.##}%", new { @class = "form-control", @id = @name17, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                            </div>
                                                                                        </td>
                                                        }

                                                        else if (User.IsInRole("Admin") && IsAdminSaved)
                                                        {
                                                                                      <td style= "background-color: aliceblue;">
                                                                                        <div class="form-group">
                                                                    @{
                                                                        Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(Count, (details != null && details.BudEstCurrFin != Convert.ToDecimal(0.0000)) ? (((Convert.ToDecimal(details.ACAndBWPropRECurrFin.ToString("F4")) - Convert.ToDecimal(details.BudEstCurrFin.ToString("F4"))) / Convert.ToDecimal(details.BudEstCurrFin.ToString("F4"))) * 100).ToString("F2") : (0).ToString("F2"));
                                                                    } 
                                                                    @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count], "{0:#.##}%", new { @class = "form-control", @id = @name17, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                        </div>
                                                                                      </td>
                                                        }
                                                        else if (User.IsInRole("Admin") && !IsAdminSaved)
                                                        {
                                                                                        <td style= "background-color: aliceblue;">
                                                                                            <div class="form-group">
                                                                    @{
                                                                        Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(Count, (PrevYearApp != null && PrevYearApp.BudEstNextFin != Convert.ToDecimal(0.0000)) ? (((Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F4")) - Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F4"))) / Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F4"))) * 100).ToString("F2") : (0).ToString("F2"));
                                                                    }
                                                                    @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count], "{0:#.##}%", new { @class = "form-control", @id = @name17, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                            </div>
                                                                                         </td>
                                                        }
                                                        else
                                                        {
                                                            Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(Count, (0).ToString("F2"));
                                                        }

                                                        @if (User.IsInRole("Admin") && AdminEditStatus && !@Subs.RequireInput && (!IsAdminSaved || (Model.EditEnabled == @Subs.SubGroupNo)))
                                                        {
                                                                                                                    <td style= "background-color: aliceblue;">
                                                                                                                        <div class="form-group"> 
                                                                    @{
                                                                        Model.ACBWJustificationRevEst.Insert(Count, details != null && details.ACBWJustificationRevEst != null && details.ACBWJustificationRevEst != " " ? details.ACBWJustificationRevEst.ToString() : " ");
                                                                    }

                                                                    @Html.TextBoxFor(model => model.ACBWJustificationRevEst[Count], new { @class = "form-control", @id = @name15 })
                                                                    @Html.ValidationMessageFor(model => model.ACBWJustificationRevEst[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                        </div>
                                                                                                                    </td>
                                                        }
                                                        else if ((User.IsInRole("Admin") && (!AdminEditStatus || IsAdminSaved)) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                        {
                                                                                                                  <td style= "background-color: aliceblue;">
                                                                                                                      <div class="form-group">
                                                                    @{
                                                                        Model.ACBWJustificationRevEst.Insert(Count, (details != null && details.ACBWJustificationRevEst != " " && details.ACBWJustificationRevEst != null) ? details.ACBWJustificationRevEst.ToString() : "");
                                                                    }

                                                                    @Html.TextBoxFor(model => model.ACBWJustificationRevEst[Count], new { @class = "form-control", @id = @name15, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ACBWJustificationRevEst[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                      </div>
                                                                                                                    </td>
                                                        }
                                                        else if (User.IsInRole("Admin") && (DelegateEditStatus || @Subs.RequireInput))
                                                        {
                                                                                                                    <td style= "background-color: aliceblue;">
                                                                                                                    <div class="form-group">
                                                                    @{  
                                                                        Model.ACBWJustificationRevEst.Insert(Count, "");
                                                                    }  
                                                                    @Html.TextBoxFor(model => model.ACBWJustificationRevEst[Count], new { @class = "form-control", @id = @name14, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ACBWJustificationRevEst[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                    </div>
                                                                                                                    </td>
                                                        }
                                                        else
                                                        {
                                                            Model.ACBWJustificationRevEst.Insert(Count, " ");
                                                        }
                                                                                <td style= "background-color:whitesmoke;">
                                                            @if (@Subs.RequireInput && DelegateEditStatus && !IsDelegateSaved)
                                                            {
                                                                var PastYearBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();
                                                                                        <div class="form-group">
                                                                    @{
                                                                        Model.BudgEstNexFin.Insert(Count, PastYearBudEstCurrFin != null ? Convert.ToDecimal(PastYearBudEstCurrFin) : Convert.ToDecimal(0.00));
                                                                    }

                                                                    @Html.TextBoxFor(model => model.BudgEstNexFin[Count], new { @class = "form-control", @id = @name7, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.BudgEstNexFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                        </div>
                                                            }
                                                            else if ((@Subs.RequireInput && !DelegateEditStatus) || (@Subs.RequireInput && !User.IsInRole("Admin") && IsDelegateSaved && Model.EditEnabled != @Subs.SubGroupNo))
                                                            {
                                                                var ThisYearBudEstNextFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudgEstNexFin).Sum();
                                                                                        <div class="form-group">
                                                                    @{
                                                                        Model.BudgEstNexFin.Insert(Count, ThisYearBudEstNextFin != null ? Convert.ToDecimal(ThisYearBudEstNextFin) : Convert.ToDecimal(0.00));
                                                                    }

                                                                    @Html.TextBoxFor(model => model.BudgEstNexFin[Count], new { @class = "form-control", @id = @name7, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.BudgEstNexFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                        </div>
                                                            }
                                                            else if (User.IsInRole("Admin") && DelegateEditStatus)
                                                            {
                                                                                        <div class="form-group">
                                                                    @{
                                                                        Model.BudgEstNexFin.Insert(Count, PrevYearApp != null ? Convert.ToDecimal(PrevYearApp.BudEstNextFin) : Convert.ToDecimal(0.00));
                                                                    }

                                                                    @Html.TextBoxFor(model => model.BudgEstNexFin[Count], new { @class = "form-control", @id = @name7, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.BudgEstNexFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                        </div>

                                                            }
                                                            else if (!DelegateEditStatus || (!User.IsInRole("Admin") && IsDelegateSaved && Model.EditEnabled != @Subs.SubGroupNo))
                                                            {
                                                                                          <div class="form-group">
                                                                    @{
                                                                        Model.BudgEstNexFin.Insert(Count, details != null ? Convert.ToDecimal(details.BudgEstNexFin) : Convert.ToDecimal(0.00));
                                                                    }

                                                                    @Html.TextBoxFor(model => model.BudgEstNexFin[Count], new { @class = "form-control", @id = @name7, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.BudgEstNexFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                          </div>
                                                            }
                                                            else
                                                            {
                                                                                        <div class="form-group">
                                                                    @if (details != null && !@details.ProvisionalRevEst.Equals(Convert.ToDecimal(0.00)) && !IsDelegateSaved)
                                                                    {
                                                                        Model.BudgEstNexFin.Insert(Count, details != null ? Convert.ToDecimal(details.ProvisionalRevEst) : Convert.ToDecimal(0.00));
                                                                    }
                                                                    else
                                                                    {
                                                                        Model.BudgEstNexFin.Insert(Count, PrevYearApp != null ? Convert.ToDecimal(PrevYearApp.BudEstNextFin) : Convert.ToDecimal(0.00));
                                                                    }

                                                                    @Html.TextBoxFor(model => model.BudgEstNexFin[Count], new { @class = "form-control", @dir = "rtl", @id = @name7 })
                                                                    @Html.ValidationMessageFor(model => model.BudgEstNexFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                        </div>

                                                            }
                                                                                </td>
                                                                                <td style= "background-color:whitesmoke;">
                                                            @if (@Subs.RequireInput && DelegateEditStatus && !IsDelegateSaved)
                                                            {

                                                                var PastYearSumBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();
                                                                                            <div class="form-group">
                                                                    @{
                                                                        Model.PerVarRevEstOverBudgEstNxtFin.Insert(Count, PastYearSumBudEstCurrFin != Convert.ToDecimal(0.0000) ? (((Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F4")) - Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F4"))) / Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F4"))) * 100).ToString("F2") : (0).ToString("F2"));
                                                                    }

                                                                    @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count], "{0:#.##}%", new { @class = "form-control", @id = @name8, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                            </div>
                                                            }
                                                            else if ((@Subs.RequireInput && !DelegateEditStatus) || (@Subs.RequireInput && !User.IsInRole("Admin") && IsDelegateSaved))
                                                            {
                                                                var LedgerSumRevEstCurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.RevEstCurrFin).Sum();
                                                                var LedgerSumBudEstNextFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudgEstNexFin).Sum();
                                                                                            <div class="form-group">
                                                                    @{
                                                                        Model.PerVarRevEstOverBudgEstNxtFin.Insert(Count, LedgerSumBudEstNextFin != Convert.ToDecimal(0.0000) ? (((Convert.ToDecimal(LedgerSumBudEstNextFin.ToString("F4")) - Convert.ToDecimal(LedgerSumRevEstCurrFin.ToString("F4"))) / Convert.ToDecimal(LedgerSumRevEstCurrFin.ToString("F4"))) * 100).ToString("F2") : (0).ToString("F2"));
                                                                    }

                                                                    @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count], "{0:#.##}%", new { @class = "form-control", @id = @name8, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                            </div>
                                                            }

                                                            else if (User.IsInRole("Admin") || !DelegateEditStatus || (!User.IsInRole("Admin") && IsDelegateSaved))
                                                            {
                                                                                            <div class="form-group">
                                                                    @{
                                                                        Model.PerVarRevEstOverBudgEstNxtFin.Insert(Count, (details != null && details.RevEstCurrFin != Convert.ToDecimal(0.0000)) ? (((Convert.ToDecimal(details.BudgEstNexFin.ToString("F4")) - Convert.ToDecimal(details.RevEstCurrFin.ToString("F4"))) / Convert.ToDecimal(details.RevEstCurrFin.ToString("F4"))) * 100).ToString("F2") : (0).ToString("F2"));
                                                                    }

                                                                    @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count], "{0:#.##}%", new { @class = "form-control", @id = @name8, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                            </div>
                                                            }
                                                            else
                                                            {
                                                                                           <div class="form-group">
                                                                    @{
                                                                        Model.PerVarRevEstOverBudgEstNxtFin.Insert(Count, (PrevYearApp != null && PrevYearApp.BudEstNextFin != Convert.ToDecimal(0.0000)) ? (((Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F4")) - Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F4"))) / Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F4"))) * 100).ToString("F2") : (0).ToString("F2"));
                                                                    }

                                                                    @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count], "{0:#.##}%", new { @class = "form-control", @id = @name8, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstNxtFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                            </div>
                                                            }
                                                                                </td>
                                                                                <td style= "background-color:whitesmoke;">
                                                            @if ((!DelegateEditStatus && !@Subs.RequireInput) || (!User.IsInRole("Admin") && IsDelegateSaved && Model.EditEnabled != @Subs.SubGroupNo))
                                                            {
                                                                                        <div class="form-group">
                                                                    @{
                                                                        Model.Justification.Insert(Count, (details != null && details.Justification != null) ? details.Justification.ToString() : "");
                                                                    }

                                                                    @Html.TextBoxFor(model => model.Justification[Count], new { @class = "form-control", @id = @name10, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.Justification[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                        </div>
                                                            }
                                                            else if ((User.IsInRole("Admin") && DelegateEditStatus) || @Subs.RequireInput)
                                                            {
                                                                                         <div class="form-group">
                                                                    @{
                                                                        Model.Justification.Insert(Count, "");
                                                                    }

                                                                    @Html.TextBoxFor(model => model.Justification[Count], new { @class = "form-control", @id = @name10, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.Justification[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                        </div>   
                                                            }
                                                            else
                                                            {                                                                                                             
                                                                                        <div class="form-group">
                                                                    @{
                                                                        Model.Justification.Insert(Count, (details != null && details.Justification != null) ? details.Justification.ToString() : "");
                                                                    }
                                                                    @*Html.TextArea(@name10, @dir = "rtl", details!=null ? details.Justification.ToString() : " ", new { @class = "form-control", @id = @name10})
                                                                 @Html.ValidationMessage(@name10, @dir = "rtl",  " ",new {@class = "text-danger", @style="font-size: 0.8em;font-style: italic;"}) *@
                                                                    @Html.TextAreaFor(model => model.Justification[Count], new { @class = "form-control", @id = @name10 })
                                                                    @Html.ValidationMessageFor(model => model.Justification[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                        </div>
                                                            }
                                                                                </td>
                                                        @if (((User.IsInRole("Admin") && (AdminEditStatus || !AdminEditStatus)) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0)) && @Subs.RequireInput)
                                                        {
                                                            var LedgerSumACAndBWPropRENxtFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRENxtFin).Sum();
                                                                                        <td style= "background-color:whitesmoke;">
                                                                                            <div class="form-group">
                                                                    @{
                                                                        Model.ACAndBWPropRENxtFin.Insert(Count, LedgerSumACAndBWPropRENxtFin != null ? Convert.ToDecimal(LedgerSumACAndBWPropRENxtFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                    }

                                                                    @Html.TextBoxFor(model => model.ACAndBWPropRENxtFin[Count], new { @class = "form-control", @id = @name9, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ACAndBWPropRENxtFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                            </div>
                                                                                        </td>
                                                        }
                                                        else if (User.IsInRole("Admin") && !@Subs.RequireInput && AdminEditStatus && (!IsAdminSaved || (Model.EditEnabled == @Subs.SubGroupNo)))
                                                        {
                                                                                        <td style= "background-color:whitesmoke;">
                                                                                            <div class="form-group">
                                                                    @{
                                                                        Model.ACAndBWPropRENxtFin.Insert(Count, details != null ? Convert.ToDecimal(details.ACAndBWPropRENxtFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                    }

                                                                    @Html.TextBoxFor(model => model.ACAndBWPropRENxtFin[Count], new { @class = "form-control", @id = @name9 })
                                                                    @Html.ValidationMessageFor(model => model.ACAndBWPropRENxtFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                            </div>
                                                                                        </td>
                                                        }
                                                        else if (((User.IsInRole("Admin") && (!AdminEditStatus || IsAdminSaved)) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0)) && !@Subs.RequireInput)
                                                        {
                                                                                        <td style= "background-color:whitesmoke;">
                                                                                            <div class="form-group">
                                                                    @{
                                                                        Model.ACAndBWPropRENxtFin.Insert(Count, details != null ? Convert.ToDecimal(details.ACAndBWPropRENxtFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                    }

                                                                    @Html.TextBoxFor(model => model.ACAndBWPropRENxtFin[Count], new { @class = "form-control", @id = @name9, @dir = "rtl", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ACAndBWPropRENxtFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                            </div>

                                                                                        </td>
                                                        }
                                                        
                                                        else
                                                        {
                                                            Model.ACAndBWPropRENxtFin.Insert(Count, Convert.ToDecimal(0.00));
                                                        }

                                                        @if (User.IsInRole("Admin") && @Subs.RequireInput && AdminEditStatus && !IsAdminSaved)
                                                        {
                                                            var PastYearSumBudEstCurrFin = (from a in Model.Approved where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.BudEstNextFin).Sum();
                                                                                            <td style= "background-color:whitesmoke;">
                                                                                            <div class="form-group">
                                                                    @{
                                                                        Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(Count, PastYearSumBudEstCurrFin != Convert.ToDecimal(0.0000) ? (((Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F4")) - Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F4"))) / Convert.ToDecimal(PastYearSumBudEstCurrFin.ToString("F4"))) * 100).ToString("F2") : (0).ToString("F2"));
                                                                    }

                                                                    @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count], "{0:#.##}%", new { @class = "form-control", @id = @name18, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                            </div>
                                                                                            </td>
                                                        }
                                                        else if (User.IsInRole("Admin") && @Subs.RequireInput && IsAdminSaved)
                                                        {
                                                            var LedgerSumACAndBWPropRECurrFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRECurrFin).Sum();
                                                            var LedgerSumACAndBWPropRENxtFin = (from a in Model.Detailss where a.SubGroupNumber.Equals(@Subs.SubGroupNo) select a.ACAndBWPropRENxtFin).Sum();
                                                                                          <td style= "background-color:whitesmoke;">
                                                                                            <div class="form-group">
                                                                    @{
                                                                        Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(Count, LedgerSumACAndBWPropRENxtFin != Convert.ToDecimal(0.0000) ? (((Convert.ToDecimal(LedgerSumACAndBWPropRENxtFin.ToString("F4")) - Convert.ToDecimal(LedgerSumACAndBWPropRECurrFin.ToString("F4"))) / Convert.ToDecimal(LedgerSumACAndBWPropRECurrFin.ToString("F4"))) * 100).ToString("F2") : (0).ToString("F2"));
                                                                    }

                                                                    @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count], "{0:#.##}%", new { @class = "form-control", @id = @name18, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                            </div>
                                                                                         </td>
                                                        }

                                                        else if (User.IsInRole("Admin") && IsAdminSaved)
                                                        {
                                                                                            <td style= "background-color:whitesmoke;">
                                                                                            <div class="form-group">
                                                                    @{
                                                                        Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(Count, (details != null && details.ACAndBWPropRECurrFin != Convert.ToDecimal(0.0000)) ? (((Convert.ToDecimal(details.ACAndBWPropRENxtFin.ToString("F4")) - Convert.ToDecimal(details.ACAndBWPropRECurrFin.ToString("F4"))) / Convert.ToDecimal(details.ACAndBWPropRECurrFin.ToString("F4"))) * 100).ToString("F2") : (0).ToString("F2"));
                                                                    }

                                                                    @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count], "{0:#.##}%", new { @class = "form-control", @id = @name18, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                            </div>
                                                                                            </td>
                                                        }
                                                        else if (User.IsInRole("Admin") && !IsAdminSaved)
                                                        {
                                                                                            <td style= "background-color:whitesmoke;">
                                                                                            <div class="form-group"> 
                                                                    @{
                                                                        Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(Count, (PrevYearApp != null && PrevYearApp.BudEstNextFin != Convert.ToDecimal(0.0000)) ? (((Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F4")) - Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F4"))) / Convert.ToDecimal(PrevYearApp.BudEstNextFin.ToString("F4"))) * 100).ToString("F2") : (0).ToString("F2"));
                                                                    }

                                                                    @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count], "{0:#.##}%", new { @class = "form-control", @id = @name18, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                            </div>
                                                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(Count, (0).ToString("F2"));
                                                        }
                                                        @if (User.IsInRole("Admin") && AdminEditStatus && !@Subs.RequireInput && (!IsAdminSaved || (Model.EditEnabled == @Subs.SubGroupNo)))
                                                        {
                                                                                                                    <td style= "background-color:whitesmoke;">
                                                                                                                        <div class="form-group"> 
                                                                    @{
                                                                        Model.ACBWJustificationBudgEstNxtFin.Insert(Count, details != null && details.ACBWJustificationBudgEstNxtFin != null && details.ACBWJustificationBudgEstNxtFin != " " ? details.ACBWJustificationBudgEstNxtFin.ToString() : " ");
                                                                    }

                                                                    @Html.TextBoxFor(model => model.ACBWJustificationBudgEstNxtFin[Count], new { @class = "form-control", @id = @name16 })
                                                                    @Html.ValidationMessageFor(model => model.ACBWJustificationBudgEstNxtFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                        </div>
                                                                                                                    </td>
                                                        }
                                                        else if ((User.IsInRole("Admin") && (!AdminEditStatus || IsAdminSaved) && !@Subs.RequireInput) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                        {
                                                                                                                  <td style= "background-color:whitesmoke;">
                                                                                                                      <div class="form-group">
                                                                    @{
                                                                        Model.ACBWJustificationBudgEstNxtFin.Insert(Count, details != null && details.ACBWJustificationBudgEstNxtFin != null && details.ACBWJustificationBudgEstNxtFin != " " ? details.ACBWJustificationBudgEstNxtFin.ToString() : "");
                                                                    }

                                                                    @Html.TextBoxFor(model => model.ACBWJustificationBudgEstNxtFin[Count], new { @class = "form-control", @id = @name16, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ACBWJustificationBudgEstNxtFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                      </div>
                                                                                                                    </td>
                                                        }
                                                        else if (User.IsInRole("Admin") && (DelegateEditStatus || @Subs.RequireInput))
                                                        {
                                                                                        <td style= "background-color:whitesmoke;">
                                                                                         <div class="form-group">
                                                                    @{
                                                                        Model.ACBWJustificationBudgEstNxtFin.Insert(Count, "");
                                                                    }

                                                                    @Html.TextBoxFor(model => model.ACBWJustificationBudgEstNxtFin[Count], new { @class = "form-control", @id = @name16, @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.ACBWJustificationBudgEstNxtFin[Count], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                        </div>   
                                                                                        </td>
                                                        }
                                                        else
                                                        {
                                                            Model.ACBWJustificationBudgEstNxtFin.Insert(Count, " ");
                                                        }
                                                       <td  style="background-color:honeydew;"> 

                                                            @if (!@Subs.RequireInput)
                                                            {
                                                               <table class="table">
                                                                   <thead> </thead>
                                                                   <tbody>
                                                                        @foreach (var Files in Model.Filess.Where(a => a.SubGroupNumber.Equals(@Subs.SubGroupNo)))
                                                                        {
                                                                            var FinalSubmitStatus = (from a in Model.Statuss where (a.SectionNumber == 0 && a.GroupNumber.Equals("0")) select a.AdminEditStatus).Count();
                                                                                                                     <tr>
                                                                                @if ((User.IsInRole("Admin") && AdminEditStatus) || !User.IsInRole("Admin") || (User.IsInRole("Admin") && FinalSubmitStatus > 0))
                                                                                {
                                                                                                                           <td style="border:none">@Html.ActionLink(@Files.FileName, null, null, null, new { href = @Files.SupportingDocumentPath, target = "_blank" })</td>
                                                                                    /*<td><input id="@view" class="ViewFile  btn-link" style="border:none; outline:none;  background-color: transparent;" formaction="~/Tabs/ViewFile" type="submit" value= "@Files.FileName" /></td>*/
                                                                                }
                                                                                @if (!User.IsInRole("Admin") && GroupsStatusRowCount == 0 && !IsDelegateSaved)
                                                                                {
                                                                                                                               <td style="border:none"><input id="@delete" class="Submit  btn-link" style="border:none; outline:none;  background-color: transparent;" formaction="~/Tabs/Delete" type="submit" value="Delete"/></td>
                                                                                }
                                                                                                                     </tr>      

                                                                        }
                                                                   </tbody>
                                                               </table>
                                                            }
                                                       </td>
                                                       <td style="background-color:honeydew;"></td>
                                                       
                                                </tr>

                                                    @if (LedgerCount > 0)
                                                    {
                                                        LedgerNo = ++Count;
                                                        @foreach (var Ledgers in Model.Ledgerss.Where(d => d.SubGroupNo.Equals(@Subs.SubGroupNo)))
                                                        {

                                                            var Ledgerdetails = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a).FirstOrDefault();
                                                            var LedPrevYearApp = (from a in Model.Approved where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a).FirstOrDefault();

                                                            Boolean LedgerIsDelegateSaved = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.HasDelegateSaved).FirstOrDefault();
                                                            Boolean LedgerIsAdminSaved = (from a in Model.Detailss where (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo)) select a.HasAdminSaved).FirstOrDefault();

                                                           <tr>
                                                                                                                <!--td></td -->
                                                                 <td style= "background-color:honeydew;"></td>
                                                                 <td style= "background-color:honeydew;">
                                                                    @{
                                                                        Model.SubGroupNameOrLedgerName.Insert(LedgerNo, Ledgers.LedgerNo);
                                                                    }

                                                                    @Html.DisplayFor(model => model.SubGroupNameOrLedgerName[LedgerNo])


                                                                    @Html.HiddenFor(model => model.SubGroupNameOrLedgerName[LedgerNo])
                                                                 </td>
                                                                 <td style= "background-color:honeydew;">@Ledgers.LedgerName</td>
                                                                 <td style= "background-color: floralwhite;">

                                                                    @if ((!DelegateEditStatus && IsSubmittedToACBW) || (!User.IsInRole("Admin") && LedgerIsDelegateSaved))
                                                                    {
                                                                                                                           <div class="form-group"> 

                                                                            @{
                                                                                Model.BudEstCurrFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.BudEstCurrFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }     
                                                                            @Html.TextBoxFor(model => model.BudEstCurrFin[LedgerNo], new { @class = "form-control", id = @name1 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.BudEstCurrFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                            </div> 

                                                                    }
                                                                    else
                                                                    {
                                                                                                                                <div class="form-group">
                                                                            @{
                                                                                Model.BudEstCurrFin.Insert(LedgerNo, LedPrevYearApp != null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }
                                                                            @Html.TextBoxFor(model => model.BudEstCurrFin[LedgerNo], new { @class = "form-control", @id = @name1 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.BudEstCurrFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                                </div>
                                                                    }
                                                                                                                </td>
                                                                                                                <td style= "background-color: floralwhite;">
                                                                                                                        <div class="form-group">
                                                                        @{
                                                                            Model.InterimRevEst.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.InterimRevEst.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                        }
                                                                        @Html.TextBoxFor(model => model.InterimRevEst[LedgerNo], new { @class = "form-control", @id = @name12 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                        @Html.ValidationMessageFor(model => model.InterimRevEst[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                        </div>
                                                                                                                </td>
                                                                                                                <td style= "background-color: floralwhite;">
                                                                                                                        <div class="form-group">
                                                                        @{
                                                                            Model.ProvisionalRevEst.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ProvisionalRevEst.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                        }
                                                                        @Html.TextBoxFor(model => model.ProvisionalRevEst[LedgerNo], new { @class = "form-control", @id = @name13 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                        @Html.ValidationMessageFor(model => model.ProvisionalRevEst[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                        </div>
                                                                                                                </td>
                                                                                                                <td style= "background-color: aliceblue;">
                                                                    @if ((!DelegateEditStatus) || (!User.IsInRole("Admin") && LedgerIsDelegateSaved && Model.EditEnabled != @Ledgers.LedgerNo))
                                                                    {
                                                                                                                            <div class="form-group"> 
                                                                            @{
                                                                                Model.ActPrevFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ActPrevFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            } 
                                                                            @Html.TextBoxFor(model => model.ActPrevFin[LedgerNo], new { @class = "form-control", @id = @name2 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.ActPrevFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                            </div>  
                                                                    }
                                                                    else if (DelegateEditStatus && User.IsInRole("Admin"))
                                                                    {
                                                                                                                            <div class="form-group"> 
                                                                            @{
                                                                                Model.ActPrevFin.Insert(LedgerNo, Convert.ToDecimal(0.00));
                                                                            } 
                                                                            @Html.TextBoxFor(model => model.ActPrevFin[LedgerNo], new { @class = "form-control", @id = @name2 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.ActPrevFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                            </div>  
                                                                    }
                                                                    else
                                                                    {
                                                                                                                           <div class="form-group">
                                                                            @{
                                                                                Model.ActPrevFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ActPrevFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }
                                                                            @Html.TextBoxFor(model => model.ActPrevFin[LedgerNo], new { @class = "form-control", @id = @name2 + @Ledgers.LedgerNo, @dir = "rtl" })
                                                                            @Html.ValidationMessageFor(model => model.ActPrevFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                          </div>  

                                                                    }
                                                                                                                </td>
                                                                                                                <td style= "background-color: aliceblue;">
                                                                    @if ((!DelegateEditStatus) || (!User.IsInRole("Admin") && LedgerIsDelegateSaved && Model.EditEnabled != @Ledgers.LedgerNo))
                                                                    {
                                                                                                                           <div class="form-group">
                                                                            @{
                                                                                Model.ActCurrFinTillsecondQuart.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ActCurrFinTill2ndQuart.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }
                                                                            @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[LedgerNo], new { @class = "form-control", @id = @name3 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                          </div>  
                                                                    }
                                                                    else if (DelegateEditStatus && User.IsInRole("Admin"))
                                                                    {
                                                                                                                            <div class="form-group">
                                                                            @{
                                                                                Model.ActCurrFinTillsecondQuart.Insert(LedgerNo, Convert.ToDecimal(0.00));
                                                                            }
                                                                            @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[LedgerNo], new { @class = "form-control", @id = @name3 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                          </div>  
                                                                    }
                                                                    else
                                                                    {
                                                                                                                           <div class="form-group">
                                                                            @{
                                                                                Model.ActCurrFinTillsecondQuart.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ActCurrFinTill2ndQuart.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }
                                                                            @Html.TextBoxFor(model => model.ActCurrFinTillsecondQuart[LedgerNo], new { @class = "form-control", @id = @name3 + @Ledgers.LedgerNo, @dir = "rtl" })
                                                                            @Html.ValidationMessageFor(model => model.ActCurrFinTillsecondQuart[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                           </div> 
                                                                    }
                                                                                                                </td>
                                                                                                                <td style= "background-color: aliceblue;">
                                                                    @if (User.IsInRole("Admin") && DelegateEditStatus)
                                                                    {
                                                                                                                            <div class="form-group">
                                                                            @{
                                                                                Model.RevEstCurrFin.Insert(LedgerNo, LedPrevYearApp != null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }   
                                                                            @Html.TextBoxFor(model => model.RevEstCurrFin[LedgerNo], new { @type = "number", @class = "form-control", @id = @name4 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" }) 
                                                                            @Html.ValidationMessageFor(model => model.RevEstCurrFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                            </div>
                                                                    }
                                                                    else if (!DelegateEditStatus || (!User.IsInRole("Admin") && LedgerIsDelegateSaved && Model.EditEnabled != @Ledgers.LedgerNo))
                                                                    {
                                                                                                                            <div class="form-group">
                                                                            @{
                                                                                Model.RevEstCurrFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.RevEstCurrFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }
                                                                            @Html.TextBoxFor(model => model.RevEstCurrFin[LedgerNo], new { @class = "form-control", @id = @name4 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.RevEstCurrFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                            </div>
                                                                    }

                                                                    else
                                                                    {
                                                                                                                           <div class="form-group">
                                                                            @if (Ledgerdetails != null && !@Ledgerdetails.ProvisionalRevEst.Equals(Convert.ToDecimal(0.00)) && !LedgerIsDelegateSaved)
                                                                            {
                                                                                Model.RevEstCurrFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ProvisionalRevEst.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }
                                                                            else
                                                                            {
                                                                                Model.RevEstCurrFin.Insert(LedgerNo, LedPrevYearApp != null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }
                                                                            @Html.TextBoxFor(model => model.RevEstCurrFin[LedgerNo], new { @class = "form-control", @id = @name4 + @Ledgers.LedgerNo, @dir = "rtl" }) 
                                                                            @Html.ValidationMessageFor(model => model.RevEstCurrFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                           </div>
                                                                    }
                                                                                                                </td>
                                                                                                                    <td style= "background-color: aliceblue;">
                                                                    @if (!DelegateEditStatus || (!User.IsInRole("Admin") && LedgerIsDelegateSaved))
                                                                    {
                                                                                                                              <div class="form-group"> 
                                                                            @{
                                                                                Model.PerVarRevEstOverBudgEstCurrFin.Insert(LedgerNo, (Ledgerdetails != null && Ledgerdetails.BudEstCurrFin != Convert.ToDecimal(0.0000)) ? (((Convert.ToDecimal(Convert.ToDecimal(Ledgerdetails.RevEstCurrFin.ToString("F4")) - Convert.ToDecimal(Ledgerdetails.BudEstCurrFin.ToString("F4"))) / Convert.ToDecimal(Ledgerdetails.BudEstCurrFin.ToString("F4")))) * 100).ToString("F2") : (0).ToString("F2"));
                                                                            }
                                                                            @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstCurrFin[LedgerNo], "{0:#.##}%", new { @class = "form-control", @id = @name5 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstCurrFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                              </div>
                                                                    }
                                                                    else
                                                                    {
                                                                                                                               <div class="form-group"> 
                                                                            @{
                                                                                Model.PerVarRevEstOverBudgEstCurrFin.Insert(LedgerNo, (LedPrevYearApp != null && LedPrevYearApp.BudEstNextFin != Convert.ToDecimal(0.0000)) ? (((Convert.ToDecimal(Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")) - Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4"))) / Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")))) * 100).ToString("F2") : (0).ToString("F2"));
                                                                            }
                                                                            @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstCurrFin[LedgerNo], "{0:#.##}%", new { @class = "form-control", @id = @name5 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstCurrFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                               </div>
                                                                    }
                                                                                                                    </td>

                                                                                                                    <td style= "background-color: aliceblue;">
                                                                    @if (!DelegateEditStatus || (!User.IsInRole("Admin") && LedgerIsDelegateSaved) && Model.EditEnabled != @Ledgers.LedgerNo)
                                                                    {
                                                                                                                                <div class="form-group">
                                                                            @{  
                                                                                Model.DelegateJustificationRevEst.Insert(LedgerNo, (Ledgerdetails != null && Ledgerdetails.DelegateJustificationRevEst != null) ? Ledgerdetails.DelegateJustificationRevEst.ToString() : "");
                                                                            }  
                                                                            @Html.TextAreaFor(model => model.DelegateJustificationRevEst[LedgerNo], new { @class = "form-control", @id = @name14 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.DelegateJustificationRevEst[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                            </div>

                                                                    }
                                                                    else if (User.IsInRole("Admin") && DelegateEditStatus)
                                                                    {
                                                                                                                            <div class="form-group">
                                                                            @{  
                                                                                Model.DelegateJustificationRevEst.Insert(LedgerNo, "");
                                                                            }  
                                                                            @Html.TextAreaFor(model => model.DelegateJustificationRevEst[LedgerNo], new { @class = "form-control", @id = @name14 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.DelegateJustificationRevEst[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                            </div>
                                                                    }
                                                                    else
                                                                    {
                                                                                                                            <div class="form-group">
                                                                            @{ 
                                                                                Model.DelegateJustificationRevEst.Insert(LedgerNo, (Ledgerdetails != null && Ledgerdetails.DelegateJustificationRevEst != null) ? Ledgerdetails.DelegateJustificationRevEst.ToString() : "");
                                                                            }   
                                                                            @Html.TextAreaFor(model => model.DelegateJustificationRevEst[LedgerNo], new { @class = "form-control", @id = @name14 + @Ledgers.LedgerNo })
                                                                            @Html.ValidationMessageFor(model => model.DelegateJustificationRevEst[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                            </div>

                                                                    }
                                                                                                                </td>
                                                                @if (User.IsInRole("Admin") && AdminEditStatus && (!LedgerIsAdminSaved || Model.EditEnabled == @Ledgers.LedgerNo))
                                                                {
                                                                                                                            <td style= "background-color: aliceblue;">
                                                                                                                                <div class="form-group"> 
                                                                            @{
                                                                                Model.ACAndBWPropRECurrFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ACAndBWPropRECurrFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }

                                                                            @Html.TextBoxFor(model => model.ACAndBWPropRECurrFin[LedgerNo], new { @class = "form-control", @id = @name6 + @Ledgers.LedgerNo, @dir = "rtl" })
                                                                            @Html.ValidationMessageFor(model => model.ACAndBWPropRECurrFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                                </div>
                                                                                                                            </td>
                                                                }
                                                                else if ((User.IsInRole("Admin") && !AdminEditStatus) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0) || (User.IsInRole("Admin") && LedgerIsAdminSaved))
                                                                {
                                                                                                                          <td style= "background-color: aliceblue;">
                                                                                                                              <div class="form-group">
                                                                            @{
                                                                                Model.ACAndBWPropRECurrFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ACAndBWPropRECurrFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }

                                                                            @Html.TextBoxFor(model => model.ACAndBWPropRECurrFin[LedgerNo], new { @class = "form-control", @id = @name6 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.ACAndBWPropRECurrFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                              </div>
                                                                                                                            </td>
                                                                }
                                                                else
                                                                {
                                                                    Model.ACAndBWPropRECurrFin.Insert(LedgerNo, Convert.ToDecimal(0.00));
                                                                }

                                                                @if (User.IsInRole("Admin") && LedgerIsAdminSaved)
                                                                {
                                                                                                                                <td style= "background-color: aliceblue;">
                                                                                                                              <div class="form-group"> 
                                                                            @{
                                                                                Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(LedgerNo, (Ledgerdetails != null && Ledgerdetails.BudEstCurrFin != Convert.ToDecimal(0.0000)) ? (((Convert.ToDecimal(Convert.ToDecimal(Ledgerdetails.ACAndBWPropRECurrFin.ToString("F4")) - Convert.ToDecimal(Ledgerdetails.BudEstCurrFin.ToString("F4"))) / Convert.ToDecimal(Ledgerdetails.BudEstCurrFin.ToString("F4")))) * 100).ToString("F2") : (0).ToString("F2"));
                                                                            }
                                                                            @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[LedgerNo], "{0:#.##}%", new { @class = "form-control", @id = @name17 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                              </div>
                                                                                                                              </td>


                                                                }
                                                                else if (User.IsInRole("Admin") && !LedgerIsAdminSaved)
                                                                {
                                                                                                                                <td style= "background-color: aliceblue;">
                                                                                                                               <div class="form-group"> 
                                                                            @{
                                                                                Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(LedgerNo, (LedPrevYearApp != null && LedPrevYearApp.BudEstNextFin != Convert.ToDecimal(0.0000)) ? (((Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")) - Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4"))) / Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4"))) * 100).ToString("F2") : (0).ToString("F2"));
                                                                            }
                                                                            @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[LedgerNo], "{0:#.##}%", new { @class = "form-control", @id = @name17 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstCurrFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                               </div>
                                                                                                                               </td>
                                                                }
                                                                else
                                                                {
                                                                    Model.PerVarACBWRevEstOverBudgEstCurrFin.Insert(LedgerNo, (0).ToString("F2"));
                                                                }


                                                                @if (User.IsInRole("Admin") && AdminEditStatus && (!LedgerIsAdminSaved || (Model.EditEnabled == @Ledgers.LedgerNo)))
                                                                {
                                                                                                                            <td style= "background-color: aliceblue;">
                                                                                                                                <div class="form-group"> 
                                                                            @{
                                                                                Model.ACBWJustificationRevEst.Insert(LedgerNo, Ledgerdetails != null && Ledgerdetails.ACBWJustificationRevEst != null && Ledgerdetails.ACBWJustificationRevEst != " " ? Ledgerdetails.ACBWJustificationRevEst.ToString() : " ");
                                                                            }

                                                                            @Html.TextBoxFor(model => model.ACBWJustificationRevEst[LedgerNo], new { @class = "form-control", @id = @name15 + @Ledgers.LedgerNo })
                                                                            @Html.ValidationMessageFor(model => model.ACBWJustificationRevEst[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                                </div>
                                                                                                                            </td>
                                                                }
                                                                else if ((User.IsInRole("Admin") && (!AdminEditStatus || LedgerIsAdminSaved)) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                                {
                                                                                                                          <td style= "background-color: aliceblue;">
                                                                                                                              <div class="form-group">
                                                                            @{
                                                                                Model.ACBWJustificationRevEst.Insert(LedgerNo, Ledgerdetails != null && Ledgerdetails.ACBWJustificationRevEst != null && Ledgerdetails.ACBWJustificationRevEst != " " ? Ledgerdetails.ACBWJustificationRevEst.ToString() : "");
                                                                            }

                                                                            @Html.TextBoxFor(model => model.ACBWJustificationRevEst[LedgerNo], new { @class = "form-control", @id = @name15 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.ACBWJustificationRevEst[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                              </div>
                                                                                                                            </td>
                                                                }
                                                                else
                                                                {
                                                                    Model.ACBWJustificationRevEst.Insert(LedgerNo, " ");
                                                                }
                                                                                                                <td style= "background-color:whitesmoke;">
                                                                    @if (User.IsInRole("Admin") && DelegateEditStatus)
                                                                    {
                                                                                                                            <div class="form-group">
                                                                            @{
                                                                                Model.BudgEstNexFin.Insert(LedgerNo, LedPrevYearApp != null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }  

                                                                            @Html.TextBoxFor(model => model.BudgEstNexFin[LedgerNo], new { @class = "form-control", @id = @name7 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.BudgEstNexFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                            </div>

                                                                    }
                                                                    else if (!DelegateEditStatus || (!User.IsInRole("Admin") && LedgerIsDelegateSaved && Model.EditEnabled != @Ledgers.LedgerNo))
                                                                    {
                                                                                                                            <div class="form-group">
                                                                            @{
                                                                                Model.BudgEstNexFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.BudgEstNexFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }

                                                                            @Html.TextBoxFor(model => model.BudgEstNexFin[LedgerNo], new { @class = "form-control", @id = @name7 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.BudgEstNexFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                            </div>

                                                                    }
                                                                    else
                                                                    {
                                                                                                                            <div class="form-group">
                                                                            @if (Ledgerdetails != null && !@Ledgerdetails.ProvisionalRevEst.Equals(Convert.ToDecimal(0.00)) && !LedgerIsDelegateSaved)
                                                                            {
                                                                                Model.BudgEstNexFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ProvisionalRevEst.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }
                                                                            else
                                                                            {
                                                                                Model.BudgEstNexFin.Insert(LedgerNo, LedPrevYearApp != null ? Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }
                                                                            @Html.TextBoxFor(model => model.BudgEstNexFin[LedgerNo], new { @class = "form-control", @id = @name7 + @Ledgers.LedgerNo, @dir = "rtl" })
                                                                            @Html.ValidationMessageFor(model => model.BudgEstNexFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                            </div>

                                                                    }
                                                                                                                </td>
                                                                                                                    <td style= "background-color:whitesmoke;">
                                                                    @if ((User.IsInRole("Admin") && (!AdminEditStatus || LedgerIsAdminSaved)))
                                                                    {
                                                                                                                                <div class="form-group">

                                                                            @{
                                                                                Model.PerVarRevEstOverBudgEstNxtFin.Insert(LedgerNo, (Ledgerdetails != null && Ledgerdetails.RevEstCurrFin != Convert.ToDecimal(0.0000)) ? (((Convert.ToDecimal(Ledgerdetails.BudgEstNexFin.ToString("F4")) - Convert.ToDecimal(Ledgerdetails.RevEstCurrFin.ToString("F4"))) / Convert.ToDecimal(Ledgerdetails.RevEstCurrFin.ToString("F4"))) * 100).ToString("F2") : (0).ToString("F2"));
                                                                            }  

                                                                            @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstNxtFin[LedgerNo], "{0:#.##}%", new { @class = "form-control", @id = @name8 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstNxtFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                                </div>

                                                                    }
                                                                    else
                                                                    {
                                                                                                                                <div class="form-group">
                                                                            @{
                                                                                Model.PerVarRevEstOverBudgEstNxtFin.Insert(LedgerNo, (LedPrevYearApp != null && LedPrevYearApp.BudEstNextFin != Convert.ToDecimal(0.0000)) ? (((Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")) - Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4"))) / Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4"))) * 100).ToString("F2") : (0).ToString("F2"));
                                                                            }   
                                                                            @Html.TextBoxFor(model => model.PerVarRevEstOverBudgEstNxtFin[LedgerNo], "{0:#.##}%", new { @class = "form-control", @id = @name8 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.PerVarRevEstOverBudgEstNxtFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                                </div>

                                                                    }
                                                                                                                    </td>
                                                                                                                    <td style= "background-color:whitesmoke;">
                                                                    @if (!DelegateEditStatus || (!User.IsInRole("Admin") && LedgerIsDelegateSaved && Model.EditEnabled != @Ledgers.LedgerNo))
                                                                    {
                                                                                                                                <div class="form-group">
                                                                            @{  
                                                                                Model.Justification.Insert(LedgerNo, (Ledgerdetails != null && Ledgerdetails.Justification != null) ? Ledgerdetails.Justification.ToString() : "");
                                                                            }  
                                                                            @Html.TextAreaFor(model => model.Justification[LedgerNo], new { @class = "form-control", @id = @name10 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.Justification[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                            </div>

                                                                    }
                                                                    else if (User.IsInRole("Admin") && DelegateEditStatus)
                                                                    {
                                                                                                                            <div class="form-group">
                                                                            @{  
                                                                                Model.Justification.Insert(LedgerNo, "");
                                                                            }  
                                                                            @Html.TextAreaFor(model => model.Justification[LedgerNo], new { @class = "form-control", @id = @name10 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.Justification[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                            </div>
                                                                    }
                                                                    else
                                                                    {
                                                                                                                            <div class="form-group">
                                                                            @{ 
                                                                                Model.Justification.Insert(LedgerNo, (Ledgerdetails != null && Ledgerdetails.Justification != null) ? Ledgerdetails.Justification.ToString() : "");
                                                                            }   
                                                                            @Html.TextAreaFor(model => model.Justification[LedgerNo], new { @class = "form-control", @id = @name10 + @Ledgers.LedgerNo })
                                                                            @Html.ValidationMessageFor(model => model.Justification[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                            </div>

                                                                    }
                                                                                                                </td>
                                                                @if (User.IsInRole("Admin") && AdminEditStatus && (!LedgerIsAdminSaved || (Model.EditEnabled == @Ledgers.LedgerNo)))
                                                                {
                                                                                                                        <td style= "background-color:whitesmoke;">
                                                                                                                            <div class="form-group">
                                                                            @{
                                                                                Model.ACAndBWPropRENxtFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ACAndBWPropRENxtFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }
                                                                            @Html.TextBoxFor(model => model.ACAndBWPropRENxtFin[LedgerNo], new { @class = "form-control", @id = @name9 + @Ledgers.LedgerNo, @dir = "rtl" })
                                                                            @Html.ValidationMessageFor(model => model.ACAndBWPropRENxtFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                            </div>

                                                                                                                        </td>
                                                                }
                                                                else if ((User.IsInRole("Admin") && (!AdminEditStatus || LedgerIsAdminSaved)) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                                {
                                                                                                                        <td style= "background-color:whitesmoke;">
                                                                                                                            <div class="form-group">
                                                                            @{
                                                                                Model.ACAndBWPropRENxtFin.Insert(LedgerNo, Ledgerdetails != null ? Convert.ToDecimal(Ledgerdetails.ACAndBWPropRENxtFin.ToString("F4")) : Convert.ToDecimal(0.00));
                                                                            }   
                                                                            @Html.TextBoxFor(model => model.ACAndBWPropRENxtFin[LedgerNo], new { @class = "form-control", @id = @name9 + @Ledgers.LedgerNo, @dir = "rtl", @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.ACAndBWPropRENxtFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                            </div>

                                                                                                                        </td>
                                                                }
                                                                else
                                                                {
                                                                    Model.ACAndBWPropRENxtFin.Insert(LedgerNo, Convert.ToDecimal(0.00));
                                                                }

                                                                @if ((User.IsInRole("Admin") && LedgerIsAdminSaved) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                                {
                                                                                                                              <td style= "background-color:whitesmoke;">
                                                                                                                                <div class="form-group">

                                                                            @{
                                                                                Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(LedgerNo, (Ledgerdetails != null && Ledgerdetails.ACAndBWPropRECurrFin != Convert.ToDecimal(0.0000)) ? (((Convert.ToDecimal(Ledgerdetails.ACAndBWPropRENxtFin.ToString("F4")) - Convert.ToDecimal(Ledgerdetails.ACAndBWPropRECurrFin.ToString("F4"))) / Convert.ToDecimal(Ledgerdetails.ACAndBWPropRECurrFin.ToString("F4"))) * 100).ToString("F2") : (0).ToString("F2"));
                                                                            }  

                                                                            @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[LedgerNo], "{0:#.##}%", new { @class = "form-control", @id = @name18 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                                </div>
                                                                                                                              </td>

                                                                }
                                                                else if (User.IsInRole("Admin") && !LedgerIsAdminSaved)
                                                                {
                                                                                                                              <td style= "background-color:whitesmoke;">
                                                                                                                                <div class="form-group">
                                                                            @{
                                                                                Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(LedgerNo, (LedPrevYearApp != null && LedPrevYearApp.BudEstNextFin != Convert.ToDecimal(0.0000)) ? (((Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4")) - Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4"))) / Convert.ToDecimal(LedPrevYearApp.BudEstNextFin.ToString("F4"))) * 100).ToString("F2") : (0).ToString("F2"));
                                                                            }   
                                                                            @Html.TextBoxFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[LedgerNo], "{0:#.##}%", new { @class = "form-control", @id = @name18 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.PerVarACBWRevEstOverBudgEstNxtFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                                                                                </div>
                                                                                                                               </td>
                                                                }
                                                                else
                                                                {
                                                                    Model.PerVarACBWRevEstOverBudgEstNxtFin.Insert(LedgerNo, (0).ToString("F2"));
                                                                }

                                                                @if (User.IsInRole("Admin") && AdminEditStatus && (!LedgerIsAdminSaved || (Model.EditEnabled == @Ledgers.LedgerNo)))
                                                                {
                                                                     <td style= "background-color:whitesmoke;">
                                                                        <div class="form-group"> 
                                                                            @{
                                                                                Model.ACBWJustificationBudgEstNxtFin.Insert(LedgerNo, Ledgerdetails != null && Ledgerdetails.ACBWJustificationBudgEstNxtFin != null && Ledgerdetails.ACBWJustificationBudgEstNxtFin != " " ? Ledgerdetails.ACBWJustificationBudgEstNxtFin.ToString() : " ");
                                                                            }

                                                                            @Html.TextAreaFor(model => model.ACBWJustificationBudgEstNxtFin[LedgerNo], new { @class = "form-control", @id = @name16 + @Ledgers.LedgerNo })
                                                                            @Html.ValidationMessageFor(model => model.ACBWJustificationBudgEstNxtFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                         </div>
                                                                     </td>
                                                                }
                                                                else if ((User.IsInRole("Admin") && (!AdminEditStatus || LedgerIsAdminSaved)) || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                                {
                                                                      <td style= "background-color:whitesmoke;">
                                                                        <div class="form-group">
                                                                            @{
                                                                                Model.ACBWJustificationBudgEstNxtFin.Insert(LedgerNo, Ledgerdetails != null && Ledgerdetails.ACBWJustificationBudgEstNxtFin != null && Ledgerdetails.ACBWJustificationBudgEstNxtFin != " " ? Ledgerdetails.ACBWJustificationBudgEstNxtFin.ToString() : "");
                                                                            }

                                                                            @Html.TextAreaFor(model => model.ACBWJustificationBudgEstNxtFin[LedgerNo], new { @class = "form-control", @id = @name16 + @Ledgers.LedgerNo, @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.ACBWJustificationBudgEstNxtFin[LedgerNo], null, new { @class = "text-danger", @style = "font-size: 0.8em;font-style: italic;" })
                                                                        </div>
                                                                     </td>
                                                                }
                                                                else
                                                                {
                                                                    Model.ACBWJustificationBudgEstNxtFin.Insert(LedgerNo, " ");
                                                                }
                                                                    <td style="background-color:honeydew;">  
                                                                      <table class="table" >
                                                                         <thead> </thead>
                                                                         <tbody>
                                                                            @foreach (var LedgerFiles in Model.Filess.Where(a => (a.SubGroupNumber.Equals(@Subs.SubGroupNo) && a.LedgerNumber.Equals(@Ledgers.LedgerNo))))
                                                                            {
                                                                                var FinalSubmitStatus = (from a in Model.Statuss where (a.SectionNumber == 0 && a.GroupNumber.Equals("0")) select a.AdminEditStatus).Count();
                                                                                                                                        <tr>
                                                                                    @if ((User.IsInRole("Admin") && AdminEditStatus) || !User.IsInRole("Admin") || (User.IsInRole("Admin") && (FinalSubmitStatus > 0)))
                                                                                    {
                                                                                                                                                    <td style="border:none">@Html.ActionLink(@LedgerFiles.FileName, null, null, null, new { href = @LedgerFiles.SupportingDocumentPath, target = "_blank" })</td>
                                                                                        /*<td><input id="@view" class="ViewFile  btn-link" style="border:none; outline:none;  background-color: transparent;" formaction="~/Tabs/ViewFile" type="submit" value= "@LedgerFiles.FileName" /></td>*/
                                                                                    }
                                                                                    @if (!User.IsInRole("Admin") && GroupsStatusRowCount == 0 && !LedgerIsDelegateSaved)
                                                                                    {
                                                                                                                                                   <td style="border:none"><input id="@delete@Ledgers.LedgerNo" class="Submit btn-link" style="border:none; outline:none;  background-color: transparent;" formaction="~/Tabs/Delete" type="submit" value="Delete"/> </td>
                                                                                    }
                                                                                                                                         </tr>      

                                                                            }
                                                                         </tbody>
                                                                     </table>
                                                                   </td>
                                                                  <td style="background-color:honeydew;"></td>
                                                          </tr>

                                                            ++LedgerNo;
                                                        }

                                                        Count = LedgerNo - 1;
                                                    }

                                                    Count++;
                                                    TableCount++;
                                                }
                                                                    <tr>
                                                                        <!--td>
                                                                        </td-->
                                                                        <td>
                                                                        </td>
                                                                        <td>
                                                                            Sub-Total
                                                                        </td>
                                                                        <td>
                                                                            Sub-Total
                                                                        </td>

                                                                        <td id="@Sumname1-Total">
                                                                            @SumBudEstCurrFin.ToString("F4")
                                                                        </td>
                                                                        <td></td>

                                                                        <td></td>

                                                    @if ((User.IsInRole("Admin") && IsSubmittedToACBW) || !User.IsInRole("Admin"))
                                                    {
                                                                            <td id="@Sumname2-Total">
                                                            @SumActPrevFin.ToString("F4")
                                                                                </td>
                                                    }
                                                    else
                                                    {
                                                                             <td id="@Sumname2-Total">
                                                                               0.00
                                                                            </td>
                                                    }
                                                    @if ((User.IsInRole("Admin") && IsSubmittedToACBW) || !User.IsInRole("Admin"))
                                                    {
                                                                            <td id="@Sumname3-Total">
                                                            @SumActCurrFinTill2ndQuart.ToString("F4")
                                                                            </td>
                                                    }
                                                    else
                                                    {
                                                                             <td id="@Sumname3-Total">
                                                                               0.00
                                                                            </td>
                                                    }
                                                    @if ((User.IsInRole("Admin") && IsSubmittedToACBW) || !User.IsInRole("Admin"))
                                                    {
                                                                                <td id="@Sumname4-Total">
                                                            @SumRevEstCurrFin.ToString("F4")
                                                                                </td>
                                                    }
                                                    else
                                                    {
                                                                             <td id="@Sumname4-Total">
                                                                               0.00
                                                                             </td>
                                                    }
                                                                        <td id="@Sumname5-Total">
                                                        @SumPerVarRevEstOverBudgEstCurrFin.ToString("F2") %
                                                                        </td>
                                                                        <td></td>
                                                    @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                    {
                                                                                <td id="@Sumname6-Total">
                                                            @SumACAndBWPropRECurrFin.ToString("F4")
                                                                                </td>
                                                    }
                                                    @if (User.IsInRole("Admin"))
                                                    {
                                                                            <td id="@Sumname11-Total">
                                                            @SumPerVarACBWRevEstOverBudgEstCurrFin.ToString("F2") %

                                                                            </td>
                                                    }
                                                    @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                    {
                                                                            <td></td>
                                                    }
                                                                        <td id="@Sumname7-Total">
                                                        @SumBudgEstNexFin.ToString("F4")
                                                                        </td>
                                                                        <td id="@Sumname8-Total">
                                                        @SumPerVarRevEstOverBudgEstNxtFin.ToString("F2") %
                                                                        </td>
                                                                        <td></td>
                                                    @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                    {
                                                                                <td id="@Sumname9-Total">
                                                            @SumACAndBWPropRENxtFin.ToString("F4")
                                                                                </td>
                                                    }
                                                    @if (User.IsInRole("Admin"))
                                                    {
                                                                                <td id="@Sumname12-Total">
                                                            @SumPerVarACBWRevEstOverBudgEstNxtFin.ToString("F2") %
                                                                                </td>
                                                    }
                                                    @if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && !FinalAdminEditStatus && FinalAdminEditCount > 0))
                                                    {
                                                                                <td></td>
                                                    }
                                                                        <td style="border:none;"></td>
                                                                        <td style="border:none;"></td>

                                                                    </tr>
                                                        </tbody>
                                </table>
                                CounterBody++;
                }
                

               

                OuterBodyCount++;
            }

<style>
    /*thead {
            display: table-row-group;
        }*/
    thead, tbody, tr {
        page-break-inside: avoid !important;
    }
</style>
