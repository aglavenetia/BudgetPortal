@model SARAS_OBJ.SectionIncreseObj
@{
    Layout = "~/Views/Shared/_UserLayout.cshtml";
    ViewBag.Title = "Section Breackup for OASIS";
}

<h2 class="text-center">Submit Section Breakup for OASIS</h2>
<hr />
@using (Html.BeginForm("SecBreak", "SectionBreakup", FormMethod.Post, new { autocomplete = "off" }))
{
    @Html.AntiForgeryToken()
<div class="row">
    <div class="col-md-3">
        <label>Enter Aff. No.</label>
    </div>
    <div class="col-md-3">
        <input type="text" asp-for="Affno" class="form-control" />
    </div>
    <div class="col-md-3">
        <input type="submit" value="Search"  name="btnSearch" class="btn btn-primary actionBtn" onclick="return true;" />
            <a asp-action="SecBreak" class="btn btn-default actionBtn">Clear</a>
    </div>
    <br>
</div>
    
    @if (Model !=null)
    {
        <div class="text-right">
            <a asp-controller="SectionBreakup" asp-action="PreviousYearSections" asp-route-id="@Model.Affno" class="btn btn-default actionBtn"
            target="_blank">View Previous year section details of OASIS</a>
        </div>
        <br />
        <div id="divFullDetails">
            <div class="table-responsive">
                <table class="table table-bordered">
                    <tr class="tableHeaderBg">
                        <th style="width:100px;">Class</th>
                        <th>Operational Sections</th>
                        <th>Additional Sections Required</th>
                        <th>Total Sections</th>
                    </tr>

                    <tr>
                        <td>1</td>
                        <td>
                            
                            @Html.HiddenFor(x => x.Regno)
                            @Html.HiddenFor(x => x.Userid)
                            @Html.HiddenFor(x => x.SchoolName)
                            <input type="hidden" asp-for="SchoolStatus" >
                            <input asp-for="SEC_1" class="form-control inputControl SecIncCount" maxlength="2" />
                            <span asp-validation-for="SEC_1" class="text-danger"></span>
                        </td>
                        <td>
                            <input asp-for="AdditionalSEC_1" class="form-control inputControl SecIncCount" maxlength="2" />
                            <span asp-validation-for="AdditionalSEC_1" class="text-danger"></span>
                        </td>
                        <td>
                            <input readonly asp-for="TotalSEC_1" class="form-control inputControl" maxlength="2" />
                            <span asp-validation-for="TotalSEC_1" class="text-danger"></span>
                        </td>
                    </tr>
                    <tr>
                        <td>2</td>
                        <td>
                            <input asp-for="SEC_2" class="form-control inputControl SecIncCount" maxlength="2" />
                            <span asp-validation-for="SEC_2" class="text-danger"></span>
                        </td>
                        <td>
                            <input asp-for="AdditionalSEC_2" class="form-control inputControl SecIncCount" maxlength="2" />
                            <span asp-validation-for="AdditionalSEC_2" class="text-danger"></span>
                        </td>
                        <td>
                            <input readonly asp-for="TotalSEC_2" class="form-control inputControl" maxlength="2" />
                            <span asp-validation-for="TotalSEC_2" class="text-danger"></span>
                        </td>
                    </tr>
                    <tr>
                        <td>3</td>
                        <td>
                            <input asp-for="SEC_3" class="form-control inputControl SecIncCount" maxlength="2" />
                            <span asp-validation-for="SEC_3" class="text-danger"></span>
                        </td>
                        <td>
                            <input asp-for="AdditionalSEC_3" class="form-control inputControl SecIncCount" maxlength="2" />
                            <span asp-validation-for="AdditionalSEC_3" class="text-danger"></span>
                        </td>
                        <td>
                            <input readonly asp-for="TotalSEC_3" class="form-control inputControl" maxlength="2" />
                            <span asp-validation-for="TotalSEC_3" class="text-danger"></span>
                        </td>
                    </tr>
                    <tr>
                        <td>4</td>
                        <td>
                            <input asp-for="SEC_4" class="form-control inputControl SecIncCount" maxlength="2" />
                            <span asp-validation-for="SEC_4" class="text-danger"></span>
                        </td>
                        <td>
                            <input asp-for="AdditionalSEC_4" class="form-control inputControl SecIncCount" maxlength="2" />
                            <span asp-validation-for="AdditionalSEC_4" class="text-danger"></span>
                        </td>
                        <td>
                            <input readonly asp-for="TotalSEC_4" class="form-control inputControl" maxlength="2" />
                            <span asp-validation-for="TotalSEC_4" class="text-danger"></span>
                        </td>
                    </tr>
                    <tr>
                        <td>5</td>
                        <td>
                            <input asp-for="SEC_5" class="form-control inputControl SecIncCount" maxlength="2" />
                            <span asp-validation-for="SEC_5" class="text-danger"></span>
                        </td>
                        <td>
                            <input asp-for="AdditionalSEC_5" class="form-control inputControl SecIncCount" maxlength="2" />
                            <span asp-validation-for="AdditionalSEC_5" class="text-danger"></span>
                        </td>
                        <td>
                            <input readonly asp-for="TotalSEC_5" class="form-control inputControl" maxlength="2" />
                            <span asp-validation-for="TotalSEC_5" class="text-danger"></span>
                        </td>
                    </tr>
                    <tr>
                        <td>6</td>
                        <td>
                            <input asp-for="SEC_6" class="form-control inputControl SecIncCount" maxlength="2" />
                            <span asp-validation-for="SEC_6" class="text-danger"></span>
                        </td>
                        <td>
                            <input asp-for="AdditionalSEC_6" class="form-control inputControl SecIncCount" maxlength="2" />
                            <span asp-validation-for="AdditionalSEC_6" class="text-danger"></span>
                        </td>
                        <td>
                            <input readonly asp-for="TotalSEC_6" class="form-control inputControl" maxlength="2" />
                            <span asp-validation-for="TotalSEC_6" class="text-danger"></span>
                        </td>
                    </tr>
                    <tr>
                        <td>7</td>
                        <td>
                            <input asp-for="SEC_7" class="form-control inputControl SecIncCount" maxlength="2" />
                            <span asp-validation-for="SEC_7" class="text-danger"></span>
                        </td>
                        <td>
                            <input asp-for="AdditionalSEC_7" class="form-control inputControl SecIncCount" maxlength="2" />
                            <span asp-validation-for="AdditionalSEC_7" class="text-danger"></span>
                        </td>
                        <td>
                            <input readonly asp-for="TotalSEC_7" class="form-control inputControl" maxlength="2" />
                            <span asp-validation-for="TotalSEC_7" class="text-danger"></span>
                        </td>
                    </tr>
                    <tr>
                        <td>8</td>
                        <td>
                            <input asp-for="SEC_8" class="form-control inputControl SecIncCount" maxlength="2" />
                            <span asp-validation-for="SEC_8" class="text-danger"></span>
                        </td>
                        <td>
                            <input asp-for="AdditionalSEC_8" class="form-control inputControl SecIncCount" maxlength="2" />
                            <span asp-validation-for="AdditionalSEC_8" class="text-danger"></span>
                        </td>
                        <td>
                            <input readonly asp-for="TotalSEC_8" class="form-control inputControl" maxlength="2" />
                            <span asp-validation-for="TotalSEC_8" class="text-danger"></span>
                        </td>
                    </tr>

                    @if (Model.SchoolStatus == "2" || Model.SchoolStatus == "3")
                    {
                        <tr>
                            <td>9</td>
                            <td>
                                <input asp-for="SEC_9" class="form-control inputControl SecIncCount" maxlength="2" />
                                <span asp-validation-for="SEC_9" class="text-danger"></span>
                            </td>
                            <td>
                                <input asp-for="AdditionalSEC_9" class="form-control inputControl SecIncCount" maxlength="2" />
                                <span asp-validation-for="AdditionalSEC_9" class="text-danger"></span>
                            </td>
                            <td>
                                <input readonly asp-for="TotalSEC_9" class="form-control inputControl" maxlength="2" />
                                <span asp-validation-for="TotalSEC_9" class="text-danger"></span>
                            </td>
                        </tr>
                        <tr>
                            <td>10</td>
                            <td>
                                <input asp-for="SEC_10" class="form-control inputControl SecIncCount" maxlength="2" />
                                <span asp-validation-for="SEC_10" class="text-danger"></span>
                            </td>
                            <td>
                                <input asp-for="AdditionalSEC_10" class="form-control inputControl SecIncCount" maxlength="2" />
                                <span asp-validation-for="AdditionalSEC_10" class="text-danger"></span>
                            </td>
                            <td>
                                <input readonly asp-for="TotalSEC_10" class="form-control inputControl" maxlength="2" />
                                <span asp-validation-for="TotalSEC_10" class="text-danger"></span>
                            </td>
                        </tr>
                        @if (Model.SchoolStatus != "2")
                        {
                            <tr>
                                <td>11</td>
                                <td>
                                    <input asp-for="SEC_11" class="form-control inputControl SecIncCount" maxlength="2" />
                                    <span asp-validation-for="SEC_11" class="text-danger"></span>
                                </td>
                                <td>
                                    <input asp-for="AdditionalSEC_11" class="form-control inputControl SecIncCount" maxlength="2" />
                                    <span asp-validation-for="AdditionalSEC_11" class="text-danger"></span>
                                </td>
                                <td>
                                    <input readonly asp-for="TotalSEC_11" class="form-control inputControl" maxlength="2" />
                                    <span asp-validation-for="TotalSEC_11" class="text-danger"></span>
                                </td>
                            </tr>
                            <tr>
                                <td>12</td>
                                <td>
                                    <input asp-for="SEC_12" class="form-control inputControl SecIncCount" maxlength="2" />
                                    <span asp-validation-for="SEC_12" class="text-danger"></span>
                                </td>
                                <td>
                                    <input asp-for="AdditionalSEC_12" class="form-control inputControl SecIncCount" maxlength="2" />
                                    <span asp-validation-for="AdditionalSEC_12" class="text-danger"></span>
                                </td>
                                <td>
                                    <input readonly asp-for="TotalSEC_12" class="form-control inputControl" maxlength="2" />
                                    <span asp-validation-for="TotalSEC_12" class="text-danger"></span>
                                </td>
                            </tr>
                        }
                    }

                    @*<tr>
            <th>Total</th>
            <th>
            <input readonly asp-for="TotalSectionRunning" class="form-control inputControl" maxlength="3" />
            </th>
            <th>
            <input readonly asp-for="TotalRequiredSections" class="form-control inputControl" maxlength="3" />
            </th>
            <th>
            <input readonly asp-for="GrandTotalSections" class="form-control inputControl" maxlength="3" />
            </th>
            </tr>*@
                </table>
            </div>


            <span asp-validation-for="GrandTotalSections" class="text-danger"></span>
            <div class="text-center">
                <input type="submit" value="Submit" name="btnSaveData" class="btn btn-primary actionBtn" />
            </div>
        </div>
    }
   
    
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script type="text/javascript">

        function SectionSubmitClarification() {
            return confirm("Modifications in Sections will not be allowed Further. Click on Cancel button if you want to modify the Sections. Click on OK button to proceed to save the Section details in OASIS.");
        }

        $(document).on('change', '.SecIncCount', function () {
            var totalSec = 0;
            var arr = this.id.split('SEC_');
            var ActSec = parseInt($("#SEC_" + arr[1]).val());
            var AddSec = parseInt($("#AdditionalSEC_" + arr[1]).val());
            totalSec = ActSec + AddSec;
            //alert(totalSec);
            if (!($("#AdditionalSEC_" + arr[1]).val() == undefined || $("#AdditionalSEC_" + arr[1]).val() == "NaN" || $("#AdditionalSEC_" + arr[1]).val() == "")) {
                $("#TotalSEC_" + arr[1]).val(totalSec);
            }

        });

    </script>
}




==========================Controller Action

public IActionResult SecBreak()
        {
            string isuserexist = HttpContext.Session.GetString("Userid");
            if (string.IsNullOrEmpty(isuserexist))
            {
                return RedirectToAction("Logout", "Login");
            }
            
            return View();
        }
        [HttpPost]
        public IActionResult SecBreak(SectionIncreseObj fobj, string btnSaveData,string btnSearch)
        {
            string isuserexist = HttpContext.Session.GetString("Userid");
            if (string.IsNullOrEmpty(isuserexist))
            {
                return RedirectToAction("Logout", "Login");
            }
            if(string.IsNullOrEmpty(btnSearch)==false)
            {
                SectionIncreseObj model = new SectionIncreseObj();
                model.Regno = "";
                model.Userid = fobj.Affno;
                var result = stdDAL.GetDetailsForSectionIncrease(fobj.Affno, "", "10");
                if (result != "Error")
                {
                    model = JsonConvert.DeserializeObject<List<SectionIncreseObj>>(result)[0];
                    model.Affno=fobj.Affno;
                    return View(model);
                }
            }
            else if (string.IsNullOrEmpty(btnSaveData) == false)
            {
                int TotalNo_ofRoomsForSectionIncrease = 0, TotalGrantedSections = 0, ClassRoomsUpto8 = 0, ClassRoom9And10 = 0,
                               permissibleSecForSrSec = 0, PermissibleClassRoomsForSec = 0;
                if (string.IsNullOrEmpty(fobj.TotalSEC_1) == false)
                {

                    TotalNo_ofRoomsForSectionIncrease += Convert.ToInt32(fobj.TotalSEC_1) + Convert.ToInt32(fobj.TotalSEC_2) +
                        Convert.ToInt32(fobj.TotalSEC_3) + Convert.ToInt32(fobj.TotalSEC_4) + Convert.ToInt32(fobj.TotalSEC_5) +
                        Convert.ToInt32(fobj.TotalSEC_6) + Convert.ToInt32(fobj.TotalSEC_7) + Convert.ToInt32(fobj.TotalSEC_8);
                    ClassRoomsUpto8 = TotalNo_ofRoomsForSectionIncrease;
                    if (fobj.SchoolStatus == "2" || fobj.SchoolStatus == "3")
                    {
                        TotalNo_ofRoomsForSectionIncrease += Convert.ToInt32(fobj.TotalSEC_9) + Convert.ToInt32(fobj.TotalSEC_10);
                        ClassRoom9And10 = Convert.ToInt32(fobj.TotalSEC_9) + Convert.ToInt32(fobj.TotalSEC_10);
                    }

                    if (fobj.SchoolStatus == "3")
                    {
                        TotalNo_ofRoomsForSectionIncrease += Convert.ToInt32(fobj.TotalSEC_11) + Convert.ToInt32(fobj.TotalSEC_12);

                        try
                        {
                            //PermissibleClassRoomsForSec = ClassRoomsUpto8 / 2;
                            //int X_plusY = ClassRoomsUpto8 + PermissibleClassRoomsForSec;
                            //permissibleSecForSrSec = X_plusY / 2;
                            permissibleSecForSrSec = (ClassRoomsUpto8 + ClassRoom9And10 + Convert.ToInt32(fobj.TotalSEC_11) + Convert.ToInt32(fobj.TotalSEC_12)) / 3;
                            if (Convert.ToInt32(fobj.TotalSEC_11) + Convert.ToInt32(fobj.TotalSEC_12) > permissibleSecForSrSec)
                            {
                                TempData["UserMessage"] = "You are not allowed to run more than 1/3 of total section in Sr. Secondary.";
                                ViewBag.errorStatus = "TRUE";
                                return View(fobj);
                            }
                        }
                        catch { }
                    }
                    DataSet dsArea = stdDAL.GetSchoolAreaData(fobj.Affno, "", "11");
                    string PermissibleSections = "0";
                    if (dsArea.Tables.Count>0 && dsArea.Tables[0].Rows.Count > 0)
                    {
                        CommonFunctions f1 = new CommonFunctions();
                        string location = Convert.ToString(dsArea.Tables[0].Rows[0]["locationofSchool"]);
                        location = location == "" ? "1" : location;
                        PermissibleSections = f1.ValdateSchoolClassRooms_forExisting(fobj.SchoolStatus, location, Convert.ToInt32(dsArea.Tables[0].Rows[0]["scharea"])).ToString();
                    }
                    if(TotalNo_ofRoomsForSectionIncrease >Convert.ToInt32(PermissibleSections))
                    {
                        TempData["UserMessage"] = "Total required section exceeds the total permissible sections.";
                        ViewBag.errorStatus = "TRUE";
                        return View(fobj);
                    }
                    string remoteIpAddress = HttpContext.Session.GetString("IPAddress");
                    fobj.Regno = "";
                    fobj.Userid = fobj.Affno;
                    int rstt = stdDAL.SaveDetailsForSectionIncreaseInternal(fobj, remoteIpAddress, TotalNo_ofRoomsForSectionIncrease); //objPartA.TotalNo_ofRoomsForSectionIncrease ?? 0);
                    if (rstt > 0)
                    {
                        TempData["UserMessage"] = "Data saved successfully.";
                        return RedirectToAction("SecBreak", "SectionBreakup");
                    }
                }
            }
            if (string.IsNullOrEmpty(btnSaveData) == false)
                TempData["UserMessage"] = "Data not saved. Please try again.";
            else
                TempData["UserMessage"] = "Data not available. Please try again.";
            ViewBag.errorStatus = "TRUE";
            return View(fobj);
        }


===

 public string GetDetailsForSectionIncrease(string userid, string Regno, string Flag)
        {
            using (SqlConnection con = new SqlConnection(WebAppSetting.ConnectionString))
            {
                DataTable dt = new DataTable();
                try
                {
                    using (SqlCommand cmd = new SqlCommand("OP_StudentDetail", con))
                    {
                        con.Open();
                        cmd.CommandType = CommandType.StoredProcedure;
                        cmd.Parameters.AddWithValue("@UserId", userid);
                        cmd.Parameters.AddWithValue("@regno", Regno);
                        cmd.Parameters.AddWithValue("@Flag", Flag);
                        SqlDataAdapter da = new SqlDataAdapter(cmd);
                        da.Fill(dt);
                        if (dt.Rows.Count > 0)
                        {
                            return JsonConvert.SerializeObject(dt);
                        }
                        else
                        {
                            return ("Error");
                        }
                    }
                }
                catch (Exception ex)
                {
                }
                return ("Error");
            }
        }


